"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkthree_shader_env01"] = self["webpackChunkthree_shader_env01"] || []).push([["main~src_js_components_A"],{

/***/ "./src/js/components/ArcImages.js":
/*!****************************************!*\
  !*** ./src/js/components/ArcImages.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ArcImages)\n/* harmony export */ });\n/* harmony import */ var _BaseComponent__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./BaseComponent */ \"./src/js/components/BaseComponent.js\");\n/* harmony import */ var _vendor_arts_infinite_list_arts_infinite_list_min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../vendor/arts-infinite-list/arts-infinite-list.min.js */ \"./src/js/vendor/arts-infinite-list/arts-infinite-list.min.js\");\n/* harmony import */ var _vendor_arts_infinite_list_arts_infinite_list_min_js__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_vendor_arts_infinite_list_arts_infinite_list_min_js__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! gsap/ScrollTrigger */ \"./node_modules/gsap/ScrollTrigger.js\");\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\n\n\n\n\n// Register ScrollTrigger plugin\ngsap__WEBPACK_IMPORTED_MODULE_2__.gsap.registerPlugin(gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_3__.ScrollTrigger);\nvar ArcImages = /*#__PURE__*/function (_BaseComponent) {\n  function ArcImages(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, ArcImages);\n    _this = _callSuper(this, ArcImages, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        loop: false,\n        minCloneLoopRounds: 1,\n        maxCloneLoopRounds: 1,\n        progressEffect: {\n          preset: \"arc\",\n          intensity: 0.4\n        }\n      },\n      // Component inner elements\n      innerElements: {\n        lanes: \".js-arc-images__list-lane\",\n        items: \".js-arc-images__list-item\"\n      }\n    }]);\n    _this._handlers = {\n      progressScene: _this._onProgressScene.bind(_this)\n    };\n    _this.setup();\n    return _this;\n  }\n  _inherits(ArcImages, _BaseComponent);\n  return _createClass(ArcImages, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      this._createInfiniteList();\n      this._animateOnScroll();\n      if (this.infiniteList) {\n        this.infiniteList.pluginsReady.then(function () {\n          _this2.infiniteList.update();\n          _this2._onProgressScene({\n            progress: 0.0001\n          });\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.infiniteList) {\n        this.infiniteList.destroy();\n      }\n      if (this.animationScroll && typeof this.animationScroll.kill === \"function\") {\n        this.animationScroll.kill();\n      }\n    }\n  }, {\n    key: \"_createInfiniteList\",\n    value: function _createInfiniteList() {\n      this.infiniteList = new (_vendor_arts_infinite_list_arts_infinite_list_min_js__WEBPACK_IMPORTED_MODULE_1___default())(this.element, {\n        direction: \"horizontal\",\n        listElementsSelector: this.innerSelectors.items,\n        multiLane: {\n          laneSelector: this.innerSelectors.lanes,\n          laneOptionsAttribute: \"data-arts-infinite-list-options\"\n        },\n        autoClone: this.options.loop,\n        loop: this.options.loop,\n        minCloneLoopRounds: this.options.minCloneLoopRounds,\n        maxCloneLoopRounds: this.options.maxCloneLoopRounds,\n        plugins: {\n          scroll: false,\n          speedEffect: this.options.speedEffect,\n          progressEffect: this.options.progressEffect\n        }\n      });\n    }\n  }, {\n    key: \"_animateOnScroll\",\n    value: function _animateOnScroll() {\n      this.animationScroll = gsap_ScrollTrigger__WEBPACK_IMPORTED_MODULE_3__.ScrollTrigger.create({\n        trigger: this.element,\n        start: function start() {\n          return \"top+=10% bottom\";\n        },\n        end: function end() {\n          return \"bottom+=20% top\";\n        },\n        onUpdate: this._handlers.progressScene,\n        scrub: 1\n      });\n    }\n  }, {\n    key: \"_onProgressScene\",\n    value: function _onProgressScene() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          progress: 0\n        },\n        progress = _ref2.progress;\n      this.infiniteList.controller.setProgress(progress);\n    }\n  }]);\n}(_BaseComponent__WEBPACK_IMPORTED_MODULE_0__[\"default\"]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/ArcImages.js\n");

/***/ }),

/***/ "./src/js/components/AutoScrollNext.js":
/*!*********************************************!*\
  !*** ./src/js/components/AutoScrollNext.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ AutoScrollNext)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar AutoScrollNext = /*#__PURE__*/function (_BaseComponent) {\n  function AutoScrollNext(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, AutoScrollNext);\n    _this = _callSuper(this, AutoScrollNext, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // External options from app.options.autoScrollNext\n      defaults: app.options.autoScrollNext,\n      // Component inner elements\n      innerElements: {\n        canvasWrapper: '.js-auto-scroll-next__canvas-wrapper',\n        fixedWrapper: '.js-auto-scroll-next__fixed-wrapper',\n        scrollDownWrapper: '.js-auto-scroll-next__scroll-down-wrapper',\n        nextHeader: '.js-auto-scroll-next__next-header',\n        nextLinks: '.js-auto-scroll-next__next-header a',\n        progressLine: '.js-auto-scroll-next__progress-line',\n        mediaWrapper: '.js-auto-scroll-next__wrapper-media',\n        media: '.js-auto-scroll-next__media'\n      }\n    }]);\n    _this._handlers = {\n      clickHeader: _this._onClickHeader.bind(_this),\n      toggleScene: _this._onToggleScene.bind(_this),\n      progressScene: _this._onProgressScene.bind(_this),\n      transitionStart: _this._onTransitionStart.bind(_this),\n      transitionEnd: _this._onTransitionEnd.bind(_this),\n      visibleUpdate: _this._onVisibleUpdate.bind(_this),\n      resize: app.utilities.debounce(_this._onResize.bind(_this), app.utilities.getDebounceTime()),\n      update: _this._updateCurtains.bind(_this)\n    };\n    _this.transitionActive = false;\n    _this.setup();\n    return _this;\n  }\n  _inherits(AutoScrollNext, _BaseComponent);\n  return _createClass(AutoScrollNext, [{\n    key: \"setup\",\n    value: function setup() {\n      var _this2 = this;\n      var AJAX = app.componentsManager.getComponentByName('AJAX');\n      document.fonts.ready.then(function () {\n        return _this2.mount();\n      }).then(function () {\n        if (AJAX && AJAX.running) {\n          document.addEventListener('arts/barba/transition/end', function () {\n            _this2.init();\n            _this2._initAnimations();\n          }, {\n            once: true\n          });\n        } else {\n          _this2.init();\n          _this2._initAnimations();\n        }\n\n        // Set component ready on the next tick\n        gsap.ticker.add(_this2._setReady.bind(_this2), true, false);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      var _this3 = this;\n      this.updateRef('headerRef', 'Header');\n      this.maskRef = this.components.filter(function (component) {\n        return component.name === 'Mask';\n      });\n      this._createFixedScene();\n      if (!!app.options.ajax) {\n        this._createPrefetchScene();\n      }\n      if (!!this.options.webGL && !!this.options.webGL.enabled) {\n        this.setLoading(true);\n        app.componentsManager.load({\n          properties: app.components['CurtainsBase']\n        }).then(function (module) {\n          _this3._initCurtains(module);\n          _this3._attachEvents();\n          _this3.setLoading(false);\n        });\n      } else {\n        this._attachEvents();\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      if (this.curtains) {\n        document.addEventListener('arts/barba/transition/end', this._handlers.transitionEnd, {\n          once: true\n        });\n      }\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      if (this.elements.nextHeader[0]) {\n        this.elements.nextHeader[0].addEventListener('click', this._handlers.clickHeader, true);\n      }\n      if (this.elements.mediaWrapper[0]) {\n        this.elements.mediaWrapper[0].addEventListener('click', this._handlers.clickHeader, true);\n      }\n      if (this.elements.scrollDownWrapper[0]) {\n        this.elements.scrollDownWrapper[0].addEventListener('click', this._handlers.clickHeader, true);\n      }\n      this.intersectionInstance = new IntersectionObserver(this._handlers.visibleUpdate);\n      this.intersectionInstance.observe(this.element);\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      if (this.elements.nextHeader[0]) {\n        this.elements.nextHeader[0].removeEventListener('click', this._handlers.clickHeader, true);\n      }\n      if (this.elements.mediaWrapper[0]) {\n        this.elements.mediaWrapper[0].removeEventListener('click', this._handlers.clickHeader, true);\n      }\n      if (this.elements.scrollDownWrapper[0]) {\n        this.elements.scrollDownWrapper[0].removeEventListener('click', this._handlers.clickHeader, true);\n      }\n      if (this.intersectionInstance) {\n        this.intersectionInstance.disconnect();\n      }\n    }\n  }, {\n    key: \"_createFixedScene\",\n    value: function _createFixedScene() {\n      this.fixedScene = ScrollTrigger.create({\n        start: function start() {\n          return \"top top\";\n        },\n        end: function end() {\n          return \"bottom+=100% bottom\";\n        },\n        pin: this.elements.fixedWrapper[0],\n        pinSpacing: true,\n        animation: this._getProgressScene(),\n        trigger: this.element,\n        invalidateOnRefresh: true,\n        scrub: true,\n        onUpdate: this._handlers.progressScene,\n        onRefresh: this._handlers.resize,\n        onEnter: this._handlers.toggleScene,\n        onLeaveBack: this._handlers.toggleScene,\n        onLeave: this._handlers.transitionStart\n      });\n    }\n  }, {\n    key: \"_createPrefetchScene\",\n    value: function _createPrefetchScene() {\n      var _this4 = this;\n      this.prefetchScene = ScrollTrigger.create({\n        trigger: this.element,\n        start: function start() {\n          return \"top-=100% bottom\";\n        },\n        onEnter: function onEnter() {\n          if (typeof barba !== 'undefined' && _this4.elements.nextLinks.length) {\n            var url = _this4.elements.nextLinks[0].getAttribute('href');\n            if (url) {\n              barba.prefetch(url);\n            }\n            if (_this4.prefetchScene) {\n              _this4.prefetchScene.kill();\n            }\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_onToggleScene\",\n    value: function _onToggleScene() {\n      this._toggleScrollingClass(this.fixedScene.isActive);\n      this._updateMask();\n      this._updateCurtains();\n    }\n  }, {\n    key: \"_updateCurtains\",\n    value: function _updateCurtains() {\n      if (!!this.curtains) {\n        this.curtains.instance.resize();\n      }\n    }\n  }, {\n    key: \"_updateMask\",\n    value: function _updateMask() {\n      if (this.maskRef && this.maskRef[0]) {\n        this.maskRef[0].update();\n      }\n    }\n  }, {\n    key: \"_getProgressScene\",\n    value: function _getProgressScene() {\n      var tl = gsap.timeline({\n        paused: true\n      });\n      if (this.elements.progressLine) {\n        tl.fromTo(this.elements.progressLine, {\n          scaleX: 0,\n          transformOrigin: 'left center'\n        }, {\n          scaleX: 1,\n          ease: 'none'\n        }, 'start');\n      }\n      if (this.elements.scrollDownWrapper[0]) {\n        tl.fromTo(this.elements.scrollDownWrapper[0], {\n          y: '0%',\n          autoAlpha: 1\n        }, {\n          y: '-20%',\n          autoAlpha: 0,\n          ease: 'none'\n        }, 'start');\n      }\n      if (this.elements.mediaWrapper[0]) {\n        var scalePlaneFrom, scalePlaneTo;\n        if (typeof this.options.onSceneProgress.scalePlane === 'number' && typeof this.options.onSceneIdle.scalePlane === 'number') {\n          scalePlaneFrom = this.options.onSceneIdle.scalePlane;\n          scalePlaneTo = this.options.onSceneProgress.scalePlane;\n        }\n        if (scalePlaneFrom && scalePlaneTo) {\n          tl.fromTo(this.elements.mediaWrapper[0], {\n            scale: scalePlaneFrom,\n            transformOrigin: 'center center'\n          }, {\n            scale: scalePlaneTo,\n            ease: 'none'\n          }, 'start');\n        }\n      }\n      if (this.elements.media[0]) {\n        var scaleTextureFrom, scaleTextureTo;\n        if (typeof this.options.onSceneProgress.scaleTexture === 'number' && typeof this.options.onSceneIdle.scaleTexture === 'number') {\n          scaleTextureFrom = this.options.onSceneIdle.scaleTexture;\n          scaleTextureTo = this.options.onSceneProgress.scaleTexture;\n        }\n        if (scaleTextureFrom && scaleTextureTo) {\n          tl.fromTo(this.elements.media[0], {\n            scale: scaleTextureFrom,\n            transformOrigin: 'center center'\n          }, {\n            scale: scaleTextureTo,\n            ease: 'none'\n          }, 'start');\n        }\n      }\n      return tl;\n    }\n  }, {\n    key: \"getScrubAnimation\",\n    value: function getScrubAnimation() {\n      var _this5 = this;\n      if (!!this.options.toggleHeaderVisibility && this.headerRef) {\n        var config = {\n          trigger: this.element,\n          start: function start() {\n            return \"top-=\".concat(_this5.headerRef.element.offsetHeight, \" top\");\n          },\n          end: function end() {\n            return \"bottom+=100% bottom\";\n          },\n          scrub: true,\n          matchMedia: this.options.matchMedia,\n          onToggle: function onToggle(self) {\n            return _this5.headerRef.toggleHidden(self.isActive);\n          }\n        };\n        return config;\n      }\n    }\n  }, {\n    key: \"_toggleScrollingClass\",\n    value: function _toggleScrollingClass() {\n      var add = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (typeof this.options.scrollingClass === 'string') {\n        this.element.classList.toggle(this.options.scrollingClass, add);\n      }\n    }\n  }, {\n    key: \"_toggleCompleteClass\",\n    value: function _toggleCompleteClass() {\n      var add = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (typeof this.options.completeClass === 'string') {\n        this.element.classList.toggle(this.options.completeClass, add);\n      }\n    }\n  }, {\n    key: \"_onTransitionStart\",\n    value: function _onTransitionStart() {\n      this.transitionActive = true;\n      this._toggleCompleteClass(true);\n      this.fixedScene.kill(false, false);\n      if (this.elements.nextLinks.length) {\n        this.elements.nextLinks[0].click();\n      }\n    }\n  }, {\n    key: \"_onTransitionEnd\",\n    value: function _onTransitionEnd() {\n      if (this.curtains && this.curtains.instance) {\n        this.curtains.destroy();\n        this.curtains = null;\n      }\n    }\n  }, {\n    key: \"_onProgressScene\",\n    value: function _onProgressScene(_ref2) {\n      var progress = _ref2.progress;\n      if (this.curtains && this.curtains.instance) {\n        var plane = this.curtains.instance.planes[0];\n        if (typeof this.options.onSceneProgress.amplitude === 'number' && typeof this.options.onSceneIdle.amplitude === 'number') {\n          var diff = this.options.onSceneProgress.amplitude - this.options.onSceneIdle.amplitude;\n          var value = this.options.onSceneIdle.amplitude + progress * diff;\n          plane.uniforms.hoverAmplitude.value = value;\n        }\n        if (typeof this.options.onSceneProgress.speed === 'number' && typeof this.options.onSceneIdle.speed === 'number') {\n          var _diff = this.options.onSceneProgress.speed - this.options.onSceneIdle.speed;\n          var _value = this.options.onSceneIdle.speed + progress * _diff;\n          plane.uniforms.hoverSpeed.value = _value;\n        }\n        if (typeof this.options.onSceneProgress.segments === 'number' && typeof this.options.onSceneIdle.segments === 'number') {\n          var _diff2 = this.options.onSceneProgress.segments - this.options.onSceneIdle.segments;\n          var _value2 = this.options.onSceneIdle.segments + progress * _diff2;\n          plane.uniforms.hoverSegments.value = _value2;\n        }\n        if (typeof this.options.onSceneProgress.scalePlane === 'number' && typeof this.options.onSceneIdle.scalePlane === 'number') {\n          var _diff3 = this.options.onSceneProgress.scalePlane - this.options.onSceneIdle.scalePlane;\n          var _value3 = this.options.onSceneIdle.scalePlane + progress * _diff3;\n          plane.scale.x = _value3;\n          plane.scale.y = _value3;\n        }\n        if (typeof this.options.onSceneProgress.scaleTexture === 'number' && typeof this.options.onSceneIdle.scaleTexture === 'number') {\n          var _diff4 = this.options.onSceneProgress.scaleTexture - this.options.onSceneIdle.scaleTexture;\n          var _value4 = this.options.onSceneIdle.scaleTexture + progress * _diff4;\n          if (plane.textures.length) {\n            plane.textures.forEach(function (texture) {\n              texture.scale.x = _value4;\n              texture.scale.y = _value4;\n            });\n          }\n        }\n      }\n      if (typeof this.options.onSceneProgress.scalePlane === 'number' && typeof this.options.onSceneIdle.scalePlane === 'number') {\n        var _diff5 = this.options.onSceneProgress.scalePlane - this.options.onSceneIdle.scalePlane;\n        var _value5 = this.options.onSceneIdle.scalePlane + progress * _diff5;\n        if (this.maskRef && this.maskRef[0] && this.elements.mediaWrapper[0]) {\n          this.maskRef[0].scaleX = _value5;\n          this.maskRef[0].scaleY = _value5;\n          this.maskRef[0].setMask();\n        }\n      }\n    }\n  }, {\n    key: \"_onClickHeader\",\n    value: function _onClickHeader() {\n      var _this6 = this;\n      if (!this.transitionActive) {\n        this.transitionActive = true;\n        app.utilities.scrollTo({\n          target: ScrollTrigger.maxScroll(window),\n          cb: function cb() {\n            _this6.transitionActive = false;\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_onResize\",\n    value: function _onResize() {\n      this._updateMask();\n      if (this.curtains && this.curtains.instance) {\n        this.curtains.instance.resize();\n      }\n    }\n\n    // WebGL methods\n  }, {\n    key: \"_initCurtains\",\n    value: function _initCurtains(module) {\n      var options = {\n        planes: {\n          widthSegments: 16,\n          heightSegments: 16,\n          uniforms: {\n            opacity: {\n              name: 'uOpacity',\n              type: '1f',\n              value: 1\n            }\n          },\n          visible: true,\n          vertexShader: this._vShaderPlane(),\n          fragmentShader: this._fShaderPlane()\n        }\n      };\n      if (_typeof(this.options.webGL) === 'object') {\n        options = deepmerge(this.options.webGL, options);\n        if (typeof this.options.webGL.vertices === 'number') {\n          options.planes.widthSegments = this.options.webGL.vertices;\n          options.planes.heightSegments = this.options.webGL.vertices;\n        }\n      }\n      this.curtains = new module[\"default\"]({\n        element: this.element,\n        container: this.elements.canvasWrapper[0],\n        lanes: [this.element],\n        options: options\n      });\n      this._initFirstPlane();\n    }\n  }, {\n    key: \"_initFirstPlane\",\n    value: function _initFirstPlane() {\n      var _this7 = this;\n      var firstPlane = this.curtains.instance.planes[0];\n      if (firstPlane) {\n        firstPlane.onReady(function () {\n          var animation = {\n            scale: 1,\n            scaleTexture: 1\n          };\n          firstPlane.transformOrigin.x = 0.5;\n          firstPlane.transformOrigin.y = 0.5;\n          firstPlane.transformOrigin.z = 0.5;\n          gsap.to(animation, {\n            scale: typeof _this7.options.onSceneIdle.scalePlane === 'number' ? _this7.options.onSceneIdle.scalePlane : 1,\n            scaleTexture: typeof _this7.options.onSceneIdle.scaleTexture === 'number' ? _this7.options.onSceneIdle.scaleTexture : 1,\n            duration: 0.6,\n            ease: 'expo.inOut',\n            onUpdate: function onUpdate() {\n              firstPlane.scale.x = animation.scale;\n              firstPlane.scale.y = animation.scale;\n              if (firstPlane.textures.length) {\n                firstPlane.textures.forEach(function (texture) {\n                  texture.scale.x = animation.scaleTexture;\n                  texture.scale.y = animation.scaleTexture;\n                });\n              }\n            }\n          });\n          _this7._setWebGLReady();\n        });\n      }\n    }\n  }, {\n    key: \"_onVisibleUpdate\",\n    value: function _onVisibleUpdate(entries) {\n      var _this8 = this;\n      entries.forEach(function (entry) {\n        if (_this8.curtains && _this8.curtains.instance) {\n          if (entry.isIntersecting) {\n            _this8.curtains.instance.enableDrawing();\n          } else {\n            _this8.curtains.instance.disableDrawing();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_vShaderPlane\",\n    value: function _vShaderPlane() {\n      return \"\\n\\t\\t\\t#define PI 3.1415926535897932384626433832795\\n\\n\\t\\t\\tprecision mediump float;\\n\\n\\t\\t\\t// Default mandatory variables\\n\\t\\t\\tattribute vec3 aVertexPosition;\\n\\t\\t\\tattribute vec2 aTextureCoord;\\n\\n\\t\\t\\tuniform mat4 uMVMatrix;\\n\\t\\t\\tuniform mat4 uPMatrix;\\n\\n\\t\\t\\tuniform mat4 uTextureMatrix0;\\n\\t\\t\\tuniform vec2 uPlaneSizes;\\n\\n\\t\\t\\t// Custom variables\\n\\t\\t\\tvarying vec3 vVertexPosition;\\n\\t\\t\\tvarying vec2 vTextureCoord;\\n\\n\\t\\t\\t// Custom uniforms\\n\\t\\t\\tuniform vec2 uMousePosition;\\n\\t\\t\\tuniform vec2 uViewportSizes;\\n\\t\\t\\tuniform float uVelocityX;\\n\\t\\t\\tuniform float uVelocityY;\\n\\t\\t\\tuniform float uOpacity;\\n\\t\\t\\tuniform float uTime;\\n\\t\\t\\tuniform float uHoverAmplitude;\\n\\t\\t\\tuniform float uHoverSpeed;\\n\\t\\t\\tuniform float uHoverSegments;\\n\\t\\t\\tuniform float uHovered;\\n\\t\\t\\tuniform float uTransition;\\n\\t\\t\\tuniform float uElasticEffect;\\n\\n\\t\\t\\tvoid main() {\\n\\t\\t\\t\\tvec3 vertexPosition = aVertexPosition;\\n\\n\\t\\t\\t\\t// 1. Speed Effect\\n\\t\\t\\t\\t// vertexPosition.y -= sin(vertexPosition.x * 2. / (uViewportSizes.y) * PI + PI / 2.0) * uVelocityY * (uPlaneSizes.y / 2.) * uElasticEffect;\\n\\t\\t\\t\\t// vertexPosition.x += sin(vertexPosition.y * 2. / (uViewportSizes.x) * PI + PI / 2.0) * uVelocityX * (uPlaneSizes.x / 2.) * uElasticEffect;\\n\\n\\t\\t\\t\\t// 2. Hover Effect\\n\\t\\t\\t\\tvertexPosition.z += sin(vertexPosition.x * (uHoverSegments) + (uTime * 0.03) + uHoverSpeed) * uHoverAmplitude * 0.005;\\n\\t\\t\\t\\tvertexPosition.x += sin(vertexPosition.y * (uHoverSegments) + (uTime * 0.03) + uHoverSpeed) * uHoverAmplitude * 0.005;\\n\\n\\t\\t\\t\\t// 3. Transition\\n\\t\\t\\t\\t// convert uTransition from [0,1] to [0,1,0]\\n\\t\\t\\t\\tfloat transition = 1.0 - abs((uTransition * 2.0) - 1.0);\\n\\n\\t\\t\\t\\t// Get the distance between our vertex and the mouse position\\n\\t\\t\\t\\tfloat distanceFromMouse = distance(uMousePosition, vec2(vertexPosition.x, vertexPosition.y));\\n\\n\\t\\t\\t\\t// Calculate our wave effect\\n\\t\\t\\t\\tfloat waveSinusoid = cos(6. * (distanceFromMouse - (uTime * 0.02)));\\n\\n\\t\\t\\t\\t// Attenuate the effect based on mouse distance\\n\\t\\t\\t\\tfloat distanceStrength = (0.4 / (distanceFromMouse + 0.4));\\n\\n\\t\\t\\t\\t// Calculate our distortion effect\\n\\t\\t\\t\\tfloat distortionEffect = distanceStrength * waveSinusoid * 0.33;\\n\\n\\t\\t\\t\\t// Apply it to our vertex position\\n\\t\\t\\t\\tvertexPosition.z +=  distortionEffect * -transition;\\n\\t\\t\\t\\tvertexPosition.x +=  distortionEffect * transition * (uMousePosition.x - vertexPosition.x);\\n\\t\\t\\t\\tvertexPosition.y +=  distortionEffect * transition * (uMousePosition.y - vertexPosition.y);\\n\\n\\t\\t\\t\\tgl_Position = uPMatrix * uMVMatrix * vec4(vertexPosition, 1.0);\\n\\n\\t\\t\\t\\t// Varyings\\n\\t\\t\\t\\tvVertexPosition = vertexPosition;\\n\\t\\t\\t\\tvTextureCoord = (uTextureMatrix0 * vec4(aTextureCoord, 0.0, 1.0)).xy;\\n\\t\\t\\t}\\n\\t\\t\";\n    }\n  }, {\n    key: \"_fShaderPlane\",\n    value: function _fShaderPlane() {\n      return \"\\n\\t\\t\\tprecision mediump float;\\n\\n\\t\\t\\tvarying vec3 vVertexPosition;\\n\\t\\t\\tvarying vec2 vTextureCoord;\\n\\n\\t\\t\\tuniform float uOpacity;\\n\\t\\t\\tuniform float uTransition;\\n\\t\\t\\tuniform sampler2D uSampler0;\\n\\n\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t// Apply texture\\n\\t\\t\\t\\tvec4 finalColor = texture2D(uSampler0, vTextureCoord);\\n\\n\\t\\t\\t\\t// Apply opacity\\n\\t\\t\\t\\tfinalColor.a = uOpacity;\\n\\n\\t\\t\\t\\t// Fake shadows based on vertex position along Z axis\\n\\t\\t\\t\\tfinalColor.rgb += clamp(vVertexPosition.z, -1.0, 0.0) * 0.75 * uTransition;\\n\\n\\t\\t\\t\\t// Fake lights based on vertex position along Z axis\\n\\t\\t\\t\\tfinalColor.rgb += clamp(vVertexPosition.z, 0.0, 1.0) * 0.75 * uTransition;\\n\\n\\t\\t\\t\\t// Display texture\\n\\t\\t\\t\\tgl_FragColor = finalColor;\\n\\t\\t\\t}\\n\\t\\t\";\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/AutoScrollNext.js\n");

/***/ }),

/***/ "./src/js/components/BaseComponent.js":
/*!********************************************!*\
  !*** ./src/js/components/BaseComponent.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ BaseComponent)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar BaseComponent = /*#__PURE__*/function () {\n  function BaseComponent(_ref) {\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element,\n      defaults = _ref.defaults,\n      innerElements = _ref.innerElements;\n    _classCallCheck(this, BaseComponent);\n    this.name = name;\n    this.loadInnerComponents = loadInnerComponents;\n    this.parent = parent;\n    this.element = element;\n    this.options = _objectSpread({}, defaults);\n    this.innerSelectors = _objectSpread({}, innerElements);\n    this.elements = {};\n    for (var key in this.innerSelectors) {\n      if (this.innerSelectors.hasOwnProperty(key)) {\n        this.elements[key] = this.element.querySelectorAll(this.innerSelectors[key]);\n      }\n    }\n    this._handlers = {};\n  }\n  return _createClass(BaseComponent, [{\n    key: \"setup\",\n    value: function setup() {\n      console.log(\"\".concat(this.name, \" component setup\"));\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      console.log(\"\".concat(this.name, \" component initialized\"));\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      console.log(\"\".concat(this.name, \" component destroyed\"));\n    }\n  }, {\n    key: \"_getInnerComponentByName\",\n    value: function _getInnerComponentByName(name) {\n      // Inner componentsを取得するためのメソッド\n      return this[name];\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY29tcG9uZW50cy9CYXNlQ29tcG9uZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7SUFBcUJBLGFBQWE7RUFDaEMsU0FBQUEsY0FBQUMsSUFBQSxFQU9HO0lBQUEsSUFOREMsSUFBSSxHQUFBRCxJQUFBLENBQUpDLElBQUk7TUFDSkMsbUJBQW1CLEdBQUFGLElBQUEsQ0FBbkJFLG1CQUFtQjtNQUNuQkMsTUFBTSxHQUFBSCxJQUFBLENBQU5HLE1BQU07TUFDTkMsT0FBTyxHQUFBSixJQUFBLENBQVBJLE9BQU87TUFDUEMsUUFBUSxHQUFBTCxJQUFBLENBQVJLLFFBQVE7TUFDUkMsYUFBYSxHQUFBTixJQUFBLENBQWJNLGFBQWE7SUFBQUMsZUFBQSxPQUFBUixhQUFBO0lBRWIsSUFBSSxDQUFDRSxJQUFJLEdBQUdBLElBQUk7SUFDaEIsSUFBSSxDQUFDQyxtQkFBbUIsR0FBR0EsbUJBQW1CO0lBQzlDLElBQUksQ0FBQ0MsTUFBTSxHQUFHQSxNQUFNO0lBQ3BCLElBQUksQ0FBQ0MsT0FBTyxHQUFHQSxPQUFPO0lBQ3RCLElBQUksQ0FBQ0ksT0FBTyxHQUFBQyxhQUFBLEtBQVFKLFFBQVEsQ0FBRTtJQUM5QixJQUFJLENBQUNLLGNBQWMsR0FBQUQsYUFBQSxLQUFRSCxhQUFhLENBQUU7SUFFMUMsSUFBSSxDQUFDSyxRQUFRLEdBQUcsQ0FBQyxDQUFDO0lBQ2xCLEtBQUssSUFBTUMsR0FBRyxJQUFJLElBQUksQ0FBQ0YsY0FBYyxFQUFFO01BQ3JDLElBQUksSUFBSSxDQUFDQSxjQUFjLENBQUNHLGNBQWMsQ0FBQ0QsR0FBRyxDQUFDLEVBQUU7UUFDM0MsSUFBSSxDQUFDRCxRQUFRLENBQUNDLEdBQUcsQ0FBQyxHQUFHLElBQUksQ0FBQ1IsT0FBTyxDQUFDVSxnQkFBZ0IsQ0FDaEQsSUFBSSxDQUFDSixjQUFjLENBQUNFLEdBQUcsQ0FDekIsQ0FBQztNQUNIO0lBQ0Y7SUFFQSxJQUFJLENBQUNHLFNBQVMsR0FBRyxDQUFDLENBQUM7RUFDckI7RUFBQyxPQUFBQyxZQUFBLENBQUFqQixhQUFBO0lBQUFhLEdBQUE7SUFBQUssS0FBQSxFQUVELFNBQUFDLE1BQUEsRUFBUTtNQUNOQyxPQUFPLENBQUNDLEdBQUcsSUFBQUMsTUFBQSxDQUFJLElBQUksQ0FBQ3BCLElBQUkscUJBQWtCLENBQUM7SUFDN0M7RUFBQztJQUFBVyxHQUFBO0lBQUFLLEtBQUEsRUFFRCxTQUFBSyxLQUFBLEVBQU87TUFDTEgsT0FBTyxDQUFDQyxHQUFHLElBQUFDLE1BQUEsQ0FBSSxJQUFJLENBQUNwQixJQUFJLDJCQUF3QixDQUFDO0lBQ25EO0VBQUM7SUFBQVcsR0FBQTtJQUFBSyxLQUFBLEVBRUQsU0FBQU0sUUFBQSxFQUFVO01BQ1JKLE9BQU8sQ0FBQ0MsR0FBRyxJQUFBQyxNQUFBLENBQUksSUFBSSxDQUFDcEIsSUFBSSx5QkFBc0IsQ0FBQztJQUNqRDtFQUFDO0lBQUFXLEdBQUE7SUFBQUssS0FBQSxFQUVELFNBQUFPLHlCQUF5QnZCLElBQUksRUFBRTtNQUM3QjtNQUNBLE9BQU8sSUFBSSxDQUFDQSxJQUFJLENBQUM7SUFDbkI7RUFBQztBQUFBIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhyZWUtc2hhZGVyLWVudjAxLy4vc3JjL2pzL2NvbXBvbmVudHMvQmFzZUNvbXBvbmVudC5qcz8zYWY1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhc2VDb21wb25lbnQge1xuICBjb25zdHJ1Y3Rvcih7XG4gICAgbmFtZSxcbiAgICBsb2FkSW5uZXJDb21wb25lbnRzLFxuICAgIHBhcmVudCxcbiAgICBlbGVtZW50LFxuICAgIGRlZmF1bHRzLFxuICAgIGlubmVyRWxlbWVudHMsXG4gIH0pIHtcbiAgICB0aGlzLm5hbWUgPSBuYW1lO1xuICAgIHRoaXMubG9hZElubmVyQ29tcG9uZW50cyA9IGxvYWRJbm5lckNvbXBvbmVudHM7XG4gICAgdGhpcy5wYXJlbnQgPSBwYXJlbnQ7XG4gICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICB0aGlzLm9wdGlvbnMgPSB7IC4uLmRlZmF1bHRzIH07XG4gICAgdGhpcy5pbm5lclNlbGVjdG9ycyA9IHsgLi4uaW5uZXJFbGVtZW50cyB9O1xuXG4gICAgdGhpcy5lbGVtZW50cyA9IHt9O1xuICAgIGZvciAoY29uc3Qga2V5IGluIHRoaXMuaW5uZXJTZWxlY3RvcnMpIHtcbiAgICAgIGlmICh0aGlzLmlubmVyU2VsZWN0b3JzLmhhc093blByb3BlcnR5KGtleSkpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50c1trZXldID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXG4gICAgICAgICAgdGhpcy5pbm5lclNlbGVjdG9yc1trZXldXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdGhpcy5faGFuZGxlcnMgPSB7fTtcbiAgfVxuXG4gIHNldHVwKCkge1xuICAgIGNvbnNvbGUubG9nKGAke3RoaXMubmFtZX0gY29tcG9uZW50IHNldHVwYCk7XG4gIH1cblxuICBpbml0KCkge1xuICAgIGNvbnNvbGUubG9nKGAke3RoaXMubmFtZX0gY29tcG9uZW50IGluaXRpYWxpemVkYCk7XG4gIH1cblxuICBkZXN0cm95KCkge1xuICAgIGNvbnNvbGUubG9nKGAke3RoaXMubmFtZX0gY29tcG9uZW50IGRlc3Ryb3llZGApO1xuICB9XG5cbiAgX2dldElubmVyQ29tcG9uZW50QnlOYW1lKG5hbWUpIHtcbiAgICAvLyBJbm5lciBjb21wb25lbnRz44KS5Y+W5b6X44GZ44KL44Gf44KB44Gu44Oh44K944OD44OJXG4gICAgcmV0dXJuIHRoaXNbbmFtZV07XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJCYXNlQ29tcG9uZW50IiwiX3JlZiIsIm5hbWUiLCJsb2FkSW5uZXJDb21wb25lbnRzIiwicGFyZW50IiwiZWxlbWVudCIsImRlZmF1bHRzIiwiaW5uZXJFbGVtZW50cyIsIl9jbGFzc0NhbGxDaGVjayIsIm9wdGlvbnMiLCJfb2JqZWN0U3ByZWFkIiwiaW5uZXJTZWxlY3RvcnMiLCJlbGVtZW50cyIsImtleSIsImhhc093blByb3BlcnR5IiwicXVlcnlTZWxlY3RvckFsbCIsIl9oYW5kbGVycyIsIl9jcmVhdGVDbGFzcyIsInZhbHVlIiwic2V0dXAiLCJjb25zb2xlIiwibG9nIiwiY29uY2F0IiwiaW5pdCIsImRlc3Ryb3kiLCJfZ2V0SW5uZXJDb21wb25lbnRCeU5hbWUiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/components/BaseComponent.js\n");

/***/ }),

/***/ "./src/js/components/ClickAndHold.js":
/*!*******************************************!*\
  !*** ./src/js/components/ClickAndHold.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ClickAndHold)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar ClickAndHold = /*#__PURE__*/function (_BaseComponent) {\n  function ClickAndHold(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, ClickAndHold);\n    _this = _callSuper(this, ClickAndHold, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        activeClass: 'has-click-and-hold',\n        ease: 'power1.in',\n        duration: 3.6\n      },\n      // Component inner elements\n      innerElements: {\n        links: 'a[href]:not(a[href=\"#\"])'\n      }\n    }]);\n    _this._handlers = {\n      press: _this._onPress.bind(_this),\n      release: _this._onRelease.bind(_this),\n      start: _this._onStart.bind(_this),\n      update: _this._onUpdate.bind(_this),\n      complete: _this._onComplete.bind(_this)\n    };\n    _this.pressed = false;\n    _this.event = {};\n    _this.tl = {};\n    _this.setup();\n    return _this;\n  }\n  _inherits(ClickAndHold, _BaseComponent);\n  return _createClass(ClickAndHold, [{\n    key: \"init\",\n    value: function init() {\n      if (typeof this.options.duration === 'number') {\n        this.tl = gsap.timeline({\n          defaults: {\n            duration: this.options.duration,\n            ease: typeof this.options.ease === 'string' ? this.options.ease : undefined\n          }\n        });\n        this._setHasClickAndHold(true);\n        this._attachEvents();\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      if (this.tl) {\n        this.tl.kill();\n      }\n    }\n  }, {\n    key: \"_setHasClickAndHold\",\n    value: function _setHasClickAndHold() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.element.classList.toggle(\"\".concat(this.options.activeClass), enabled);\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      var _this2 = this;\n      if (this.elements.links.length) {\n        this.elements.links.forEach(function (link) {\n          // Prevent force touch\n          link.addEventListener('webkitmouseforcewillbegin', app.hoverEffect.preventDefault);\n          link.addEventListener('webkitmouseforcedown', app.hoverEffect.preventDefault);\n          link.addEventListener('webkitmouseforceup', app.hoverEffect.preventDefault);\n          link.addEventListener('webkitmouseforcechanged', app.hoverEffect.preventDefault);\n          link.addEventListener('click', app.hoverEffect.preventDefault);\n          link.addEventListener('mousedown', _this2._handlers.press);\n          link.addEventListener('touchstart', _this2._handlers.press);\n          link.addEventListener('mouseup', _this2._handlers.release);\n          link.addEventListener('mouseleave', _this2._handlers.release);\n          link.addEventListener('touchend', _this2._handlers.release);\n        });\n      }\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      var _this3 = this;\n      if (this.elements.links.length) {\n        this.elements.links.forEach(function (link) {\n          // Prevent force touch\n          link.removeEventListener('webkitmouseforcewillbegin', app.hoverEffect.preventDefault);\n          link.removeEventListener('webkitmouseforcedown', app.hoverEffect.preventDefault);\n          link.removeEventListener('webkitmouseforceup', app.hoverEffect.preventDefault);\n          link.removeEventListener('webkitmouseforcechanged', app.hoverEffect.preventDefault);\n          link.removeEventListener('click', app.hoverEffect.preventDefault);\n          link.removeEventListener('mousedown', _this3._handlers.press);\n          link.removeEventListener('touchstart', _this3._handlers.press);\n          link.removeEventListener('mouseup', _this3._handlers.release);\n          link.removeEventListener('mouseleave', _this3._handlers.release);\n          link.removeEventListener('touchend', _this3._handlers.release);\n        });\n      }\n    }\n  }, {\n    key: \"_onPress\",\n    value: function _onPress(event) {\n      event.preventDefault();\n\n      // Only main mouse button (usually a left-side button)\n      if ('button' in event && event.button !== 0) {\n        return;\n      }\n      this.event = event;\n      this.pressed = true;\n      this.tl.clear().to({}, {\n        onStart: this._handlers.start,\n        onUpdate: this._handlers.update,\n        onComplete: this._handlers.complete\n      }, '<');\n    }\n  }, {\n    key: \"_onRelease\",\n    value: function _onRelease() {\n      if (this.pressed) {\n        var evt = new CustomEvent('release', {\n          detail: {\n            component: this\n          }\n        });\n        this.tl.clear();\n        this.element.dispatchEvent(evt);\n        this.pressed = false;\n      }\n    }\n  }, {\n    key: \"_onStart\",\n    value: function _onStart() {\n      var evt = new CustomEvent('press', {\n        detail: {\n          component: this,\n          progress: this.tl.progress()\n        }\n      });\n      this.element.dispatchEvent(evt);\n    }\n  }, {\n    key: \"_onUpdate\",\n    value: function _onUpdate() {\n      var evt = new CustomEvent('progress', {\n        detail: {\n          component: this,\n          progress: this.tl.progress()\n        }\n      });\n      this.element.dispatchEvent(evt);\n    }\n  }, {\n    key: \"_onComplete\",\n    value: function _onComplete() {\n      var clickAndHoldParent = this.event.target.closest(\".\".concat(this.options.activeClass)),\n        link = this.event.target.closest('a'),\n        evt = new CustomEvent('complete');\n      this.element.dispatchEvent(evt);\n      if (clickAndHoldParent) {\n        this._setHasClickAndHold(false);\n      }\n      link.removeEventListener('webkitmouseforcewillbegin', app.hoverEffect.preventDefault);\n      link.removeEventListener('webkitmouseforcedown', app.hoverEffect.preventDefault);\n      link.removeEventListener('webkitmouseforceup', app.hoverEffect.preventDefault);\n      link.removeEventListener('webkitmouseforcechanged', app.hoverEffect.preventDefault);\n      link.removeEventListener('click', app.hoverEffect.preventDefault);\n      link.removeEventListener('mousedown', this._handlers.press);\n      link.removeEventListener('touchstart', this._handlers.press);\n      link.removeEventListener('mouseup', this._handlers.release);\n      link.removeEventListener('mouseleave', this._handlers.release);\n      link.removeEventListener('touchend', this._handlers.release);\n      link.click();\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUM3QyxTQUFTLENBQUNJLE9BQU8sQ0FBQztNQUM5RG1DLElBQUksQ0FBQ00sbUJBQW1CLENBQUMsVUFBVSxFQUFFLElBQUksQ0FBQzdDLFNBQVMsQ0FBQ0ksT0FBTyxDQUFDO01BRTVEbUMsSUFBSSxDQUFDc0IsS0FBSyxDQUFDLENBQUM7SUFDYjtFQUFDO0FBQUEsRUE3THdDQyxhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhyZWUtc2hhZGVyLWVudjAxLy4vc3JjL2pzL2NvbXBvbmVudHMvQ2xpY2tBbmRIb2xkLmpzPzJiZTgiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2xpY2tBbmRIb2xkIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHtcblx0XHRuYW1lLFxuXHRcdGxvYWRJbm5lckNvbXBvbmVudHMsXG5cdFx0cGFyZW50LFxuXHRcdGVsZW1lbnQsXG5cdH0pIHtcblx0XHRzdXBlcih7XG5cdFx0XHRuYW1lLFxuXHRcdFx0bG9hZElubmVyQ29tcG9uZW50cyxcblx0XHRcdHBhcmVudCxcblx0XHRcdGVsZW1lbnQsXG5cdFx0XHQvLyBDb21wb25lbnQgZGVmYXVsdCBvcHRpb25zXG5cdFx0XHRkZWZhdWx0czoge1xuXHRcdFx0XHRhY3RpdmVDbGFzczogJ2hhcy1jbGljay1hbmQtaG9sZCcsXG5cdFx0XHRcdGVhc2U6ICdwb3dlcjEuaW4nLFxuXHRcdFx0XHRkdXJhdGlvbjogMy42XG5cdFx0XHR9LFxuXHRcdFx0Ly8gQ29tcG9uZW50IGlubmVyIGVsZW1lbnRzXG5cdFx0XHRpbm5lckVsZW1lbnRzOiB7XG5cdFx0XHRcdGxpbmtzOiAnYVtocmVmXTpub3QoYVtocmVmPVwiI1wiXSknXG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHR0aGlzLl9oYW5kbGVycyA9IHtcblx0XHRcdHByZXNzOiB0aGlzLl9vblByZXNzLmJpbmQodGhpcyksXG5cdFx0XHRyZWxlYXNlOiB0aGlzLl9vblJlbGVhc2UuYmluZCh0aGlzKSxcblx0XHRcdHN0YXJ0OiB0aGlzLl9vblN0YXJ0LmJpbmQodGhpcyksXG5cdFx0XHR1cGRhdGU6IHRoaXMuX29uVXBkYXRlLmJpbmQodGhpcyksXG5cdFx0XHRjb21wbGV0ZTogdGhpcy5fb25Db21wbGV0ZS5iaW5kKHRoaXMpXG5cdFx0fTtcblx0XHR0aGlzLnByZXNzZWQgPSBmYWxzZTtcblx0XHR0aGlzLmV2ZW50ID0ge307XG5cdFx0dGhpcy50bCA9IHt9O1xuXG5cdFx0dGhpcy5zZXR1cCgpO1xuXHR9XG5cblx0aW5pdCgpIHtcblx0XHRpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5kdXJhdGlvbiA9PT0gJ251bWJlcicpIHtcblx0XHRcdHRoaXMudGwgPSBnc2FwLnRpbWVsaW5lKHtcblx0XHRcdFx0ZGVmYXVsdHM6IHtcblx0XHRcdFx0XHRkdXJhdGlvbjogdGhpcy5vcHRpb25zLmR1cmF0aW9uLFxuXHRcdFx0XHRcdGVhc2U6IHR5cGVvZiB0aGlzLm9wdGlvbnMuZWFzZSA9PT0gJ3N0cmluZycgPyB0aGlzLm9wdGlvbnMuZWFzZSA6IHVuZGVmaW5lZFxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdFx0dGhpcy5fc2V0SGFzQ2xpY2tBbmRIb2xkKHRydWUpO1xuXHRcdFx0dGhpcy5fYXR0YWNoRXZlbnRzKCk7XG5cdFx0fVxuXHR9XG5cblx0ZGVzdHJveSgpIHtcblx0XHR0aGlzLl9kZXRhY2hFdmVudHMoKTtcblxuXHRcdGlmICh0aGlzLnRsKSB7XG5cdFx0XHR0aGlzLnRsLmtpbGwoKTtcblx0XHR9XG5cdH1cblxuXHRfc2V0SGFzQ2xpY2tBbmRIb2xkKGVuYWJsZWQgPSB0cnVlKSB7XG5cdFx0dGhpcy5lbGVtZW50LmNsYXNzTGlzdC50b2dnbGUoYCR7dGhpcy5vcHRpb25zLmFjdGl2ZUNsYXNzfWAsIGVuYWJsZWQpO1xuXHR9XG5cblx0X2F0dGFjaEV2ZW50cygpIHtcblx0XHRpZiAodGhpcy5lbGVtZW50cy5saW5rcy5sZW5ndGgpIHtcblx0XHRcdHRoaXMuZWxlbWVudHMubGlua3MuZm9yRWFjaCgobGluaykgPT4ge1xuXHRcdFx0XHQvLyBQcmV2ZW50IGZvcmNlIHRvdWNoXG5cdFx0XHRcdGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignd2Via2l0bW91c2Vmb3JjZXdpbGxiZWdpbicsIGFwcC5ob3ZlckVmZmVjdC5wcmV2ZW50RGVmYXVsdCk7XG5cdFx0XHRcdGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignd2Via2l0bW91c2Vmb3JjZWRvd24nLCBhcHAuaG92ZXJFZmZlY3QucHJldmVudERlZmF1bHQpO1xuXHRcdFx0XHRsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ3dlYmtpdG1vdXNlZm9yY2V1cCcsIGFwcC5ob3ZlckVmZmVjdC5wcmV2ZW50RGVmYXVsdCk7XG5cdFx0XHRcdGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignd2Via2l0bW91c2Vmb3JjZWNoYW5nZWQnLCBhcHAuaG92ZXJFZmZlY3QucHJldmVudERlZmF1bHQpO1xuXG5cdFx0XHRcdGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhcHAuaG92ZXJFZmZlY3QucHJldmVudERlZmF1bHQpO1xuXHRcdFx0XHRsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX2hhbmRsZXJzLnByZXNzKTtcblx0XHRcdFx0bGluay5hZGRFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcy5faGFuZGxlcnMucHJlc3MpO1xuXG5cdFx0XHRcdGxpbmsuYWRkRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuX2hhbmRsZXJzLnJlbGVhc2UpO1xuXHRcdFx0XHRsaW5rLmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCB0aGlzLl9oYW5kbGVycy5yZWxlYXNlKTtcblx0XHRcdFx0bGluay5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMuX2hhbmRsZXJzLnJlbGVhc2UpO1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9XG5cblx0X2RldGFjaEV2ZW50cygpIHtcblx0XHRpZiAodGhpcy5lbGVtZW50cy5saW5rcy5sZW5ndGgpIHtcblx0XHRcdHRoaXMuZWxlbWVudHMubGlua3MuZm9yRWFjaCgobGluaykgPT4ge1xuXHRcdFx0XHQvLyBQcmV2ZW50IGZvcmNlIHRvdWNoXG5cdFx0XHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2Via2l0bW91c2Vmb3JjZXdpbGxiZWdpbicsIGFwcC5ob3ZlckVmZmVjdC5wcmV2ZW50RGVmYXVsdCk7XG5cdFx0XHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2Via2l0bW91c2Vmb3JjZWRvd24nLCBhcHAuaG92ZXJFZmZlY3QucHJldmVudERlZmF1bHQpO1xuXHRcdFx0XHRsaW5rLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3dlYmtpdG1vdXNlZm9yY2V1cCcsIGFwcC5ob3ZlckVmZmVjdC5wcmV2ZW50RGVmYXVsdCk7XG5cdFx0XHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2Via2l0bW91c2Vmb3JjZWNoYW5nZWQnLCBhcHAuaG92ZXJFZmZlY3QucHJldmVudERlZmF1bHQpO1xuXG5cdFx0XHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhcHAuaG92ZXJFZmZlY3QucHJldmVudERlZmF1bHQpO1xuXHRcdFx0XHRsaW5rLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIHRoaXMuX2hhbmRsZXJzLnByZXNzKTtcblx0XHRcdFx0bGluay5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcy5faGFuZGxlcnMucHJlc3MpO1xuXG5cdFx0XHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuX2hhbmRsZXJzLnJlbGVhc2UpO1xuXHRcdFx0XHRsaW5rLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCB0aGlzLl9oYW5kbGVycy5yZWxlYXNlKTtcblx0XHRcdFx0bGluay5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMuX2hhbmRsZXJzLnJlbGVhc2UpO1xuXHRcdFx0fSk7XG5cdFx0fVxuXHR9XG5cblx0X29uUHJlc3MoZXZlbnQpIHtcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXG5cdFx0Ly8gT25seSBtYWluIG1vdXNlIGJ1dHRvbiAodXN1YWxseSBhIGxlZnQtc2lkZSBidXR0b24pXG5cdFx0aWYgKCdidXR0b24nIGluIGV2ZW50ICYmIGV2ZW50LmJ1dHRvbiAhPT0gMCkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHRoaXMuZXZlbnQgPSBldmVudDtcblxuXHRcdHRoaXMucHJlc3NlZCA9IHRydWU7XG5cblx0XHR0aGlzLnRsXG5cdFx0XHQuY2xlYXIoKVxuXHRcdFx0LnRvKHt9LCB7XG5cdFx0XHRcdG9uU3RhcnQ6IHRoaXMuX2hhbmRsZXJzLnN0YXJ0LFxuXHRcdFx0XHRvblVwZGF0ZTogdGhpcy5faGFuZGxlcnMudXBkYXRlLFxuXHRcdFx0XHRvbkNvbXBsZXRlOiB0aGlzLl9oYW5kbGVycy5jb21wbGV0ZVxuXHRcdFx0fSwgJzwnKTtcblx0fVxuXG5cdF9vblJlbGVhc2UoKSB7XG5cdFx0aWYgKHRoaXMucHJlc3NlZCkge1xuXHRcdFx0Y29uc3QgZXZ0ID0gbmV3IEN1c3RvbUV2ZW50KCdyZWxlYXNlJywge1xuXHRcdFx0XHRkZXRhaWw6IHtcblx0XHRcdFx0XHRjb21wb25lbnQ6IHRoaXMsXG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0XHR0aGlzLnRsLmNsZWFyKCk7XG5cblx0XHRcdHRoaXMuZWxlbWVudC5kaXNwYXRjaEV2ZW50KGV2dCk7XG5cblx0XHRcdHRoaXMucHJlc3NlZCA9IGZhbHNlO1xuXHRcdH1cblx0fVxuXG5cdF9vblN0YXJ0KCkge1xuXHRcdGNvbnN0IGV2dCA9IG5ldyBDdXN0b21FdmVudCgncHJlc3MnLCB7XG5cdFx0XHRkZXRhaWw6IHtcblx0XHRcdFx0Y29tcG9uZW50OiB0aGlzLFxuXHRcdFx0XHRwcm9ncmVzczogdGhpcy50bC5wcm9ncmVzcygpXG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHR0aGlzLmVsZW1lbnQuZGlzcGF0Y2hFdmVudChldnQpO1xuXHR9XG5cblx0X29uVXBkYXRlKCkge1xuXHRcdGNvbnN0IGV2dCA9IG5ldyBDdXN0b21FdmVudCgncHJvZ3Jlc3MnLCB7XG5cdFx0XHRkZXRhaWw6IHtcblx0XHRcdFx0Y29tcG9uZW50OiB0aGlzLFxuXHRcdFx0XHRwcm9ncmVzczogdGhpcy50bC5wcm9ncmVzcygpXG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHR0aGlzLmVsZW1lbnQuZGlzcGF0Y2hFdmVudChldnQpO1xuXHR9XG5cblx0X29uQ29tcGxldGUoKSB7XG5cdFx0Y29uc3Rcblx0XHRcdGNsaWNrQW5kSG9sZFBhcmVudCA9IHRoaXMuZXZlbnQudGFyZ2V0LmNsb3Nlc3QoYC4ke3RoaXMub3B0aW9ucy5hY3RpdmVDbGFzc31gKSxcblx0XHRcdGxpbmsgPSB0aGlzLmV2ZW50LnRhcmdldC5jbG9zZXN0KCdhJyksXG5cdFx0XHRldnQgPSBuZXcgQ3VzdG9tRXZlbnQoJ2NvbXBsZXRlJyk7XG5cblx0XHR0aGlzLmVsZW1lbnQuZGlzcGF0Y2hFdmVudChldnQpO1xuXG5cdFx0aWYgKGNsaWNrQW5kSG9sZFBhcmVudCkge1xuXHRcdFx0dGhpcy5fc2V0SGFzQ2xpY2tBbmRIb2xkKGZhbHNlKTtcblx0XHR9XG5cblx0XHRsaW5rLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3dlYmtpdG1vdXNlZm9yY2V3aWxsYmVnaW4nLCBhcHAuaG92ZXJFZmZlY3QucHJldmVudERlZmF1bHQpO1xuXHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2Via2l0bW91c2Vmb3JjZWRvd24nLCBhcHAuaG92ZXJFZmZlY3QucHJldmVudERlZmF1bHQpO1xuXHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcignd2Via2l0bW91c2Vmb3JjZXVwJywgYXBwLmhvdmVyRWZmZWN0LnByZXZlbnREZWZhdWx0KTtcblx0XHRsaW5rLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3dlYmtpdG1vdXNlZm9yY2VjaGFuZ2VkJywgYXBwLmhvdmVyRWZmZWN0LnByZXZlbnREZWZhdWx0KTtcblxuXHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCBhcHAuaG92ZXJFZmZlY3QucHJldmVudERlZmF1bHQpO1xuXHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgdGhpcy5faGFuZGxlcnMucHJlc3MpO1xuXHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMuX2hhbmRsZXJzLnByZXNzKTtcblxuXHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2V1cCcsIHRoaXMuX2hhbmRsZXJzLnJlbGVhc2UpO1xuXHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2VsZWF2ZScsIHRoaXMuX2hhbmRsZXJzLnJlbGVhc2UpO1xuXHRcdGxpbmsucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLCB0aGlzLl9oYW5kbGVycy5yZWxlYXNlKTtcblxuXHRcdGxpbmsuY2xpY2soKTtcblx0fVxufVxuIl0sIm5hbWVzIjpbIkNsaWNrQW5kSG9sZCIsIl9CYXNlQ29tcG9uZW50IiwiX3JlZiIsIl90aGlzIiwibmFtZSIsImxvYWRJbm5lckNvbXBvbmVudHMiLCJwYXJlbnQiLCJlbGVtZW50IiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NhbGxTdXBlciIsImRlZmF1bHRzIiwiYWN0aXZlQ2xhc3MiLCJlYXNlIiwiZHVyYXRpb24iLCJpbm5lckVsZW1lbnRzIiwibGlua3MiLCJfaGFuZGxlcnMiLCJwcmVzcyIsIl9vblByZXNzIiwiYmluZCIsInJlbGVhc2UiLCJfb25SZWxlYXNlIiwic3RhcnQiLCJfb25TdGFydCIsInVwZGF0ZSIsIl9vblVwZGF0ZSIsImNvbXBsZXRlIiwiX29uQ29tcGxldGUiLCJwcmVzc2VkIiwiZXZlbnQiLCJ0bCIsInNldHVwIiwiX2luaGVyaXRzIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJpbml0Iiwib3B0aW9ucyIsImdzYXAiLCJ0aW1lbGluZSIsInVuZGVmaW5lZCIsIl9zZXRIYXNDbGlja0FuZEhvbGQiLCJfYXR0YWNoRXZlbnRzIiwiZGVzdHJveSIsIl9kZXRhY2hFdmVudHMiLCJraWxsIiwiZW5hYmxlZCIsImFyZ3VtZW50cyIsImxlbmd0aCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsImNvbmNhdCIsIl90aGlzMiIsImVsZW1lbnRzIiwiZm9yRWFjaCIsImxpbmsiLCJhZGRFdmVudExpc3RlbmVyIiwiYXBwIiwiaG92ZXJFZmZlY3QiLCJwcmV2ZW50RGVmYXVsdCIsIl90aGlzMyIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJidXR0b24iLCJjbGVhciIsInRvIiwib25TdGFydCIsIm9uVXBkYXRlIiwib25Db21wbGV0ZSIsImV2dCIsIkN1c3RvbUV2ZW50IiwiZGV0YWlsIiwiY29tcG9uZW50IiwiZGlzcGF0Y2hFdmVudCIsInByb2dyZXNzIiwiY2xpY2tBbmRIb2xkUGFyZW50IiwidGFyZ2V0IiwiY2xvc2VzdCIsImNsaWNrIiwiQmFzZUNvbXBvbmVudCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/components/ClickAndHold.js\n");

/***/ }),

/***/ "./src/js/components/Content.js":
/*!**************************************!*\
  !*** ./src/js/components/Content.js ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Content)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Content = /*#__PURE__*/function (_BaseComponent) {\n  function Content(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, Content);\n    _this = _callSuper(this, Content, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {},\n      // Component inner elements\n      innerElements: {}\n    }]);\n    _this.setup();\n    return _this;\n  }\n  _inherits(Content, _BaseComponent);\n  return _createClass(Content, [{\n    key: \"prepareAnimation\",\n    value: function prepareAnimation() {\n      return new Promise(function (resolve) {\n        var tl = gsap.timeline({\n          onComplete: function onComplete() {\n            resolve(true);\n          }\n        });\n      });\n    }\n  }, {\n    key: \"getRevealAnimation\",\n    value: function getRevealAnimation() {\n      var tl = gsap.timeline({\n        paused: true\n      });\n      return tl;\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY29tcG9uZW50cy9Db250ZW50LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBQXFCQSxPQUFPLDBCQUFBQyxjQUFBO0VBQzNCLFNBQUFELFFBQUFFLElBQUEsRUFLRztJQUFBLElBQUFDLEtBQUE7SUFBQSxJQUpGQyxJQUFJLEdBQUFGLElBQUEsQ0FBSkUsSUFBSTtNQUNKQyxtQkFBbUIsR0FBQUgsSUFBQSxDQUFuQkcsbUJBQW1CO01BQ25CQyxNQUFNLEdBQUFKLElBQUEsQ0FBTkksTUFBTTtNQUNOQyxPQUFPLEdBQUFMLElBQUEsQ0FBUEssT0FBTztJQUFBQyxlQUFBLE9BQUFSLE9BQUE7SUFFUEcsS0FBQSxHQUFBTSxVQUFBLE9BQUFULE9BQUEsR0FBTTtNQUNMSSxJQUFJLEVBQUpBLElBQUk7TUFDSkMsbUJBQW1CLEVBQW5CQSxtQkFBbUI7TUFDbkJDLE1BQU0sRUFBTkEsTUFBTTtNQUNOQyxPQUFPLEVBQVBBLE9BQU87TUFDUDtNQUNBRyxRQUFRLEVBQUUsQ0FFVixDQUFDO01BQ0Q7TUFDQUMsYUFBYSxFQUFFLENBRWY7SUFDRCxDQUFDO0lBRURSLEtBQUEsQ0FBS1MsS0FBSyxDQUFDLENBQUM7SUFBQyxPQUFBVCxLQUFBO0VBQ2Q7RUFBQ1UsU0FBQSxDQUFBYixPQUFBLEVBQUFDLGNBQUE7RUFBQSxPQUFBYSxZQUFBLENBQUFkLE9BQUE7SUFBQWUsR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQUMsaUJBQUEsRUFBbUI7TUFDbEIsT0FBTyxJQUFJQyxPQUFPLENBQUMsVUFBQ0MsT0FBTyxFQUFLO1FBQy9CLElBQU1DLEVBQUUsR0FBR0MsSUFBSSxDQUFDQyxRQUFRLENBQUM7VUFDeEJDLFVBQVUsRUFBRSxTQUFBQSxXQUFBLEVBQU07WUFDakJKLE9BQU8sQ0FBQyxJQUFJLENBQUM7VUFDZDtRQUNELENBQUMsQ0FBQztNQUVILENBQUMsQ0FBQztJQUNIO0VBQUM7SUFBQUosR0FBQTtJQUFBQyxLQUFBLEVBRUQsU0FBQVEsbUJBQUEsRUFBcUI7TUFDcEIsSUFBTUosRUFBRSxHQUFHQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztRQUN4QkcsTUFBTSxFQUFFO01BQ1QsQ0FBQyxDQUFDO01BRUYsT0FBT0wsRUFBRTtJQUNWO0VBQUM7QUFBQSxFQTFDbUNNLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aHJlZS1zaGFkZXItZW52MDEvLi9zcmMvanMvY29tcG9uZW50cy9Db250ZW50LmpzPzg2N2UiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ29udGVudCBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuXHRjb25zdHJ1Y3Rvcih7XG5cdFx0bmFtZSxcblx0XHRsb2FkSW5uZXJDb21wb25lbnRzLFxuXHRcdHBhcmVudCxcblx0XHRlbGVtZW50LFxuXHR9KSB7XG5cdFx0c3VwZXIoe1xuXHRcdFx0bmFtZSxcblx0XHRcdGxvYWRJbm5lckNvbXBvbmVudHMsXG5cdFx0XHRwYXJlbnQsXG5cdFx0XHRlbGVtZW50LFxuXHRcdFx0Ly8gQ29tcG9uZW50IGRlZmF1bHQgb3B0aW9uc1xuXHRcdFx0ZGVmYXVsdHM6IHtcblxuXHRcdFx0fSxcblx0XHRcdC8vIENvbXBvbmVudCBpbm5lciBlbGVtZW50c1xuXHRcdFx0aW5uZXJFbGVtZW50czoge1xuXG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHR0aGlzLnNldHVwKCk7XG5cdH1cblxuXHRwcmVwYXJlQW5pbWF0aW9uKCkge1xuXHRcdHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuXHRcdFx0Y29uc3QgdGwgPSBnc2FwLnRpbWVsaW5lKHtcblx0XHRcdFx0b25Db21wbGV0ZTogKCkgPT4ge1xuXHRcdFx0XHRcdHJlc29sdmUodHJ1ZSk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXG5cdFx0fSk7XG5cdH1cblxuXHRnZXRSZXZlYWxBbmltYXRpb24oKSB7XG5cdFx0Y29uc3QgdGwgPSBnc2FwLnRpbWVsaW5lKHtcblx0XHRcdHBhdXNlZDogdHJ1ZVxuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIHRsO1xuXHR9XG59XG4iXSwibmFtZXMiOlsiQ29udGVudCIsIl9CYXNlQ29tcG9uZW50IiwiX3JlZiIsIl90aGlzIiwibmFtZSIsImxvYWRJbm5lckNvbXBvbmVudHMiLCJwYXJlbnQiLCJlbGVtZW50IiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NhbGxTdXBlciIsImRlZmF1bHRzIiwiaW5uZXJFbGVtZW50cyIsInNldHVwIiwiX2luaGVyaXRzIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJwcmVwYXJlQW5pbWF0aW9uIiwiUHJvbWlzZSIsInJlc29sdmUiLCJ0bCIsImdzYXAiLCJ0aW1lbGluZSIsIm9uQ29tcGxldGUiLCJnZXRSZXZlYWxBbmltYXRpb24iLCJwYXVzZWQiLCJCYXNlQ29tcG9uZW50IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/components/Content.js\n");

/***/ }),

/***/ "./src/js/components/CounterUp.js":
/*!****************************************!*\
  !*** ./src/js/components/CounterUp.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CounterUp)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar CounterUp = /*#__PURE__*/function (_BaseComponent) {\n  function CounterUp(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, CounterUp);\n    _this = _callSuper(this, CounterUp, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        start: 0,\n        target: 20,\n        duration: 4,\n        prefix: false,\n        suffix: false,\n        ease: 'power4.out',\n        zeros: 2\n      },\n      // Component inner elements\n      innerElements: {\n        number: '.js-counter-up__number'\n      }\n    }]);\n    _this.counter = {\n      value: _this.options.start\n    };\n    _this._tl = gsap.timeline();\n    _this.setup();\n    return _this;\n  }\n  _inherits(CounterUp, _BaseComponent);\n  return _createClass(CounterUp, [{\n    key: \"init\",\n    value: function init() {\n      this._updateValue(this.options.start);\n    }\n  }, {\n    key: \"getRevealAnimation\",\n    value: function getRevealAnimation() {\n      var _this2 = this;\n      var tl = gsap.timeline({\n        paused: true\n      });\n      tl.to(this.counter, {\n        value: parseFloat(this.options.target).toFixed(0),\n        duration: this.options.duration,\n        ease: this.options.ease,\n        onUpdate: function onUpdate() {\n          _this2._updateValue(_this2.counter.value);\n        }\n      });\n      return tl;\n    }\n  }, {\n    key: \"_updateValue\",\n    value: function _updateValue(value) {\n      if (this.elements.number.length) {\n        var contents = '';\n        if (typeof this.options.prefix === 'string' && this.options.prefix.length) {\n          contents += \"<span class=\\\"counter-up__prefix js-counter-up__prefix\\\">\".concat(this.options.prefix, \"</span>\");\n        }\n        contents += this._addZeros(parseFloat(value).toFixed(0), this.options.zeros);\n        if (typeof this.options.suffix === 'string' && this.options.suffix.length) {\n          contents += \"<span class=\\\"counter-up__suffix js-counter-up__suffix\\\">\".concat(this.options.suffix, \"</span>\");\n        }\n        this.elements.number[0].innerHTML = contents;\n      }\n    }\n  }, {\n    key: \"_addZeros\",\n    value: function _addZeros(value, zeros) {\n      while (value.toString().length < zeros) {\n        value = \"0\".concat(value);\n      }\n      return value;\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUFBQyxNQUFBLENBQThELElBQUksQ0FBQ3JCLE9BQU8sQ0FBQ1IsTUFBTSxZQUFTO1FBQ25HO1FBRUE0QixRQUFRLElBQUksSUFBSSxDQUFDRSxTQUFTLENBQUNQLFVBQVUsQ0FBQ2hCLEtBQUssQ0FBQyxDQUFDaUIsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFLElBQUksQ0FBQ2hCLE9BQU8sQ0FBQ0wsS0FBSyxDQUFDO1FBRTVFLElBQUksT0FBTyxJQUFJLENBQUNLLE9BQU8sQ0FBQ1AsTUFBTSxLQUFLLFFBQVEsSUFBSSxJQUFJLENBQUNPLE9BQU8sQ0FBQ1AsTUFBTSxDQUFDMEIsTUFBTSxFQUFFO1VBQzFFQyxRQUFRLGdFQUFBQyxNQUFBLENBQThELElBQUksQ0FBQ3JCLE9BQU8sQ0FBQ1AsTUFBTSxZQUFTO1FBQ25HO1FBRUEsSUFBSSxDQUFDeUIsUUFBUSxDQUFDckIsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDMEIsU0FBUyxHQUFHSCxRQUFRO01BQzdDO0lBQ0Q7RUFBQztJQUFBYixHQUFBO0lBQUFSLEtBQUEsRUFFRCxTQUFBdUIsVUFBVXZCLEtBQUssRUFBRUosS0FBSyxFQUFFO01BQ3ZCLE9BQU9JLEtBQUssQ0FBQ3lCLFFBQVEsQ0FBQyxDQUFDLENBQUNMLE1BQU0sR0FBR3hCLEtBQUssRUFBRTtRQUN2Q0ksS0FBSyxPQUFBc0IsTUFBQSxDQUFPdEIsS0FBSyxDQUFFO01BQ3BCO01BRUEsT0FBT0EsS0FBSztJQUNiO0VBQUM7QUFBQSxFQTlFcUMwQixhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhyZWUtc2hhZGVyLWVudjAxLy4vc3JjL2pzL2NvbXBvbmVudHMvQ291bnRlclVwLmpzP2FlZWQiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ291bnRlclVwIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHtcblx0XHRuYW1lLFxuXHRcdGxvYWRJbm5lckNvbXBvbmVudHMsXG5cdFx0cGFyZW50LFxuXHRcdGVsZW1lbnQsXG5cdH0pIHtcblx0XHRzdXBlcih7XG5cdFx0XHRuYW1lLFxuXHRcdFx0bG9hZElubmVyQ29tcG9uZW50cyxcblx0XHRcdHBhcmVudCxcblx0XHRcdGVsZW1lbnQsXG5cdFx0XHQvLyBDb21wb25lbnQgZGVmYXVsdCBvcHRpb25zXG5cdFx0XHRkZWZhdWx0czoge1xuXHRcdFx0XHRzdGFydDogMCxcblx0XHRcdFx0dGFyZ2V0OiAyMCxcblx0XHRcdFx0ZHVyYXRpb246IDQsXG5cdFx0XHRcdHByZWZpeDogZmFsc2UsXG5cdFx0XHRcdHN1ZmZpeDogZmFsc2UsXG5cdFx0XHRcdGVhc2U6ICdwb3dlcjQub3V0Jyxcblx0XHRcdFx0emVyb3M6IDJcblx0XHRcdH0sXG5cdFx0XHQvLyBDb21wb25lbnQgaW5uZXIgZWxlbWVudHNcblx0XHRcdGlubmVyRWxlbWVudHM6IHtcblx0XHRcdFx0bnVtYmVyOiAnLmpzLWNvdW50ZXItdXBfX251bWJlcidcblx0XHRcdH0sXG5cdFx0fSk7XG5cdFx0dGhpcy5jb3VudGVyID0ge1xuXHRcdFx0dmFsdWU6IHRoaXMub3B0aW9ucy5zdGFydFxuXHRcdH07XG5cdFx0dGhpcy5fdGwgPSBnc2FwLnRpbWVsaW5lKCk7XG5cblx0XHR0aGlzLnNldHVwKCk7XG5cdH1cblxuXHRpbml0KCkge1xuXHRcdHRoaXMuX3VwZGF0ZVZhbHVlKHRoaXMub3B0aW9ucy5zdGFydCk7XG5cdH1cblxuXHRnZXRSZXZlYWxBbmltYXRpb24oKSB7XG5cdFx0Y29uc3QgdGwgPSBnc2FwLnRpbWVsaW5lKHtcblx0XHRcdHBhdXNlZDogdHJ1ZVxuXHRcdH0pO1xuXG5cdFx0dGwudG8odGhpcy5jb3VudGVyLCB7XG5cdFx0XHR2YWx1ZTogcGFyc2VGbG9hdCh0aGlzLm9wdGlvbnMudGFyZ2V0KS50b0ZpeGVkKDApLFxuXHRcdFx0ZHVyYXRpb246IHRoaXMub3B0aW9ucy5kdXJhdGlvbixcblx0XHRcdGVhc2U6IHRoaXMub3B0aW9ucy5lYXNlLFxuXHRcdFx0b25VcGRhdGU6ICgpID0+IHsgdGhpcy5fdXBkYXRlVmFsdWUodGhpcy5jb3VudGVyLnZhbHVlKTsgfVxuXHRcdH0pO1xuXG5cdFx0cmV0dXJuIHRsO1xuXHR9XG5cblx0X3VwZGF0ZVZhbHVlKHZhbHVlKSB7XG5cdFx0aWYgKHRoaXMuZWxlbWVudHMubnVtYmVyLmxlbmd0aCkge1xuXHRcdFx0bGV0IGNvbnRlbnRzID0gJyc7XG5cblx0XHRcdGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLnByZWZpeCA9PT0gJ3N0cmluZycgJiYgdGhpcy5vcHRpb25zLnByZWZpeC5sZW5ndGgpIHtcblx0XHRcdFx0Y29udGVudHMgKz0gYDxzcGFuIGNsYXNzPVwiY291bnRlci11cF9fcHJlZml4IGpzLWNvdW50ZXItdXBfX3ByZWZpeFwiPiR7dGhpcy5vcHRpb25zLnByZWZpeH08L3NwYW4+YDtcblx0XHRcdH1cblxuXHRcdFx0Y29udGVudHMgKz0gdGhpcy5fYWRkWmVyb3MocGFyc2VGbG9hdCh2YWx1ZSkudG9GaXhlZCgwKSwgdGhpcy5vcHRpb25zLnplcm9zKTtcblxuXHRcdFx0aWYgKHR5cGVvZiB0aGlzLm9wdGlvbnMuc3VmZml4ID09PSAnc3RyaW5nJyAmJiB0aGlzLm9wdGlvbnMuc3VmZml4Lmxlbmd0aCkge1xuXHRcdFx0XHRjb250ZW50cyArPSBgPHNwYW4gY2xhc3M9XCJjb3VudGVyLXVwX19zdWZmaXgganMtY291bnRlci11cF9fc3VmZml4XCI+JHt0aGlzLm9wdGlvbnMuc3VmZml4fTwvc3Bhbj5gO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLmVsZW1lbnRzLm51bWJlclswXS5pbm5lckhUTUwgPSBjb250ZW50cztcblx0XHR9XG5cdH1cblxuXHRfYWRkWmVyb3ModmFsdWUsIHplcm9zKSB7XG5cdFx0d2hpbGUgKHZhbHVlLnRvU3RyaW5nKCkubGVuZ3RoIDwgemVyb3MpIHtcblx0XHRcdHZhbHVlID0gYDAke3ZhbHVlfWA7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHZhbHVlO1xuXHR9XG59XG4iXSwibmFtZXMiOlsiQ291bnRlclVwIiwiX0Jhc2VDb21wb25lbnQiLCJfcmVmIiwiX3RoaXMiLCJuYW1lIiwibG9hZElubmVyQ29tcG9uZW50cyIsInBhcmVudCIsImVsZW1lbnQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY2FsbFN1cGVyIiwiZGVmYXVsdHMiLCJzdGFydCIsInRhcmdldCIsImR1cmF0aW9uIiwicHJlZml4Iiwic3VmZml4IiwiZWFzZSIsInplcm9zIiwiaW5uZXJFbGVtZW50cyIsIm51bWJlciIsImNvdW50ZXIiLCJ2YWx1ZSIsIm9wdGlvbnMiLCJfdGwiLCJnc2FwIiwidGltZWxpbmUiLCJzZXR1cCIsIl9pbmhlcml0cyIsIl9jcmVhdGVDbGFzcyIsImtleSIsImluaXQiLCJfdXBkYXRlVmFsdWUiLCJnZXRSZXZlYWxBbmltYXRpb24iLCJfdGhpczIiLCJ0bCIsInBhdXNlZCIsInRvIiwicGFyc2VGbG9hdCIsInRvRml4ZWQiLCJvblVwZGF0ZSIsImVsZW1lbnRzIiwibGVuZ3RoIiwiY29udGVudHMiLCJjb25jYXQiLCJfYWRkWmVyb3MiLCJpbm5lckhUTUwiLCJ0b1N0cmluZyIsIkJhc2VDb21wb25lbnQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/components/CounterUp.js\n");

/***/ }),

/***/ "./src/js/components/CursorFollower.js":
/*!*********************************************!*\
  !*** ./src/js/components/CursorFollower.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CursorFollower)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar CursorFollower = /*#__PURE__*/function (_BaseComponent) {\n  function CursorFollower(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element,\n      options = _ref.options;\n    _classCallCheck(this, CursorFollower);\n    _this = _callSuper(this, CursorFollower, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // External options from app.options.cursorFollower\n      defaults: options,\n      // Component inner elements\n      innerElements: {}\n    }]);\n    _this._handlers = {\n      transitionStart: _this._onTransitionStart.bind(_this),\n      transitionEnd: _this._onTransitionEnd.bind(_this)\n    };\n    _this.setup();\n    return _this;\n  }\n  _inherits(CursorFollower, _BaseComponent);\n  return _createClass(CursorFollower, [{\n    key: \"init\",\n    value: function init() {\n      this._createCursorFollower();\n      this._attachEvents();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      this.instance.destroy();\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      document.removeEventListener('arts/barba/transition/start', this._handlers.transitionStart);\n      document.removeEventListener('arts/barba/transition/end', this._handlers.transitionEnd);\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      document.addEventListener('arts/barba/transition/start', this._handlers.transitionStart);\n      document.addEventListener('arts/barba/transition/end', this._handlers.transitionEnd);\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this.instance.update();\n    }\n  }, {\n    key: \"_createCursorFollower\",\n    value: function _createCursorFollower() {\n      this.instance = new ArtsCursorFollower(this.element, this.options);\n    }\n  }, {\n    key: \"_onTransitionStart\",\n    value: function _onTransitionStart() {\n      this._setLoading(true);\n    }\n  }, {\n    key: \"_onTransitionEnd\",\n    value: function _onTransitionEnd() {\n      var _this2 = this;\n      gsap.delayedCall(0.3, function () {\n        _this2._setLoading(false);\n      });\n    }\n  }, {\n    key: \"_setLoading\",\n    value: function _setLoading() {\n      var loading = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (this.instance) {\n        if (loading) {\n          this.instance.reset();\n        } else {\n          this.instance.update();\n        }\n        this.instance.reset();\n        this.instance.setLoading(loading);\n      }\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LElBQUksQ0FBQztJQUN2QjtFQUFDO0lBQUFiLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFMLGlCQUFBLEVBQW1CO01BQUEsSUFBQWtCLE1BQUE7TUFDbEJDLElBQUksQ0FBQ0MsV0FBVyxDQUFDLEdBQUcsRUFBRSxZQUFNO1FBQzNCRixNQUFJLENBQUNELFdBQVcsQ0FBQyxLQUFLLENBQUM7TUFDeEIsQ0FBQyxDQUFDO0lBQ0g7RUFBQztJQUFBYixHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBWSxZQUFBLEVBQTRCO01BQUEsSUFBaEJJLE9BQU8sR0FBQUMsU0FBQSxDQUFBQyxNQUFBLFFBQUFELFNBQUEsUUFBQUUsU0FBQSxHQUFBRixTQUFBLE1BQUcsSUFBSTtNQUN6QixJQUFJLElBQUksQ0FBQ1gsUUFBUSxFQUFFO1FBQ2xCLElBQUlVLE9BQU8sRUFBRTtVQUNaLElBQUksQ0FBQ1YsUUFBUSxDQUFDYyxLQUFLLENBQUMsQ0FBQztRQUN0QixDQUFDLE1BQU07VUFDTixJQUFJLENBQUNkLFFBQVEsQ0FBQ0ksTUFBTSxDQUFDLENBQUM7UUFDdkI7UUFFQSxJQUFJLENBQUNKLFFBQVEsQ0FBQ2MsS0FBSyxDQUFDLENBQUM7UUFDckIsSUFBSSxDQUFDZCxRQUFRLENBQUNlLFVBQVUsQ0FBQ0wsT0FBTyxDQUFDO01BQ2xDO0lBQ0Q7RUFBQztBQUFBLEVBM0UwQ00sYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL3RocmVlLXNoYWRlci1lbnYwMS8uL3NyYy9qcy9jb21wb25lbnRzL0N1cnNvckZvbGxvd2VyLmpzPzMxNTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ3Vyc29yRm9sbG93ZXIgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3Ioe1xuXHRcdG5hbWUsXG5cdFx0bG9hZElubmVyQ29tcG9uZW50cyxcblx0XHRwYXJlbnQsXG5cdFx0ZWxlbWVudCxcblx0XHRvcHRpb25zXG5cdH0pIHtcblx0XHRzdXBlcih7XG5cdFx0XHRuYW1lLFxuXHRcdFx0bG9hZElubmVyQ29tcG9uZW50cyxcblx0XHRcdHBhcmVudCxcblx0XHRcdGVsZW1lbnQsXG5cdFx0XHQvLyBFeHRlcm5hbCBvcHRpb25zIGZyb20gYXBwLm9wdGlvbnMuY3Vyc29yRm9sbG93ZXJcblx0XHRcdGRlZmF1bHRzOiBvcHRpb25zLFxuXHRcdFx0Ly8gQ29tcG9uZW50IGlubmVyIGVsZW1lbnRzXG5cdFx0XHRpbm5lckVsZW1lbnRzOiB7fVxuXHRcdH0pO1xuXHRcdHRoaXMuX2hhbmRsZXJzID0ge1xuXHRcdFx0dHJhbnNpdGlvblN0YXJ0OiB0aGlzLl9vblRyYW5zaXRpb25TdGFydC5iaW5kKHRoaXMpLFxuXHRcdFx0dHJhbnNpdGlvbkVuZDogdGhpcy5fb25UcmFuc2l0aW9uRW5kLmJpbmQodGhpcylcblx0XHR9O1xuXG5cdFx0dGhpcy5zZXR1cCgpO1xuXHR9XG5cblx0aW5pdCgpIHtcblx0XHR0aGlzLl9jcmVhdGVDdXJzb3JGb2xsb3dlcigpO1xuXHRcdHRoaXMuX2F0dGFjaEV2ZW50cygpO1xuXHR9XG5cblx0ZGVzdHJveSgpIHtcblx0XHR0aGlzLl9kZXRhY2hFdmVudHMoKTtcblx0XHR0aGlzLmluc3RhbmNlLmRlc3Ryb3koKTtcblx0fVxuXG5cdF9kZXRhY2hFdmVudHMoKSB7XG5cdFx0ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignYXJ0cy9iYXJiYS90cmFuc2l0aW9uL3N0YXJ0JywgdGhpcy5faGFuZGxlcnMudHJhbnNpdGlvblN0YXJ0KTtcblx0XHRkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdhcnRzL2JhcmJhL3RyYW5zaXRpb24vZW5kJywgdGhpcy5faGFuZGxlcnMudHJhbnNpdGlvbkVuZCk7XG5cdH1cblxuXHRfYXR0YWNoRXZlbnRzKCkge1xuXHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2FydHMvYmFyYmEvdHJhbnNpdGlvbi9zdGFydCcsIHRoaXMuX2hhbmRsZXJzLnRyYW5zaXRpb25TdGFydCk7XG5cdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignYXJ0cy9iYXJiYS90cmFuc2l0aW9uL2VuZCcsIHRoaXMuX2hhbmRsZXJzLnRyYW5zaXRpb25FbmQpO1xuXHR9XG5cblx0dXBkYXRlKCkge1xuXHRcdHRoaXMuaW5zdGFuY2UudXBkYXRlKCk7XG5cdH1cblxuXHRfY3JlYXRlQ3Vyc29yRm9sbG93ZXIoKSB7XG5cdFx0dGhpcy5pbnN0YW5jZSA9IG5ldyBBcnRzQ3Vyc29yRm9sbG93ZXIodGhpcy5lbGVtZW50LCB0aGlzLm9wdGlvbnMpO1xuXHR9XG5cblx0X29uVHJhbnNpdGlvblN0YXJ0KCkge1xuXHRcdHRoaXMuX3NldExvYWRpbmcodHJ1ZSk7XG5cdH1cblxuXHRfb25UcmFuc2l0aW9uRW5kKCkge1xuXHRcdGdzYXAuZGVsYXllZENhbGwoMC4zLCAoKSA9PiB7XG5cdFx0XHR0aGlzLl9zZXRMb2FkaW5nKGZhbHNlKTtcblx0XHR9KTtcblx0fVxuXG5cdF9zZXRMb2FkaW5nKGxvYWRpbmcgPSB0cnVlKSB7XG5cdFx0aWYgKHRoaXMuaW5zdGFuY2UpIHtcblx0XHRcdGlmIChsb2FkaW5nKSB7XG5cdFx0XHRcdHRoaXMuaW5zdGFuY2UucmVzZXQoKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMuaW5zdGFuY2UudXBkYXRlKCk7XG5cdFx0XHR9XG5cblx0XHRcdHRoaXMuaW5zdGFuY2UucmVzZXQoKTtcblx0XHRcdHRoaXMuaW5zdGFuY2Uuc2V0TG9hZGluZyhsb2FkaW5nKTtcblx0XHR9XG5cdH1cbn1cbiJdLCJuYW1lcyI6WyJDdXJzb3JGb2xsb3dlciIsIl9CYXNlQ29tcG9uZW50IiwiX3JlZiIsIl90aGlzIiwibmFtZSIsImxvYWRJbm5lckNvbXBvbmVudHMiLCJwYXJlbnQiLCJlbGVtZW50Iiwib3B0aW9ucyIsIl9jbGFzc0NhbGxDaGVjayIsIl9jYWxsU3VwZXIiLCJkZWZhdWx0cyIsImlubmVyRWxlbWVudHMiLCJfaGFuZGxlcnMiLCJ0cmFuc2l0aW9uU3RhcnQiLCJfb25UcmFuc2l0aW9uU3RhcnQiLCJiaW5kIiwidHJhbnNpdGlvbkVuZCIsIl9vblRyYW5zaXRpb25FbmQiLCJzZXR1cCIsIl9pbmhlcml0cyIsIl9jcmVhdGVDbGFzcyIsImtleSIsInZhbHVlIiwiaW5pdCIsIl9jcmVhdGVDdXJzb3JGb2xsb3dlciIsIl9hdHRhY2hFdmVudHMiLCJkZXN0cm95IiwiX2RldGFjaEV2ZW50cyIsImluc3RhbmNlIiwiZG9jdW1lbnQiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiYWRkRXZlbnRMaXN0ZW5lciIsInVwZGF0ZSIsIkFydHNDdXJzb3JGb2xsb3dlciIsIl9zZXRMb2FkaW5nIiwiX3RoaXMyIiwiZ3NhcCIsImRlbGF5ZWRDYWxsIiwibG9hZGluZyIsImFyZ3VtZW50cyIsImxlbmd0aCIsInVuZGVmaW5lZCIsInJlc2V0Iiwic2V0TG9hZGluZyIsIkJhc2VDb21wb25lbnQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/components/CursorFollower.js\n");

/***/ }),

/***/ "./src/js/components/CurtainsBase.js":
/*!*******************************************!*\
  !*** ./src/js/components/CurtainsBase.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ CurtainsBase)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nvar CurtainsBase = /*#__PURE__*/function () {\n  function CurtainsBase(_ref) {\n    var element = _ref.element,\n      container = _ref.container,\n      lanes = _ref.lanes,\n      options = _ref.options;\n    _classCallCheck(this, CurtainsBase);\n    this.planes = {}; // Groups of planes like \"0: []\", \"1: []\", etc\n    this._handlers = {\n      success: this._onSuccess.bind(this),\n      error: this._onError.bind(this),\n      contextLost: this._onContextLost.bind(this),\n      mouseMove: this._onMouseMove.bind(this),\n      hoverIn: this._onMouseEnter.bind(this),\n      hoverOut: this._onMouseLeave.bind(this)\n    };\n    this._tlHover = gsap.timeline({\n      defaults: {\n        duration: 2.4,\n        ease: 'power3.out'\n      }\n    });\n    this.defaults = {\n      planes: {\n        widthSegments: 16,\n        heightSegments: 16,\n        visible: false,\n        // hide the plane while it's empty\n        autoloadSources: false,\n        uniforms: {\n          time: {\n            name: 'uTime',\n            type: '1f',\n            value: 0\n          },\n          velocityX: {\n            name: 'uVelocityX',\n            type: '1f',\n            value: 0\n          },\n          velocityY: {\n            name: 'uVelocityY',\n            type: '1f',\n            value: 0\n          },\n          elasticEffect: {\n            name: 'uElasticEffect',\n            type: '1f',\n            value: 0\n          },\n          mousePosition: {\n            name: 'uMousePosition',\n            type: '2f',\n            value: [0, 0]\n          },\n          viewportSizes: {\n            name: 'uViewportSizes',\n            type: '2f',\n            value: [0, 0]\n          },\n          planeSizes: {\n            name: 'uPlaneSizes',\n            type: '2f',\n            value: [0, 0]\n          },\n          imageSizes: {\n            name: 'uImageSizes',\n            type: '2f',\n            value: [0, 0]\n          },\n          opacity: {\n            name: 'uOpacity',\n            type: '1f',\n            value: 1\n          },\n          transition: {\n            name: 'uTransition',\n            type: '1f',\n            value: 0\n          },\n          hovered: {\n            name: 'uHovered',\n            type: '1f',\n            value: 0\n          },\n          hoverSpeed: {\n            name: 'uHoverSpeed',\n            type: '1f',\n            value: 1\n          },\n          hoverAmplitude: {\n            name: 'uHoverAmplitude',\n            type: '1f',\n            value: 1\n          },\n          hoverSegments: {\n            name: 'uHoverSegments',\n            type: '1f',\n            value: 4\n          }\n        },\n        onRender: function onRender(plane) {\n          plane.uniforms.time.value++;\n        }\n      },\n      elasticEffect: 1,\n      onHoverIn: {\n        hovered: 1,\n        speed: 8,\n        amplitude: 2,\n        segments: 8,\n        opacity: 1,\n        scalePlane: 1,\n        scaleTexture: 1\n      },\n      onHoverInOthers: {\n        opacity: false,\n        scalePlane: false,\n        scaleTexture: false\n      },\n      onHoverOut: {\n        hovered: 0,\n        speed: 1,\n        amplitude: 1,\n        segments: 4,\n        opacity: false,\n        scalePlane: false,\n        scaleTexture: false\n      },\n      onContextLost: function onContextLost(instance) {},\n      hasCurtainsClass: 'has-curtains',\n      noCurtainsClass: 'no-curtains',\n      textureSourceAttribute: 'data-texture-src',\n      itemIdAttribute: 'data-post-id',\n      watchMouseMove: false,\n      antialias: true,\n      watchScroll: 'auto',\n      autoResize: false,\n      autoRender: false,\n      pixelRatio: Math.min(1.5, window.devicePixelRatio)\n    };\n    this.element = element;\n    this.lanes = lanes;\n    this.container = container || element;\n    this.options = deepmerge(this.defaults, options);\n    this.init();\n  }\n  return _createClass(CurtainsBase, [{\n    key: \"init\",\n    value: function init() {\n      this._initCurtains();\n      if (!!this.options.planes) {\n        this._adjustOptions();\n        this._loadPlanes();\n      }\n      this._attachEvents();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      if (!!this.instance) {\n        if (!this.options.autoRender) {\n          gsap.ticker.remove(this.instance.render.bind(this.instance));\n        }\n        this.instance.dispose();\n        this.instance = null;\n      }\n    }\n  }, {\n    key: \"resetPlanesTranslation\",\n    value: function resetPlanesTranslation() {\n      var planes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.instance.planes;\n      if (planes.length) {\n        planes.forEach(function (plane) {\n          plane.relativeTranslation.x = 0;\n          plane.relativeTranslation.y = 0;\n          plane.relativeTranslation.z = 0;\n        });\n      }\n    }\n  }, {\n    key: \"resetPlanesScale\",\n    value: function resetPlanesScale() {\n      var planes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.instance.planes;\n      if (planes.length) {\n        planes.forEach(function (plane) {\n          plane.scale.x = 1;\n          plane.scale.y = 1;\n        });\n      }\n    }\n  }, {\n    key: \"resetPlanesVisibility\",\n    value: function resetPlanesVisibility() {\n      var condition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var planes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.instance.planes;\n      if (planes.length) {\n        planes.forEach(function (plane) {\n          if (condition !== null) {\n            plane.visible = condition;\n          } else {\n            // Plane is not \"display: none\"\n            plane.visible = !!plane.htmlElement.offsetParent;\n          }\n          plane.uniforms.opacity.value = 1;\n        });\n      }\n    }\n  }, {\n    key: \"resetPlanesVelocity\",\n    value: function resetPlanesVelocity() {\n      var planes = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.instance.planes;\n      if (planes.length) {\n        planes.forEach(function (plane) {\n          plane.uniforms.velocityX.value = 0;\n          plane.uniforms.velocityY.value = 0;\n        });\n      }\n    }\n  }, {\n    key: \"loadPlane\",\n    value: function loadPlane(indexLane, element) {\n      if (!element instanceof HTMLElement) {\n        return;\n      }\n      if (!this.planes[indexLane]) {\n        this.planes[indexLane] = [];\n      }\n      var mediaTexture = element.querySelector(\"img[\".concat(this.options.textureSourceAttribute, \"]\"));\n      if (mediaTexture) {\n        var planeElement = mediaTexture.parentElement,\n          plane = new Plane(this.instance, planeElement, this.options.planes);\n        this.planes[indexLane].push(plane);\n        this._assignPlaneUserData(plane);\n        this._loadPlaneTexture(plane, this.textureOptions);\n        this._addPlaneRenderCallback(plane);\n      }\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      var _this = this;\n      this.instance.onSuccess(this._handlers.success).onError(this._handlers.error).onContextLost(this._handlers.contextLost);\n      if (!!this.options.watchMouseMove) {\n        this.mouse = new Vec2();\n        this.lastMouse = this.mouse.clone();\n        this.mouseVelocity = new Vec2();\n        this.updateVelocity = false;\n        window.addEventListener('mousemove', this._handlers.mouseMove);\n        window.addEventListener('touchmove', this._handlers.mouseMove, {\n          passive: true\n        });\n      }\n      if (!!this.options.planes && !!this.options.onHoverIn && !!this.options.onHoverIn) {\n        app.hoverEffect.attachEvents(this.element, this._handlers.hoverIn, this._handlers.hoverOut);\n      }\n      this.container.addEventListener('loadPlane', function (event) {\n        var _event$detail = event.detail,\n          trigger = _event$detail.trigger,\n          nextElement = _event$detail.nextElement,\n          nextElementMedia = _event$detail.nextElementMedia,\n          callback = _event$detail.callback;\n        _this._loadTransitionPlane({\n          element: trigger,\n          target: nextElement,\n          targetMedia: nextElementMedia,\n          callback: callback\n        });\n      });\n      this.container.addEventListener('translatePlane', function (event) {\n        var _event$detail2 = event.detail,\n          trigger = _event$detail2.trigger,\n          nextElement = _event$detail2.nextElement,\n          nextElementMedia = _event$detail2.nextElementMedia,\n          callback = _event$detail2.callback,\n          offsetTop = _event$detail2.offsetTop,\n          duration = _event$detail2.duration;\n        if (offsetTop > 0) {\n          _this.instance.updateScrollValues(0, offsetTop);\n          _this.instance.resize();\n        }\n        _this._translatePlaneTo({\n          duration: duration,\n          offsetTop: offsetTop,\n          element: trigger,\n          target: nextElement,\n          targetMedia: nextElementMedia,\n          callback: callback\n        });\n      });\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      if (!!this.options.watchMouseMove) {\n        window.removeEventListener('mousemove', this._handlers.mouseMove);\n        window.removeEventListener('touchmove', this._handlers.mouseMove, {\n          passive: true\n        });\n      }\n      if (!!this.options.planes && !!this.options.onHoverIn && !!this.options.onHoverIn) {\n        app.hoverEffect.detachEvents(this.element, this._handlers.hoverIn, this._handlers.hoverOut);\n      }\n    }\n  }, {\n    key: \"_initCurtains\",\n    value: function _initCurtains() {\n      var watchScroll = this.options.watchScroll;\n      if (this.options.watchScroll === 'auto') {\n        watchScroll = false;\n      } else {\n        watchScroll = window.getComputedStyle(this.container).position === 'fixed' ? true : false;\n      }\n      this.instance = new Curtains({\n        antialias: this.options.antialias,\n        container: this.container,\n        depth: false,\n        watchScroll: watchScroll,\n        // premultipliedAlpha: true,\n        autoResize: this.options.autoResize,\n        autoRender: this.options.autoRender,\n        pixelRatio: this.options.pixelRatio,\n        production: true\n      });\n      this.textureOptions = {\n        premultiplyAlpha: true,\n        // minFilter: this.instance.gl.LINEAR_MIPMAP_NEAREST,\n        anisotropy: 16,\n        floatingPoint: 'half-float'\n      };\n      if (!this.options.autoRender) {\n        gsap.ticker.add(this.instance.render.bind(this.instance));\n      }\n    }\n  }, {\n    key: \"_adjustOptions\",\n    value: function _adjustOptions() {\n      this.options.planes.uniforms.viewportSizes.value = this._getViewportSize();\n      this.options.planes.uniforms.elasticEffect.value = this.options.elasticEffect;\n      if (!!this.options.onHoverOut) {\n        if (typeof this.options.onHoverOut.speed === 'number') {\n          this.options.planes.uniforms.hoverSpeed.value = this.options.onHoverOut.speed;\n        }\n        if (typeof this.options.onHoverOut.amplitude === 'number') {\n          this.options.planes.uniforms.hoverAmplitude.value = this.options.onHoverOut.amplitude;\n        }\n        if (typeof this.options.onHoverOut.segments === 'number') {\n          this.options.planes.uniforms.hoverSegments.value = this.options.onHoverOut.segments;\n        }\n      }\n    }\n  }, {\n    key: \"_loadPlanes\",\n    value: function _loadPlanes() {\n      var _this2 = this;\n      this.lanes.forEach(function (lane, indexLane) {\n        var mediaTextures = _toConsumableArray(lane.querySelectorAll(\"img[\".concat(_this2.options.textureSourceAttribute, \"]\")));\n        _this2.planes[indexLane] = [];\n        if (mediaTextures.length) {\n          mediaTextures.forEach(function (element, indexPlane) {\n            var planeElement = element.parentElement,\n              plane = new Plane(_this2.instance, planeElement, _this2.options.planes);\n            _this2.planes[indexLane][indexPlane] = plane;\n            _this2._assignPlaneUserData(plane);\n            _this2._loadPlaneTexture(plane, _this2.textureOptions);\n            _this2._addPlaneRenderCallback(plane);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_loadPlaneTexture\",\n    value: function _loadPlaneTexture(plane) {\n      var textureOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var planeImage = plane.htmlElement instanceof HTMLElement && plane.htmlElement.querySelector(\"img[\".concat(this.options.textureSourceAttribute, \"]\")),\n        planeVideo = plane.htmlElement instanceof HTMLElement && plane.htmlElement.querySelector(\"video\");\n      if (planeImage && !planeVideo) {\n        this._loadPlaneImage(plane, planeImage, textureOptions);\n      }\n      if (planeVideo) {\n        this._loadPlaneVideo(plane, planeVideo, textureOptions);\n      }\n    }\n  }, {\n    key: \"_loadPlaneImage\",\n    value: function _loadPlaneImage(plane, element) {\n      var _this3 = this;\n      var textureOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var width = element.getAttribute('width'),\n        height = element.getAttribute('height'),\n        image = new Image(width, height);\n      image.decoding = 'async';\n      image.crossOrigin = 'anonymous';\n      image.src = element.getAttribute('data-texture-src');\n      if (width && height) {\n        if (!plane.htmlElement.closest('.custom-aspect-ratio')) {\n          plane.htmlElement.style.setProperty('--media-width', width);\n          plane.htmlElement.style.setProperty('--media-height', height);\n          plane.htmlElement.classList.add('has-aspect-ratio');\n          plane.resize();\n        }\n      }\n      plane.loadImage(image, textureOptions, function (texture) {\n        _this3._setTextureReady(element);\n        _this3._setPlaneSize(plane, width, height);\n      });\n    }\n  }, {\n    key: \"_loadPlaneVideo\",\n    value: function _loadPlaneVideo(plane, element) {\n      var _this4 = this;\n      var textureOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var image = element.parentElement.querySelector('img');\n      var width, height;\n      if (image) {\n        width = image.getAttribute('width');\n        height = image.getAttribute('height');\n      } else {\n        width = element.getAttribute('width');\n        height = element.getAttribute('height');\n      }\n\n      // element.src = element.getAttribute(`${this.options.textureSourceAttribute}`);\n\n      if (!plane.htmlElement.closest('.custom-aspect-ratio') && width && height) {\n        plane.htmlElement.style.setProperty('--media-width', width);\n        plane.htmlElement.style.setProperty('--media-height', height);\n        plane.htmlElement.classList.add('has-aspect-ratio');\n        plane.resize();\n      }\n      plane.loadVideo(element, textureOptions, function (texture) {\n        _this4._setTextureReady(element);\n        if (width && height) {\n          _this4._setPlaneSize(plane, width, height);\n          // plane.htmlElement.style.setProperty('--media-width', width);\n          // plane.htmlElement.style.setProperty('--media-height', height);\n          // plane.htmlElement.classList.add('has-aspect-ratio');\n        }\n\n        // const tex = plane.addTexture(texture);\n        // Replace image texture (if it's present) with the video\n        // tex.setSource(texture.source);\n        // if (plane.textures[0]) {\n        // \tplane.textures[0].setSource(texture.source);\n        // }\n        plane.playVideos();\n      });\n      plane.onLoading(plane.playVideos.bind(plane));\n    }\n  }, {\n    key: \"_loadTexturesBackToDOM\",\n    value: function _loadTexturesBackToDOM() {\n      var _this5 = this;\n      if (!!this.instance && this.instance.planes.length) {\n        this.instance.planes.forEach(function (plane) {\n          if (plane.textures.length) {\n            plane.textures.forEach(function (texture, index) {\n              var originalElements = _toConsumableArray(plane.htmlElement.querySelectorAll('img, video'));\n              originalElements.forEach(function (originalTextureElement) {\n                var originalSource = originalTextureElement.getAttribute(\"\".concat(_this5.options.textureSourceAttribute));\n                originalTextureElement.setAttribute('src', originalSource);\n              });\n            });\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_assignPlaneUserData\",\n    value: function _assignPlaneUserData(plane) {\n      if (typeof this.options.itemIdAttribute === 'string' && plane && plane.htmlElement instanceof HTMLElement) {\n        var IDElement = plane.htmlElement.closest(\"[\".concat(this.options.itemIdAttribute, \"]\"));\n        if (IDElement) {\n          Object.assign(plane, {\n            userData: {\n              postId: IDElement.getAttribute(\"\".concat(this.options.itemIdAttribute))\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_addPlaneRenderCallback\",\n    value: function _addPlaneRenderCallback(plane) {\n      var _this6 = this;\n      if (typeof this.options.planes.onRender === 'function') {\n        plane.onRender(function () {\n          return _this6.options.planes.onRender(plane);\n        });\n      }\n    }\n  }, {\n    key: \"_setTextureReady\",\n    value: function _setTextureReady(element) {\n      var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      element.classList.toggle('loaded', ready);\n    }\n  }, {\n    key: \"_setPlaneSize\",\n    value: function _setPlaneSize(plane, width, height) {\n      plane.uniforms.planeSizes.value = [plane.scale.x, plane.scale.y];\n      plane.uniforms.imageSizes.value = [width, height];\n    }\n  }, {\n    key: \"_onSuccess\",\n    value: function _onSuccess() {\n      this.element.classList.remove(\"\".concat(this.options.noCurtainsClass));\n      this.element.classList.add(\"\".concat(this.options.hasCurtainsClass));\n    }\n  }, {\n    key: \"_onError\",\n    value: function _onError() {\n      this.element.classList.remove(\"\".concat(this.options.hasCurtainsClass));\n      this.element.classList.add(\"\".concat(this.options.noCurtainsClass));\n      this._loadTexturesBackToDOM();\n    }\n  }, {\n    key: \"_onContextLost\",\n    value: function _onContextLost() {\n      if (!!this.instance) {\n        // On WebGL context lost, try to restore the context\n        this.instance.restoreContext();\n        if (typeof this.options.onContextLost === 'function') {\n          this.options.onContextLost(this.instance);\n        }\n      }\n    }\n  }, {\n    key: \"_getViewportSize\",\n    value: function _getViewportSize() {\n      var fieldOfView = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 45;\n      var positionZ = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 5;\n      var fov = fieldOfView * (Math.PI / 180),\n        height = 2 * Math.tan(fov / 2) * positionZ,\n        width = height * (this.container.offsetWidth / this.container.offsetHeight);\n      return [width, height];\n    }\n  }, {\n    key: \"_onMouseMove\",\n    value: function _onMouseMove(event) {\n      var _this7 = this;\n      // velocity is our mouse position minus our mouse last position\n      this.lastMouse.copy(this.mouse);\n      if (event.targetTouches) {\n        this.mouse.set(event.targetTouches[0].clientX, event.targetTouches[0].clientY);\n      } else {\n        this.mouse.set(event.clientX, event.clientY);\n      }\n      var frameDuration = gsap.ticker.deltaRatio();\n\n      // divided by a frame duration (roughly)\n      this.mouseVelocity.set((this.mouse.x - this.lastMouse.x) * frameDuration, (this.mouse.y - this.lastMouse.y) * frameDuration);\n      for (var _i = 0, _Object$entries = Object.entries(this.planes); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          indexLane = _Object$entries$_i[0],\n          lane = _Object$entries$_i[1];\n        lane.forEach(function (plane, indexPlane) {\n          plane.uniforms.mousePosition.value = plane.mouseToPlaneCoords(_this7.mouse);\n        });\n      }\n\n      // we should update the velocity\n      this.updateVelocity = true;\n    }\n  }, {\n    key: \"_onMouseEnter\",\n    value: function _onMouseEnter(event) {\n      var _this8 = this;\n      var target = app.utilities.getLinkTarget(event);\n      if (target) {\n        this._tlHover.clear();\n        for (var _i2 = 0, _Object$entries2 = Object.entries(this.planes); _i2 < _Object$entries2.length; _i2++) {\n          var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n            indexLane = _Object$entries2$_i[0],\n            lane = _Object$entries2$_i[1];\n          lane.forEach(function (plane) {\n            // Current plane\n            if (_this8._isCurrentPlane(plane, target)) {\n              _this8._tlHover.to(plane.uniforms.hovered, {\n                value: _this8.options.onHoverIn.hovered\n              }, 'start').to(plane.uniforms.hoverSpeed, {\n                value: _this8.options.onHoverIn.speed\n              }, 'start').to(plane.uniforms.hoverAmplitude, {\n                value: _this8.options.onHoverIn.amplitude\n              }, 'start').to(plane.uniforms.hoverSegments, {\n                value: _this8.options.onHoverIn.segments\n              }, 'start');\n              if (!!_this8.options.onHoverIn) {\n                if (typeof _this8.options.onHoverIn.opacity === 'number') {\n                  _this8._tlHover.to(plane.uniforms.opacity, {\n                    value: 1,\n                    duration: 0.6,\n                    ease: 'power3.out'\n                  }, 'start');\n                }\n                if (typeof _this8.options.onHoverIn.scalePlane === 'number') {\n                  var animation = {\n                    scaleX: plane.scale.x,\n                    scaleY: plane.scale.y\n                  };\n                  _this8._tlHover.to(animation, {\n                    scaleX: _this8.options.onHoverIn.scalePlane,\n                    scaleY: _this8.options.onHoverIn.scalePlane,\n                    duration: 0.6,\n                    ease: 'power3.out',\n                    onUpdate: function onUpdate() {\n                      plane.scale.x = animation.scaleX;\n                      plane.scale.y = animation.scaleX;\n                    }\n                  }, 'start');\n                }\n                if (typeof _this8.options.onHoverIn.scaleTexture === 'number' && plane.textures[0] && 'scale' in plane.textures[0]) {\n                  var _animation = {\n                    scaleX: plane.textures[0].scale.x,\n                    scaleY: plane.textures[0].scale.y\n                  };\n                  _this8._tlHover.to(_animation, {\n                    scaleX: _this8.options.onHoverIn.scaleTexture,\n                    scaleY: _this8.options.onHoverIn.scaleTexture,\n                    duration: 0.6,\n                    ease: 'power3.out',\n                    onUpdate: function onUpdate() {\n                      if (plane.textures.length) {\n                        plane.textures.forEach(function (texture) {\n                          texture.scale.x = _animation.scaleX;\n                          texture.scale.y = _animation.scaleY;\n                        });\n                      }\n                    }\n                  }, 'start');\n                }\n              }\n            } else {\n              // Other planes\n              _this8._tlHover.to(plane.uniforms.hovered, {\n                value: 0\n              }, 'start').to(plane.uniforms.hoverSpeed, {\n                value: 0\n              }, 'start').to(plane.uniforms.hoverAmplitude, {\n                value: 0\n              }, 'start').to(plane.uniforms.hoverSegments, {\n                value: 0\n              }, 'start');\n              if (!!_this8.options.onHoverInOthers) {\n                if (typeof _this8.options.onHoverInOthers.opacity === 'number') {\n                  _this8._tlHover.to(plane.uniforms.opacity, {\n                    value: _this8.options.onHoverInOthers.opacity,\n                    duration: 0.6,\n                    ease: 'power3.out'\n                  }, 'start');\n                }\n                if (typeof _this8.options.onHoverInOthers.scalePlane === 'number') {\n                  var _animation2 = {\n                    scaleX: plane.scale.x,\n                    scaleY: plane.scale.y\n                  };\n                  _this8._tlHover.to(_animation2, {\n                    scaleX: _this8.options.onHoverInOthers.scalePlane,\n                    scaleY: _this8.options.onHoverInOthers.scalePlane,\n                    duration: 0.6,\n                    ease: 'power3.out',\n                    onUpdate: function onUpdate() {\n                      plane.scale.x = _animation2.scaleX;\n                      plane.scale.y = _animation2.scaleX;\n                    }\n                  }, 'start');\n                }\n                if (typeof _this8.options.onHoverInOthers.scaleTexture === 'number' && plane.textures[0]) {\n                  var _animation3 = {\n                    scaleX: plane.textures[0].scale.x,\n                    scaleY: plane.textures[0].scale.y\n                  };\n                  _this8._tlHover.to(_animation3, {\n                    scaleX: _this8.options.onHoverInOthers.scaleTexture,\n                    scaleY: _this8.options.onHoverInOthers.scaleTexture,\n                    duration: 0.6,\n                    ease: 'power3.out',\n                    onUpdate: function onUpdate() {\n                      if (plane.textures.length) {\n                        plane.textures.forEach(function (texture) {\n                          texture.scale.x = _animation3.scaleX;\n                          texture.scale.y = _animation3.scaleY;\n                        });\n                      }\n                    }\n                  }, 'start');\n                }\n              }\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_onMouseLeave\",\n    value: function _onMouseLeave(event) {\n      var _this9 = this;\n      var target = app.utilities.getLinkTarget(event);\n      if (target) {\n        this._tlHover.clear();\n        for (var _i3 = 0, _Object$entries3 = Object.entries(this.planes); _i3 < _Object$entries3.length; _i3++) {\n          var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n            indexLane = _Object$entries3$_i[0],\n            lane = _Object$entries3$_i[1];\n          lane.forEach(function (plane) {\n            _this9._tlHover.to(plane.uniforms.hovered, {\n              value: _this9.options.onHoverOut.hovered\n            }, 'start').to(plane.uniforms.hoverSpeed, {\n              value: _this9.options.onHoverOut.speed\n            }, 'start').to(plane.uniforms.hoverAmplitude, {\n              value: _this9.options.onHoverOut.amplitude\n            }, 'start').to(plane.uniforms.hoverSegments, {\n              value: _this9.options.onHoverOut.segments\n            }, 'start');\n            if (!!_this9.options.onHoverOut) {\n              if (typeof _this9.options.onHoverOut.opacity === 'number') {\n                _this9._tlHover.to(plane.uniforms.opacity, {\n                  value: _this9.options.onHoverOut.opacity,\n                  duration: 0.6,\n                  ease: 'power3.out'\n                }, 'start');\n              }\n              if (typeof _this9.options.onHoverOut.scalePlane === 'number') {\n                var animation = {\n                  scaleX: plane.scale.x,\n                  scaleY: plane.scale.y\n                };\n                _this9._tlHover.to(animation, {\n                  scaleX: _this9.options.onHoverOut.scalePlane,\n                  scaleY: _this9.options.onHoverOut.scalePlane,\n                  duration: 0.6,\n                  ease: 'power3.out',\n                  onUpdate: function onUpdate() {\n                    plane.scale.x = animation.scaleX;\n                    plane.scale.y = animation.scaleX;\n                  }\n                }, 'start');\n              }\n              if (typeof _this9.options.onHoverOut.scaleTexture === 'number' && plane.textures[0] && 'scale' in plane.textures[0]) {\n                var _animation4 = {\n                  scaleX: plane.textures[0].scale.x,\n                  scaleY: plane.textures[0].scale.y\n                };\n                _this9._tlHover.to(_animation4, {\n                  scaleX: _this9.options.onHoverOut.scaleTexture,\n                  scaleY: _this9.options.onHoverOut.scaleTexture,\n                  duration: 0.6,\n                  ease: 'power3.out',\n                  onUpdate: function onUpdate() {\n                    if (plane.textures.length) {\n                      plane.textures.forEach(function (texture) {\n                        texture.scale.x = _animation4.scaleX;\n                        texture.scale.y = _animation4.scaleY;\n                      });\n                    }\n                  }\n                }, 'start');\n              }\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_isCurrentPlane\",\n    value: function _isCurrentPlane(plane, target) {\n      if (plane.userData) {\n        if (plane.userData.transitionPlane && plane.userData.transitionPlane === true) {\n          return true;\n        }\n        if (plane.userData.postId && typeof this.options.itemIdAttribute === 'string') {\n          var postIDElement = target.closest(\"[\".concat(this.options.itemIdAttribute, \"]\"));\n          return postIDElement && plane.userData.postId === postIDElement.getAttribute(\"\".concat(this.options.itemIdAttribute));\n        }\n      }\n      return target.contains(plane.htmlElement);\n    }\n  }, {\n    key: \"_getParsedObjectPosition\",\n    value: function _getParsedObjectPosition(element) {\n      var result = [50, 50]; // default\n\n      if (element instanceof HTMLElement) {\n        var objectPosition = window.getComputedStyle(element).objectPosition;\n        if (objectPosition) {\n          return objectPosition.split(' ').map(function (val) {\n            return parseFloat(val);\n          });\n        }\n      }\n      return result;\n    }\n  }, {\n    key: \"_hasPlaneTargetMedia\",\n    value: function _hasPlaneTargetMedia(plane, targetMedia) {\n      return plane.images.filter(function (img) {\n        return img.currentSrc === targetMedia.currentSrc;\n      }).length || plane.videos.filter(function (video) {\n        return video.currentSrc === targetMedia.currentSrc;\n      }).length;\n    }\n  }, {\n    key: \"_loadTransitionPlane\",\n    value: function _loadTransitionPlane(_ref2) {\n      var _this10 = this;\n      var element = _ref2.element,\n        target = _ref2.target,\n        _ref2$targetMedia = _ref2.targetMedia,\n        targetMedia = _ref2$targetMedia === void 0 ? null : _ref2$targetMedia,\n        callback = _ref2.callback;\n      var result = {\n        plane: null,\n        indexLane: undefined,\n        indexPlane: undefined,\n        indexTexture: 0\n      };\n      var currentPlaneTarget = {\n        plane: null,\n        indexLane: undefined,\n        indexPlane: undefined,\n        indexTexture: 0\n      };\n      var _loop = function _loop() {\n        var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i4], 2),\n          indexLane = _Object$entries4$_i[0],\n          lane = _Object$entries4$_i[1];\n        lane.forEach(function (plane, indexPlane) {\n          if (element.contains(plane.htmlElement)) {\n            var data = {\n              plane: plane,\n              indexLane: parseInt(indexLane.toString(), 10),\n              indexPlane: indexPlane\n            };\n            currentPlaneTarget = data;\n            if (_this10._hasPlaneTargetMedia(plane, targetMedia)) {\n              result = data;\n            }\n          }\n        });\n      };\n      for (var _i4 = 0, _Object$entries4 = Object.entries(this.planes); _i4 < _Object$entries4.length; _i4++) {\n        _loop();\n      }\n      if (!result.plane) {\n        var _loop2 = function _loop2() {\n          var _Object$entries5$_i = _slicedToArray(_Object$entries5[_i5], 2),\n            indexLane = _Object$entries5$_i[0],\n            lane = _Object$entries5$_i[1];\n          lane.forEach(function (plane, indexPlane) {\n            if (!result.plane) {\n              var data = {\n                plane: plane,\n                indexLane: parseInt(indexLane.toString(), 10),\n                indexPlane: indexPlane\n              };\n              if (!currentPlaneTarget.plane && _this10._isCurrentPlane(plane, element)) {\n                currentPlaneTarget = data;\n              }\n              if (_this10._hasPlaneTargetMedia(plane, targetMedia)) {\n                result = data;\n              }\n            }\n          });\n        };\n        for (var _i5 = 0, _Object$entries5 = Object.entries(this.planes); _i5 < _Object$entries5.length; _i5++) {\n          _loop2();\n        }\n        ;\n      }\n      if (result.plane) {\n        Object.assign(result.plane.userData, {\n          transitionPlane: true\n        });\n        if (typeof callback === 'function') {\n          callback(result);\n        }\n      } else {\n        currentPlaneTarget.plane.loadImage(targetMedia, {}, function (t) {\n          Object.assign(currentPlaneTarget.plane.userData, {\n            transitionPlane: true\n          });\n          if (typeof callback === 'function') {\n            callback(currentPlaneTarget);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_getTextureByMediaSrc\",\n    value: function _getTextureByMediaSrc(_ref3) {\n      var plane = _ref3.plane,\n        targetMedia = _ref3.targetMedia;\n      var activeTextureIndex = 0;\n      plane.textures.forEach(function (texture, index) {\n        if (texture.source.src === targetMedia.src) {\n          activeTextureIndex = index;\n        }\n      });\n      return activeTextureIndex;\n    }\n  }, {\n    key: \"_translatePlaneTo\",\n    value: function _translatePlaneTo(_ref4) {\n      var _this11 = this;\n      var _ref4$element = _ref4.element,\n        element = _ref4$element === void 0 ? null : _ref4$element,\n        _ref4$target = _ref4.target,\n        target = _ref4$target === void 0 ? null : _ref4$target,\n        _ref4$targetMedia = _ref4.targetMedia,\n        targetMedia = _ref4$targetMedia === void 0 ? null : _ref4$targetMedia,\n        callback = _ref4.callback,\n        _ref4$offsetLeft = _ref4.offsetLeft,\n        offsetLeft = _ref4$offsetLeft === void 0 ? 0 : _ref4$offsetLeft,\n        _ref4$offsetTop = _ref4.offsetTop,\n        offsetTop = _ref4$offsetTop === void 0 ? 0 : _ref4$offsetTop,\n        _ref4$duration = _ref4.duration,\n        duration = _ref4$duration === void 0 ? 2.0 : _ref4$duration,\n        _ref4$ease = _ref4.ease,\n        ease = _ref4$ease === void 0 ? 'expo.inOut' : _ref4$ease;\n      var pixelRatio = this.instance.pixelRatio;\n      var tl = gsap.timeline({\n        onComplete: function onComplete() {\n          if (typeof callback === 'function') {\n            callback();\n          }\n        }\n      });\n      var transitionPlane;\n      this._tlHover.clear();\n      this._detachEvents();\n\n      // tl.to(this.instance.container, {\n      // \tx: 0,\n      // \ty: 0,\n      // \toverwrite: true,\n      // \tduration,\n      // \tease,\n      // }, 'start');\n\n      for (var _i6 = 0, _Object$entries6 = Object.entries(this.planes); _i6 < _Object$entries6.length; _i6++) {\n        var _Object$entries6$_i = _slicedToArray(_Object$entries6[_i6], 2),\n          indexLane = _Object$entries6$_i[0],\n          lane = _Object$entries6$_i[1];\n        lane.forEach(function (plane, indexPlane) {\n          if (plane.userData && plane.userData.transitionPlane) {\n            transitionPlane = plane;\n          }\n        });\n      }\n      var _loop3 = function _loop3() {\n        var _Object$entries7$_i = _slicedToArray(_Object$entries7[_i7], 2),\n          indexLane = _Object$entries7$_i[0],\n          lane = _Object$entries7$_i[1];\n        lane.forEach(function (plane, indexPlane) {\n          var\n          // isCurrentPlane = this._isCurrentPlane(plane, element),\n          animation = {\n            hovered: plane.uniforms.hovered.value,\n            hoverAmplitude: plane.uniforms.hoverAmplitude.value,\n            hoverSegments: plane.uniforms.hoverSegments.value\n          };\n          _this11._tlHover.to(animation, {\n            hovered: 0,\n            hoverAmplitude: 0,\n            hoverSegments: 0,\n            onUpdate: function onUpdate() {\n              plane.uniforms.hovered.value = animation.hovered;\n              plane.uniforms.hoverAmplitude.value = animation.hoverAmplitude;\n              plane.uniforms.hoverSegments.value = animation.hoverSegments;\n            }\n          }, 'start');\n\n          // Current plane\n          if (plane === transitionPlane && _this11._hasPlaneTargetMedia(plane, targetMedia)) {\n            if (offsetTop > 0) {\n              app.utilities.scrollTo({\n                target: 0,\n                duration: 0\n              });\n              ScrollTrigger.refresh(false);\n            }\n            var activeTextureIndex = _this11._getTextureByMediaSrc({\n              plane: plane,\n              targetMedia: targetMedia\n            });\n\n            // Put the current plane in front\n            plane.setRenderOrder(1);\n\n            // Swap texture\n            if (targetMedia.src !== plane.textures[0].source.src) {\n              tl.set({}, {\n                delay: duration / 2,\n                onComplete: function onComplete() {\n                  if (activeTextureIndex > 0) {\n                    plane.textures.forEach(function (texture, index) {\n                      if (activeTextureIndex === index) {\n                        plane.textures[0].setSource(texture.source);\n                      }\n                    });\n                  }\n                }\n              }, 'start');\n            }\n            var planeBoundingRect = plane.getBoundingRect();\n\n            // Target\n            var targetRect = target.getBoundingClientRect();\n            if (targetMedia.tagName === 'VIDEO' && plane.videos.length) {\n              plane.videos.forEach(function (videoEl) {\n                targetMedia.currentTime = videoEl.currentTime;\n              });\n            }\n            var textureScale = gsap.getProperty(targetMedia, 'scale'),\n              textureOffsetX = parseFloat(gsap.getProperty(targetMedia, 'x', '%')),\n              textureOffsetY = parseFloat(gsap.getProperty(targetMedia, 'y', '%'));\n\n            // Starting values\n            var _animation5 = {\n              opacity: plane.uniforms.opacity.value,\n              scaleX: plane.scale.x,\n              scaleY: plane.scale.y,\n              translateX: plane.relativeTranslation.x,\n              translateY: plane.relativeTranslation.y,\n              textureOffsetX: 0,\n              textureOffsetY: 0,\n              textureScale: 1,\n              transition: 0,\n              velocityX: plane.uniforms.velocityX.value,\n              velocityY: plane.uniforms.velocityY.value,\n              transformOriginX: plane.transformOrigin.x,\n              transformOriginY: plane.transformOrigin.y,\n              transformOriginZ: plane.transformOrigin.z\n            };\n            tl.to(_animation5, {\n              opacity: 1,\n              transformOriginX: 0.5,\n              transformOriginY: 0.5,\n              transformOriginZ: 0.5,\n              duration: 0.2,\n              onStart: function onStart() {\n                plane.visible = true;\n              },\n              onUpdate: function onUpdate() {\n                // Restore current plane opacity\n                plane.uniforms.opacity.value = _animation5.opacity;\n\n                // Take \"center center\" as plane transform origin\n                plane.transformOrigin.x = _animation5.transformOriginX;\n                plane.transformOrigin.y = _animation5.transformOriginY;\n                plane.transformOrigin.z = _animation5.transformOriginZ;\n              }\n            }, 'start');\n            var _getImageSize = getImageSize({\n                container: {\n                  width: targetRect.width,\n                  height: targetRect.height\n                },\n                image: {\n                  width: plane.textures[activeTextureIndex].source.width,\n                  height: plane.textures[activeTextureIndex].source.height\n                },\n                size: 'cover'\n              }),\n              width = _getImageSize.width,\n              height = _getImageSize.height;\n            var aspectRatioContainer = targetRect.height / targetRect.width;\n            var aspectRatioCover = height / width;\n            var adjustmentMultiplierX = aspectRatioContainer > aspectRatioCover ? aspectRatioContainer / aspectRatioCover : 1;\n            var adjustmentMultiplierY = aspectRatioContainer > aspectRatioCover ? 1 : aspectRatioCover / aspectRatioContainer;\n            tl.to(_animation5, {\n              scaleX: targetRect.width / planeBoundingRect.width * pixelRatio,\n              scaleY: targetRect.height / planeBoundingRect.height * pixelRatio,\n              translateX: -1 * (planeBoundingRect.left + planeBoundingRect.width / 2) / pixelRatio + (targetRect.left + targetRect.width / 2),\n              translateY: -1 * (planeBoundingRect.top + planeBoundingRect.height / 2) / pixelRatio + (targetRect.top + targetRect.height / 2),\n              textureOffsetX: -textureOffsetX / textureScale / 100 / adjustmentMultiplierX,\n              textureOffsetY: textureOffsetY / textureScale / 100 / adjustmentMultiplierY,\n              textureScale: textureScale,\n              transition: 1,\n              velocityX: 0,\n              velocityY: 0,\n              ease: ease,\n              duration: duration,\n              onStart: function onStart() {\n                // Force render\n                _this11.instance.needRender();\n              },\n              onUpdate: function onUpdate() {\n                // Plane scale\n                plane.scale.x = _animation5.scaleX;\n                plane.scale.y = _animation5.scaleY;\n\n                // Plane translation\n                plane.relativeTranslation.x = _animation5.translateX;\n                plane.relativeTranslation.y = _animation5.translateY;\n\n                // Textures scale\n                if (plane.textures.length) {\n                  plane.textures.forEach(function (texture) {\n                    texture.offset.x = _animation5.textureOffsetX;\n                    texture.offset.y = _animation5.textureOffsetY;\n                    texture.scale.x = _animation5.textureScale;\n                    texture.scale.y = _animation5.textureScale;\n                  });\n                }\n\n                // Transition animation\n                plane.uniforms.transition.value = _animation5.transition;\n\n                // Smoothly reset the current velocity\n                plane.uniforms.velocityX.value = _animation5.velocityX;\n                plane.uniforms.velocityY.value = _animation5.velocityY;\n\n                // Force render\n                _this11.instance.needRender();\n              },\n              onComplete: function onComplete() {\n                // Force render\n                _this11.instance.needRender();\n              }\n            }, 'start');\n          } else {\n            // Other planes\n            plane.setRenderOrder(0);\n            var _animation6 = {\n              opacity: plane.uniforms.opacity.value\n            };\n\n            // Hide other planes\n            tl.to(_animation6, {\n              opacity: 0,\n              duration: 0.3,\n              onUpdate: function onUpdate() {\n                plane.uniforms.opacity.value = _animation6.opacity;\n              },\n              onComplete: function onComplete() {\n                plane.visible = false;\n              }\n            }, 'start');\n          }\n        });\n        function getImageSize(options) {\n          var ratios = {\n            cover: function cover(wRatio, hRatio) {\n              return Math.max(wRatio, hRatio);\n            },\n            contain: function contain(wRatio, hRatio) {\n              return Math.min(wRatio, hRatio);\n            },\n            // original size\n            \"auto\": function auto() {\n              return 1;\n            },\n            // stretch\n            \"100% 100%\": function _(wRatio, hRatio) {\n              return {\n                width: wRatio,\n                height: hRatio\n              };\n            }\n          };\n          if (!ratios[options.size]) {\n            throw new Error(\"\".concat(options.size, \" not found in ratios\"));\n          }\n          var r = ratios[options.size](options.container.width / options.image.width, options.container.height / options.image.height);\n          return {\n            width: options.image.width * (r.width || r),\n            height: options.image.height * (r.height || r)\n          };\n        }\n      };\n      for (var _i7 = 0, _Object$entries7 = Object.entries(this.planes); _i7 < _Object$entries7.length; _i7++) {\n        _loop3();\n      }\n    }\n  }]);\n}();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/CurtainsBase.js\n");

/***/ }),

/***/ "./src/js/components/FixedHeader.js":
/*!******************************************!*\
  !*** ./src/js/components/FixedHeader.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FixedHeader)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar FixedHeader = /*#__PURE__*/function (_BaseComponent) {\n  function FixedHeader(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, FixedHeader);\n    _this = _callSuper(this, FixedHeader, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        matchMedia: '(min-width: 576px)'\n      },\n      // Component inner elements\n      innerElements: {\n        fixedWrapper: '.js-fixed-header__fixed-wrapper'\n      }\n    }]);\n    _this.setup();\n    return _this;\n  }\n  _inherits(FixedHeader, _BaseComponent);\n  return _createClass(FixedHeader, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      var mq = typeof this.options.matchMedia === 'string' ? this.options.matchMedia : 'all';\n      this.mm = gsap.matchMedia();\n      this.mm.add(mq, function () {\n        _this2._createFixedScene();\n      });\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.mm && typeof this.mm.kill === 'function') {\n        this.mm.kill();\n      }\n    }\n  }, {\n    key: \"_createFixedScene\",\n    value: function _createFixedScene() {\n      var fixedWrapper = this.element.querySelector(this.innerSelectors.fixedWrapper);\n      this.fixedScene = ScrollTrigger.create({\n        start: function start() {\n          return \"top center-=\".concat(fixedWrapper.offsetHeight);\n        },\n        end: function end() {\n          return \"bottom bottom\";\n        },\n        pin: fixedWrapper,\n        pinSpacing: false,\n        trigger: this.element,\n        invalidateOnRefresh: true,\n        scrub: true\n      });\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY29tcG9uZW50cy9GaXhlZEhlYWRlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7OztJQUFxQkEsV0FBVywwQkFBQUMsY0FBQTtFQUMvQixTQUFBRCxZQUFBRSxJQUFBLEVBS0c7SUFBQSxJQUFBQyxLQUFBO0lBQUEsSUFKRkMsSUFBSSxHQUFBRixJQUFBLENBQUpFLElBQUk7TUFDSkMsbUJBQW1CLEdBQUFILElBQUEsQ0FBbkJHLG1CQUFtQjtNQUNuQkMsTUFBTSxHQUFBSixJQUFBLENBQU5JLE1BQU07TUFDTkMsT0FBTyxHQUFBTCxJQUFBLENBQVBLLE9BQU87SUFBQUMsZUFBQSxPQUFBUixXQUFBO0lBRVBHLEtBQUEsR0FBQU0sVUFBQSxPQUFBVCxXQUFBLEdBQU07TUFDTEksSUFBSSxFQUFKQSxJQUFJO01BQ0pDLG1CQUFtQixFQUFuQkEsbUJBQW1CO01BQ25CQyxNQUFNLEVBQU5BLE1BQU07TUFDTkMsT0FBTyxFQUFQQSxPQUFPO01BQ1A7TUFDQUcsUUFBUSxFQUFFO1FBQ1RDLFVBQVUsRUFBRTtNQUNiLENBQUM7TUFDRDtNQUNBQyxhQUFhLEVBQUU7UUFDZEMsWUFBWSxFQUFFO01BQ2Y7SUFDRCxDQUFDO0lBRURWLEtBQUEsQ0FBS1csS0FBSyxDQUFDLENBQUM7SUFBQyxPQUFBWCxLQUFBO0VBQ2Q7RUFBQ1ksU0FBQSxDQUFBZixXQUFBLEVBQUFDLGNBQUE7RUFBQSxPQUFBZSxZQUFBLENBQUFoQixXQUFBO0lBQUFpQixHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBQyxLQUFBLEVBQU87TUFBQSxJQUFBQyxNQUFBO01BQ04sSUFBTUMsRUFBRSxHQUFHLE9BQU8sSUFBSSxDQUFDQyxPQUFPLENBQUNYLFVBQVUsS0FBSyxRQUFRLEdBQUcsSUFBSSxDQUFDVyxPQUFPLENBQUNYLFVBQVUsR0FBRyxLQUFLO01BRXhGLElBQUksQ0FBQ1ksRUFBRSxHQUFHQyxJQUFJLENBQUNiLFVBQVUsQ0FBQyxDQUFDO01BQzNCLElBQUksQ0FBQ1ksRUFBRSxDQUFDRSxHQUFHLENBQUNKLEVBQUUsRUFBRSxZQUFNO1FBQ3JCRCxNQUFJLENBQUNNLGlCQUFpQixDQUFDLENBQUM7TUFDekIsQ0FBQyxDQUFDO0lBQ0g7RUFBQztJQUFBVCxHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBUyxRQUFBLEVBQVU7TUFDVCxJQUFJLElBQUksQ0FBQ0osRUFBRSxJQUFJLE9BQU8sSUFBSSxDQUFDQSxFQUFFLENBQUNLLElBQUksS0FBSyxVQUFVLEVBQUU7UUFDbEQsSUFBSSxDQUFDTCxFQUFFLENBQUNLLElBQUksQ0FBQyxDQUFDO01BQ2Y7SUFDRDtFQUFDO0lBQUFYLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFRLGtCQUFBLEVBQW9CO01BQ25CLElBQU1iLFlBQVksR0FBRyxJQUFJLENBQUNOLE9BQU8sQ0FBQ3NCLGFBQWEsQ0FBQyxJQUFJLENBQUNDLGNBQWMsQ0FBQ2pCLFlBQVksQ0FBQztNQUVqRixJQUFJLENBQUNrQixVQUFVLEdBQUdDLGFBQWEsQ0FBQ0MsTUFBTSxDQUFDO1FBQ3RDQyxLQUFLLEVBQUUsU0FBQUEsTUFBQTtVQUFBLHNCQUFBQyxNQUFBLENBQXFCdEIsWUFBWSxDQUFDdUIsWUFBWTtRQUFBLENBQUU7UUFDdkRDLEdBQUcsRUFBRSxTQUFBQSxJQUFBO1VBQUE7UUFBQSxDQUFxQjtRQUMxQkMsR0FBRyxFQUFFekIsWUFBWTtRQUNqQjBCLFVBQVUsRUFBRSxLQUFLO1FBQ2pCQyxPQUFPLEVBQUUsSUFBSSxDQUFDakMsT0FBTztRQUNyQmtDLG1CQUFtQixFQUFFLElBQUk7UUFDekJDLEtBQUssRUFBRTtNQUNSLENBQUMsQ0FBQztJQUNIO0VBQUM7QUFBQSxFQXBEdUNDLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aHJlZS1zaGFkZXItZW52MDEvLi9zcmMvanMvY29tcG9uZW50cy9GaXhlZEhlYWRlci5qcz8yMzA1Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpeGVkSGVhZGVyIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHtcblx0XHRuYW1lLFxuXHRcdGxvYWRJbm5lckNvbXBvbmVudHMsXG5cdFx0cGFyZW50LFxuXHRcdGVsZW1lbnRcblx0fSkge1xuXHRcdHN1cGVyKHtcblx0XHRcdG5hbWUsXG5cdFx0XHRsb2FkSW5uZXJDb21wb25lbnRzLFxuXHRcdFx0cGFyZW50LFxuXHRcdFx0ZWxlbWVudCxcblx0XHRcdC8vIENvbXBvbmVudCBkZWZhdWx0IG9wdGlvbnNcblx0XHRcdGRlZmF1bHRzOiB7XG5cdFx0XHRcdG1hdGNoTWVkaWE6ICcobWluLXdpZHRoOiA1NzZweCknXG5cdFx0XHR9LFxuXHRcdFx0Ly8gQ29tcG9uZW50IGlubmVyIGVsZW1lbnRzXG5cdFx0XHRpbm5lckVsZW1lbnRzOiB7XG5cdFx0XHRcdGZpeGVkV3JhcHBlcjogJy5qcy1maXhlZC1oZWFkZXJfX2ZpeGVkLXdyYXBwZXInXG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHR0aGlzLnNldHVwKCk7XG5cdH1cblxuXHRpbml0KCkge1xuXHRcdGNvbnN0IG1xID0gdHlwZW9mIHRoaXMub3B0aW9ucy5tYXRjaE1lZGlhID09PSAnc3RyaW5nJyA/IHRoaXMub3B0aW9ucy5tYXRjaE1lZGlhIDogJ2FsbCc7XG5cblx0XHR0aGlzLm1tID0gZ3NhcC5tYXRjaE1lZGlhKCk7XG5cdFx0dGhpcy5tbS5hZGQobXEsICgpID0+IHtcblx0XHRcdHRoaXMuX2NyZWF0ZUZpeGVkU2NlbmUoKTtcblx0XHR9KTtcblx0fVxuXG5cdGRlc3Ryb3koKSB7XG5cdFx0aWYgKHRoaXMubW0gJiYgdHlwZW9mIHRoaXMubW0ua2lsbCA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0dGhpcy5tbS5raWxsKCk7XG5cdFx0fVxuXHR9XG5cblx0X2NyZWF0ZUZpeGVkU2NlbmUoKSB7XG5cdFx0Y29uc3QgZml4ZWRXcmFwcGVyID0gdGhpcy5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5pbm5lclNlbGVjdG9ycy5maXhlZFdyYXBwZXIpO1xuXG5cdFx0dGhpcy5maXhlZFNjZW5lID0gU2Nyb2xsVHJpZ2dlci5jcmVhdGUoe1xuXHRcdFx0c3RhcnQ6ICgpID0+IGB0b3AgY2VudGVyLT0ke2ZpeGVkV3JhcHBlci5vZmZzZXRIZWlnaHR9YCxcblx0XHRcdGVuZDogKCkgPT4gYGJvdHRvbSBib3R0b21gLFxuXHRcdFx0cGluOiBmaXhlZFdyYXBwZXIsXG5cdFx0XHRwaW5TcGFjaW5nOiBmYWxzZSxcblx0XHRcdHRyaWdnZXI6IHRoaXMuZWxlbWVudCxcblx0XHRcdGludmFsaWRhdGVPblJlZnJlc2g6IHRydWUsXG5cdFx0XHRzY3J1YjogdHJ1ZVxuXHRcdH0pO1xuXHR9XG59XG4iXSwibmFtZXMiOlsiRml4ZWRIZWFkZXIiLCJfQmFzZUNvbXBvbmVudCIsIl9yZWYiLCJfdGhpcyIsIm5hbWUiLCJsb2FkSW5uZXJDb21wb25lbnRzIiwicGFyZW50IiwiZWxlbWVudCIsIl9jbGFzc0NhbGxDaGVjayIsIl9jYWxsU3VwZXIiLCJkZWZhdWx0cyIsIm1hdGNoTWVkaWEiLCJpbm5lckVsZW1lbnRzIiwiZml4ZWRXcmFwcGVyIiwic2V0dXAiLCJfaW5oZXJpdHMiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsImluaXQiLCJfdGhpczIiLCJtcSIsIm9wdGlvbnMiLCJtbSIsImdzYXAiLCJhZGQiLCJfY3JlYXRlRml4ZWRTY2VuZSIsImRlc3Ryb3kiLCJraWxsIiwicXVlcnlTZWxlY3RvciIsImlubmVyU2VsZWN0b3JzIiwiZml4ZWRTY2VuZSIsIlNjcm9sbFRyaWdnZXIiLCJjcmVhdGUiLCJzdGFydCIsImNvbmNhdCIsIm9mZnNldEhlaWdodCIsImVuZCIsInBpbiIsInBpblNwYWNpbmciLCJ0cmlnZ2VyIiwiaW52YWxpZGF0ZU9uUmVmcmVzaCIsInNjcnViIiwiQmFzZUNvbXBvbmVudCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/components/FixedHeader.js\n");

/***/ }),

/***/ "./src/js/components/FixedWall.js":
/*!****************************************!*\
  !*** ./src/js/components/FixedWall.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FixedWall)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar FixedWall = /*#__PURE__*/function (_BaseComponent) {\n  function FixedWall(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, FixedWall);\n    _this = _callSuper(this, FixedWall, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        direction: 'vertical',\n        duration: '400%',\n        scrub: 1,\n        matchMedia: '(min-width: 992px)',\n        toggleHeaderVisibility: true\n      },\n      // Component inner elements\n      innerElements: {\n        fixedWrapper: '.js-fixed-wall__fixed-wrapper',\n        list: '.js-fixed-wall__list',\n        lanes: '.js-fixed-wall__list-lane',\n        items: '.js-fixed-wall__list-item',\n        circle: '.js-fixed-wall__button circle'\n      }\n    }]);\n    _this._handlers = {\n      progressScene: _this._onProgressScene.bind(_this),\n      toggleScene: _this._onToggleScene.bind(_this),\n      transitionStart: _this._onTransitionStart.bind(_this)\n    };\n    _this.setup();\n    return _this;\n  }\n  _inherits(FixedWall, _BaseComponent);\n  return _createClass(FixedWall, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      this.updateRef('headerRef', 'Header');\n      if (this.elements.list[0] && this.elements.lanes.length) {\n        this._createInfiniteList();\n        this.infiniteList.pluginsReady.then(function () {\n          var mq = typeof _this2.options.matchMedia === 'string' ? _this2.options.matchMedia : 'all';\n          _this2.mm = gsap.matchMedia();\n          _this2.mm.add(mq, function () {\n            _this2._createFixedScene();\n            _this2._toggleFixedWall(true);\n            return function () {\n              _this2._toggleFixedWall(false);\n              if (_this2.elements.circle[0]) {\n                gsap.set(_this2.elements.circle[0], {\n                  clearProps: 'all'\n                });\n              }\n            };\n          });\n          _this2.infiniteList.update();\n          _this2._onProgressScene({\n            progress: 0.0001\n          });\n          _this2._attachEvents();\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.infiniteList) {\n        this.infiniteList.destroy();\n      }\n      if (this.mm && typeof this.mm.kill === 'function') {\n        this.mm.kill();\n      }\n      this._detachEvents();\n    }\n  }, {\n    key: \"_toggleFixedWall\",\n    value: function _toggleFixedWall() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (enabled) {\n        this.element.classList.add('has-fixed-wall');\n        this.element.classList.remove('no-fixed-wall');\n      } else {\n        this.element.classList.add('no-fixed-wall');\n        this.element.classList.remove('has-fixed-wall');\n      }\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      document.addEventListener('arts/barba/transition/start', this._handlers.transitionStart);\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      document.removeEventListener('arts/barba/transition/start', this._handlers.transitionStart);\n    }\n  }, {\n    key: \"_createInfiniteList\",\n    value: function _createInfiniteList() {\n      this.infiniteList = new ArtsInfiniteList(this.elements.list[0], {\n        direction: this.options.direction,\n        listElementsSelector: this.innerSelectors.items,\n        multiLane: {\n          laneSelector: this.innerSelectors.lanes,\n          laneOptionsAttribute: 'data-arts-infinite-list-options'\n        },\n        matchMedia: this.options.matchMedia,\n        autoClone: false,\n        loop: false,\n        plugins: {\n          scroll: false\n        }\n      });\n    }\n  }, {\n    key: \"_createFixedScene\",\n    value: function _createFixedScene() {\n      var _this3 = this;\n      var config = {\n        start: function start() {\n          return \"top top\";\n        },\n        end: function end() {\n          return \"bottom+=\".concat(_this3.options.duration, \" bottom\");\n        },\n        onUpdate: this._handlers.progressScene,\n        pin: this.elements.fixedWrapper,\n        pinSpacing: true,\n        trigger: this.element,\n        invalidateOnRefresh: true,\n        scrub: this.options.scrub\n      };\n      if (!!this.options.toggleHeaderVisibility && this.headerRef) {\n        config.onToggle = this._handlers.toggleScene;\n      }\n      this.fixedScene = ScrollTrigger.create(config);\n    }\n  }, {\n    key: \"_onProgressScene\",\n    value: function _onProgressScene() {\n      var _this4 = this;\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          progress: 0\n        },\n        progress = _ref2.progress;\n      this.elements.lanes.forEach(function (el, indexLane) {\n        _this4.infiniteList.controller.setProgress({\n          progress: (indexLane & 1) === 0 ? progress : 1 - progress,\n          indexLane: indexLane,\n          animate: false\n        });\n      });\n      if (this.elements.circle[0]) {\n        gsap.set(this.elements.circle[0], {\n          drawSVG: \"0% \".concat(progress * 100, \"%\"),\n          rotate: 180 * progress,\n          transformOrigin: 'center center'\n        });\n      }\n    }\n  }, {\n    key: \"_onToggleScene\",\n    value: function _onToggleScene(_ref3) {\n      var isActive = _ref3.isActive;\n      this.headerRef.toggleHidden(isActive);\n    }\n  }, {\n    key: \"_onTransitionStart\",\n    value: function _onTransitionStart() {\n      if (this.fixedScene) {\n        this.fixedScene.kill(false, false);\n        this.fixedScene = null;\n      }\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/FixedWall.js\n");

/***/ }),

/***/ "./src/js/components/FormAJAX.js":
/*!***************************************!*\
  !*** ./src/js/components/FormAJAX.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ FormAJAX)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar FormAJAX = /*#__PURE__*/function (_BaseComponent) {\n  function FormAJAX(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, FormAJAX);\n    _this = _callSuper(this, FormAJAX, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        pristine: {\n          classTo: 'input-float',\n          // class of the parent element where the error/success class is added\n          errorClass: 'input-float_invalid',\n          successClass: 'input-float_valid',\n          errorTextParent: 'input-float',\n          // class of the parent element where error text element is appended\n          errorTextTag: 'span',\n          // type of element to create for the error text\n          errorTextClass: 'input-float__error' // class of the error text element\n        }\n      },\n      // Component inner elements\n      innerElements: {}\n    }]);\n    _this.valid = true;\n    _this._handlers = {\n      submit: _this._onSubmit.bind(_this),\n      dismiss: _this._onDismiss.bind(_this)\n    };\n    _this.messageSuccess = _this.element.getAttribute('data-message-success');\n    _this.messageError = _this.element.getAttribute('data-message-error');\n    _this.method = _this.element.getAttribute('method');\n    _this.action = _this.element.getAttribute('action');\n    _this.setup();\n    return _this;\n  }\n  _inherits(FormAJAX, _BaseComponent);\n  return _createClass(FormAJAX, [{\n    key: \"init\",\n    value: function init() {\n      if (!!this.options.pristine) {\n        this._createPristine();\n      }\n      this._attachEvents();\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      this.element.addEventListener('submit', this._handlers.submit);\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      this.element.removeEventListener('submit', this._handlers.submit);\n    }\n  }, {\n    key: \"_onSubmit\",\n    value: function _onSubmit(event) {\n      event.preventDefault();\n      if (this.pristine) {\n        // Check if the form is valid\n        this.valid = this.pristine.validate();\n      }\n      if (this.valid) {\n        this._fetch();\n      }\n    }\n  }, {\n    key: \"_createPristine\",\n    value: function _createPristine() {\n      this.pristine = new Pristine(this.element, this.options.pristine);\n    }\n  }, {\n    key: \"_fetch\",\n    value: function _fetch() {\n      var _this2 = this;\n      fetch(this.action, {\n        method: this.method,\n        body: new FormData(this.element)\n      }).then(function (res) {\n        if (res.status >= 200 && res.status < 300) {\n          _this2._onFetchSuccess();\n        } else {\n          _this2._onFetchError();\n        }\n      })[\"catch\"](function () {\n        _this2._onFetchError();\n      });\n    }\n  }, {\n    key: \"_onFetchSuccess\",\n    value: function _onFetchSuccess() {\n      this._createModal({\n        template: this._getModalTemplate({\n          icon: 'icon-success.svg',\n          message: this.messageSuccess\n        }),\n        onDismiss: this._handlers.dismiss\n      });\n    }\n  }, {\n    key: \"_onFetchError\",\n    value: function _onFetchError() {\n      this._createModal({\n        template: this._getModalTemplate({\n          icon: 'icon-error.svg',\n          message: this.messageError\n        })\n      });\n    }\n  }, {\n    key: \"_onDismiss\",\n    value: function _onDismiss() {\n      this.element.reset();\n    }\n  }, {\n    key: \"_getModalTemplate\",\n    value: function _getModalTemplate(_ref2) {\n      var icon = _ref2.icon,\n        message = _ref2.message;\n      return \"\\n\\t\\t\\t<div class=\\\"modal-dialog modal-dialog-centered\\\">\\n\\t\\t\\t\\t<div class=\\\"modal-content radius-img\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"modal__close p-3\\\" data-bs-dismiss=\\\"modal\\\" data-arts-cursor-follower-target=\\\"{scale: 'current', magnetic: 0.33}\\\">\\n\\t\\t\\t\\t\\t\\t<img src=\\\"img/modal/icon-close.svg\\\" alt=\\\"\\\">\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<header class=\\\"text-center my-4\\\">\\n\\t\\t\\t\\t\\t\\t<img class=\\\"d-inline-block mb-4\\\" src=\\\"img/modal/\".concat(icon, \"\\\" width=\\\"80px\\\" height=\\\"80px\\\" alt=\\\"\\\"/>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"modal__message h5\\\">\").concat(message, \"</div>\\n\\t\\t\\t\\t\\t</header>\\n\\t\\t\\t\\t\\t<div class=\\\">modal-content__wrapper-button\\\">\\n\\t\\t\\t\\t\\t\\t<button type=\\\"button\\\" class=\\\"button button_solid button_fullwidth ui-element cursor-highlight\\\" data-bs-dismiss=\\\"modal\\\">\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"button__label button__label-normal\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"button__title\\\">OK</span>\\n\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t\\t<span class=\\\"button__label button__label-hover\\\">\\n\\t\\t\\t\\t\\t\\t\\t\\t<span class=\\\"button__title\\\">OK</span>\\n\\t\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</div>\\n    \").trim();\n    }\n  }, {\n    key: \"_createModal\",\n    value: function _createModal(_ref3) {\n      var template = _ref3.template,\n        onDismiss = _ref3.onDismiss;\n      var modalElement = document.createElement('div');\n      modalElement.id = 'modalContactForm';\n      modalElement.className = 'modal';\n      modalElement.innerHTML += template;\n      document.body.appendChild(modalElement);\n      var modal = new bootstrap.Modal(modalElement);\n      modalElement.addEventListener('hidden.bs.modal', function () {\n        if (typeof onDismiss === 'function') {\n          onDismiss();\n        }\n        modal.dispose();\n        modalElement.remove();\n        app.utilities.scrollLock(false);\n      });\n      modalElement.addEventListener('shown.bs.modal', function () {\n        app.utilities.scrollLock(true);\n      });\n      modal.show();\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0FBQyxLQUFLLENBQUM7TUFFbERGLFlBQVksQ0FBQ0csRUFBRSxHQUFHLGtCQUFrQjtNQUNwQ0gsWUFBWSxDQUFDSSxTQUFTLEdBQUcsT0FBTztNQUNoQ0osWUFBWSxDQUFDSyxTQUFTLElBQUlmLFFBQVE7TUFFbENXLFFBQVEsQ0FBQ25CLElBQUksQ0FBQ3dCLFdBQVcsQ0FBQ04sWUFBWSxDQUFDO01BRXZDLElBQU1PLEtBQUssR0FBRyxJQUFJQyxTQUFTLENBQUNDLEtBQUssQ0FBQ1QsWUFBWSxDQUFDO01BRS9DQSxZQUFZLENBQUM1QixnQkFBZ0IsQ0FBQyxpQkFBaUIsRUFBRSxZQUFNO1FBQ3RELElBQUksT0FBT3NCLFNBQVMsS0FBSyxVQUFVLEVBQUU7VUFDcENBLFNBQVMsQ0FBQyxDQUFDO1FBQ1o7UUFFQWEsS0FBSyxDQUFDRyxPQUFPLENBQUMsQ0FBQztRQUNmVixZQUFZLENBQUNXLE1BQU0sQ0FBQyxDQUFDO1FBRXJCQyxHQUFHLENBQUNDLFNBQVMsQ0FBQ0MsVUFBVSxDQUFDLEtBQUssQ0FBQztNQUNoQyxDQUFDLENBQUM7TUFFRmQsWUFBWSxDQUFDNUIsZ0JBQWdCLENBQUMsZ0JBQWdCLEVBQUUsWUFBTTtRQUNyRHdDLEdBQUcsQ0FBQ0MsU0FBUyxDQUFDQyxVQUFVLENBQUMsSUFBSSxDQUFDO01BQy9CLENBQUMsQ0FBQztNQUVGUCxLQUFLLENBQUNRLElBQUksQ0FBQyxDQUFDO0lBQ2I7RUFBQztBQUFBLEVBN0tvQ0MsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL3RocmVlLXNoYWRlci1lbnYwMS8uL3NyYy9qcy9jb21wb25lbnRzL0Zvcm1BSkFYLmpzPzIwNWEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybUFKQVggZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3Ioe1xuXHRcdG5hbWUsXG5cdFx0bG9hZElubmVyQ29tcG9uZW50cyxcblx0XHRwYXJlbnQsXG5cdFx0ZWxlbWVudCxcblx0fSkge1xuXHRcdHN1cGVyKHtcblx0XHRcdG5hbWUsXG5cdFx0XHRsb2FkSW5uZXJDb21wb25lbnRzLFxuXHRcdFx0cGFyZW50LFxuXHRcdFx0ZWxlbWVudCxcblx0XHRcdC8vIENvbXBvbmVudCBkZWZhdWx0IG9wdGlvbnNcblx0XHRcdGRlZmF1bHRzOiB7XG5cdFx0XHRcdHByaXN0aW5lOiB7XG5cdFx0XHRcdFx0Y2xhc3NUbzogJ2lucHV0LWZsb2F0JywgLy8gY2xhc3Mgb2YgdGhlIHBhcmVudCBlbGVtZW50IHdoZXJlIHRoZSBlcnJvci9zdWNjZXNzIGNsYXNzIGlzIGFkZGVkXG5cdFx0XHRcdFx0ZXJyb3JDbGFzczogJ2lucHV0LWZsb2F0X2ludmFsaWQnLFxuXHRcdFx0XHRcdHN1Y2Nlc3NDbGFzczogJ2lucHV0LWZsb2F0X3ZhbGlkJyxcblx0XHRcdFx0XHRlcnJvclRleHRQYXJlbnQ6ICdpbnB1dC1mbG9hdCcsIC8vIGNsYXNzIG9mIHRoZSBwYXJlbnQgZWxlbWVudCB3aGVyZSBlcnJvciB0ZXh0IGVsZW1lbnQgaXMgYXBwZW5kZWRcblx0XHRcdFx0XHRlcnJvclRleHRUYWc6ICdzcGFuJywgLy8gdHlwZSBvZiBlbGVtZW50IHRvIGNyZWF0ZSBmb3IgdGhlIGVycm9yIHRleHRcblx0XHRcdFx0XHRlcnJvclRleHRDbGFzczogJ2lucHV0LWZsb2F0X19lcnJvcicgLy8gY2xhc3Mgb2YgdGhlIGVycm9yIHRleHQgZWxlbWVudFxuXHRcdFx0XHR9XG5cdFx0XHR9LFxuXHRcdFx0Ly8gQ29tcG9uZW50IGlubmVyIGVsZW1lbnRzXG5cdFx0XHRpbm5lckVsZW1lbnRzOiB7XG5cblx0XHRcdH0sXG5cdFx0fSk7XG5cblx0XHR0aGlzLnZhbGlkID0gdHJ1ZTtcblx0XHR0aGlzLl9oYW5kbGVycyA9IHtcblx0XHRcdHN1Ym1pdDogdGhpcy5fb25TdWJtaXQuYmluZCh0aGlzKSxcblx0XHRcdGRpc21pc3M6IHRoaXMuX29uRGlzbWlzcy5iaW5kKHRoaXMpXG5cdFx0fTtcblxuXHRcdHRoaXMubWVzc2FnZVN1Y2Nlc3MgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLW1lc3NhZ2Utc3VjY2VzcycpO1xuXHRcdHRoaXMubWVzc2FnZUVycm9yID0gdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1tZXNzYWdlLWVycm9yJyk7XG5cdFx0dGhpcy5tZXRob2QgPSB0aGlzLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdtZXRob2QnKTtcblx0XHR0aGlzLmFjdGlvbiA9IHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2FjdGlvbicpO1xuXG5cdFx0dGhpcy5zZXR1cCgpO1xuXHR9XG5cblx0aW5pdCgpIHtcblx0XHRpZiAoISF0aGlzLm9wdGlvbnMucHJpc3RpbmUpIHtcblx0XHRcdHRoaXMuX2NyZWF0ZVByaXN0aW5lKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5fYXR0YWNoRXZlbnRzKCk7XG5cdH1cblxuXHRfYXR0YWNoRXZlbnRzKCkge1xuXHRcdHRoaXMuZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdzdWJtaXQnLCB0aGlzLl9oYW5kbGVycy5zdWJtaXQpO1xuXHR9XG5cblx0X2RldGFjaEV2ZW50cygpIHtcblx0XHR0aGlzLmVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignc3VibWl0JywgdGhpcy5faGFuZGxlcnMuc3VibWl0KTtcblx0fVxuXG5cdF9vblN1Ym1pdChldmVudCkge1xuXHRcdGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cblx0XHRpZiAodGhpcy5wcmlzdGluZSkge1xuXHRcdFx0Ly8gQ2hlY2sgaWYgdGhlIGZvcm0gaXMgdmFsaWRcblx0XHRcdHRoaXMudmFsaWQgPSB0aGlzLnByaXN0aW5lLnZhbGlkYXRlKCk7XG5cdFx0fVxuXG5cdFx0aWYgKHRoaXMudmFsaWQpIHtcblx0XHRcdHRoaXMuX2ZldGNoKCk7XG5cdFx0fVxuXHR9XG5cblx0X2NyZWF0ZVByaXN0aW5lKCkge1xuXHRcdHRoaXMucHJpc3RpbmUgPSBuZXcgUHJpc3RpbmUodGhpcy5lbGVtZW50LCB0aGlzLm9wdGlvbnMucHJpc3RpbmUpO1xuXHR9XG5cblx0X2ZldGNoKCkge1xuXHRcdGZldGNoKHRoaXMuYWN0aW9uLCB7XG5cdFx0XHRtZXRob2Q6IHRoaXMubWV0aG9kLFxuXHRcdFx0Ym9keTogbmV3IEZvcm1EYXRhKHRoaXMuZWxlbWVudClcblx0XHR9KS50aGVuKChyZXMpID0+IHtcblx0XHRcdGlmIChyZXMuc3RhdHVzID49IDIwMCAmJiByZXMuc3RhdHVzIDwgMzAwKSB7XG5cdFx0XHRcdHRoaXMuX29uRmV0Y2hTdWNjZXNzKCk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0aGlzLl9vbkZldGNoRXJyb3IoKTtcblx0XHRcdH1cblx0XHR9KS5jYXRjaCgoKSA9PiB7XG5cdFx0XHR0aGlzLl9vbkZldGNoRXJyb3IoKTtcblx0XHR9KTtcblx0fVxuXG5cdF9vbkZldGNoU3VjY2VzcygpIHtcblx0XHR0aGlzLl9jcmVhdGVNb2RhbCh7XG5cdFx0XHR0ZW1wbGF0ZTogdGhpcy5fZ2V0TW9kYWxUZW1wbGF0ZSh7XG5cdFx0XHRcdGljb246ICdpY29uLXN1Y2Nlc3Muc3ZnJyxcblx0XHRcdFx0bWVzc2FnZTogdGhpcy5tZXNzYWdlU3VjY2Vzc1xuXHRcdFx0fSksXG5cdFx0XHRvbkRpc21pc3M6IHRoaXMuX2hhbmRsZXJzLmRpc21pc3Ncblx0XHR9KTtcblx0fVxuXG5cdF9vbkZldGNoRXJyb3IoKSB7XG5cdFx0dGhpcy5fY3JlYXRlTW9kYWwoe1xuXHRcdFx0dGVtcGxhdGU6IHRoaXMuX2dldE1vZGFsVGVtcGxhdGUoe1xuXHRcdFx0XHRpY29uOiAnaWNvbi1lcnJvci5zdmcnLFxuXHRcdFx0XHRtZXNzYWdlOiB0aGlzLm1lc3NhZ2VFcnJvclxuXHRcdFx0fSlcblx0XHR9KTtcblx0fVxuXG5cdF9vbkRpc21pc3MoKSB7XG5cdFx0dGhpcy5lbGVtZW50LnJlc2V0KCk7XG5cdH1cblxuXHRfZ2V0TW9kYWxUZW1wbGF0ZSh7XG5cdFx0aWNvbixcblx0XHRtZXNzYWdlXG5cdH0pIHtcblx0XHRyZXR1cm4gYFxuXHRcdFx0PGRpdiBjbGFzcz1cIm1vZGFsLWRpYWxvZyBtb2RhbC1kaWFsb2ctY2VudGVyZWRcIj5cblx0XHRcdFx0PGRpdiBjbGFzcz1cIm1vZGFsLWNvbnRlbnQgcmFkaXVzLWltZ1wiPlxuXHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJtb2RhbF9fY2xvc2UgcC0zXCIgZGF0YS1icy1kaXNtaXNzPVwibW9kYWxcIiBkYXRhLWFydHMtY3Vyc29yLWZvbGxvd2VyLXRhcmdldD1cIntzY2FsZTogJ2N1cnJlbnQnLCBtYWduZXRpYzogMC4zM31cIj5cblx0XHRcdFx0XHRcdDxpbWcgc3JjPVwiaW1nL21vZGFsL2ljb24tY2xvc2Uuc3ZnXCIgYWx0PVwiXCI+XG5cdFx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdFx0PGhlYWRlciBjbGFzcz1cInRleHQtY2VudGVyIG15LTRcIj5cblx0XHRcdFx0XHRcdDxpbWcgY2xhc3M9XCJkLWlubGluZS1ibG9jayBtYi00XCIgc3JjPVwiaW1nL21vZGFsLyR7aWNvbn1cIiB3aWR0aD1cIjgwcHhcIiBoZWlnaHQ9XCI4MHB4XCIgYWx0PVwiXCIvPlxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cIm1vZGFsX19tZXNzYWdlIGg1XCI+JHttZXNzYWdlfTwvZGl2PlxuXHRcdFx0XHRcdDwvaGVhZGVyPlxuXHRcdFx0XHRcdDxkaXYgY2xhc3M9XCI+bW9kYWwtY29udGVudF9fd3JhcHBlci1idXR0b25cIj5cblx0XHRcdFx0XHRcdDxidXR0b24gdHlwZT1cImJ1dHRvblwiIGNsYXNzPVwiYnV0dG9uIGJ1dHRvbl9zb2xpZCBidXR0b25fZnVsbHdpZHRoIHVpLWVsZW1lbnQgY3Vyc29yLWhpZ2hsaWdodFwiIGRhdGEtYnMtZGlzbWlzcz1cIm1vZGFsXCI+XG5cdFx0XHRcdFx0XHRcdDxzcGFuIGNsYXNzPVwiYnV0dG9uX19sYWJlbCBidXR0b25fX2xhYmVsLW5vcm1hbFwiPlxuXHRcdFx0XHRcdFx0XHRcdDxzcGFuIGNsYXNzPVwiYnV0dG9uX190aXRsZVwiPk9LPC9zcGFuPlxuXHRcdFx0XHRcdFx0XHQ8L3NwYW4+XG5cdFx0XHRcdFx0XHRcdDxzcGFuIGNsYXNzPVwiYnV0dG9uX19sYWJlbCBidXR0b25fX2xhYmVsLWhvdmVyXCI+XG5cdFx0XHRcdFx0XHRcdFx0PHNwYW4gY2xhc3M9XCJidXR0b25fX3RpdGxlXCI+T0s8L3NwYW4+XG5cdFx0XHRcdFx0XHRcdDwvc3Bhbj5cblx0XHRcdFx0XHRcdDwvYnV0dG9uPlxuXHRcdFx0XHRcdDwvZGl2PlxuXHRcdFx0XHQ8L2Rpdj5cblx0XHRcdDwvZGl2PlxuICAgIGAudHJpbSgpO1xuXHR9XG5cblx0X2NyZWF0ZU1vZGFsKHtcblx0XHR0ZW1wbGF0ZSxcblx0XHRvbkRpc21pc3Ncblx0fSkge1xuXHRcdGNvbnN0IG1vZGFsRWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuXG5cdFx0bW9kYWxFbGVtZW50LmlkID0gJ21vZGFsQ29udGFjdEZvcm0nO1xuXHRcdG1vZGFsRWxlbWVudC5jbGFzc05hbWUgPSAnbW9kYWwnO1xuXHRcdG1vZGFsRWxlbWVudC5pbm5lckhUTUwgKz0gdGVtcGxhdGU7XG5cblx0XHRkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKG1vZGFsRWxlbWVudCk7XG5cblx0XHRjb25zdCBtb2RhbCA9IG5ldyBib290c3RyYXAuTW9kYWwobW9kYWxFbGVtZW50KTtcblxuXHRcdG1vZGFsRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdoaWRkZW4uYnMubW9kYWwnLCAoKSA9PiB7XG5cdFx0XHRpZiAodHlwZW9mIG9uRGlzbWlzcyA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0XHRvbkRpc21pc3MoKTtcblx0XHRcdH1cblxuXHRcdFx0bW9kYWwuZGlzcG9zZSgpO1xuXHRcdFx0bW9kYWxFbGVtZW50LnJlbW92ZSgpO1xuXG5cdFx0XHRhcHAudXRpbGl0aWVzLnNjcm9sbExvY2soZmFsc2UpO1xuXHRcdH0pO1xuXG5cdFx0bW9kYWxFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ3Nob3duLmJzLm1vZGFsJywgKCkgPT4ge1xuXHRcdFx0YXBwLnV0aWxpdGllcy5zY3JvbGxMb2NrKHRydWUpO1xuXHRcdH0pO1xuXG5cdFx0bW9kYWwuc2hvdygpO1xuXHR9XG59XG4iXSwibmFtZXMiOlsiRm9ybUFKQVgiLCJfQmFzZUNvbXBvbmVudCIsIl9yZWYiLCJfdGhpcyIsIm5hbWUiLCJsb2FkSW5uZXJDb21wb25lbnRzIiwicGFyZW50IiwiZWxlbWVudCIsIl9jbGFzc0NhbGxDaGVjayIsIl9jYWxsU3VwZXIiLCJkZWZhdWx0cyIsInByaXN0aW5lIiwiY2xhc3NUbyIsImVycm9yQ2xhc3MiLCJzdWNjZXNzQ2xhc3MiLCJlcnJvclRleHRQYXJlbnQiLCJlcnJvclRleHRUYWciLCJlcnJvclRleHRDbGFzcyIsImlubmVyRWxlbWVudHMiLCJ2YWxpZCIsIl9oYW5kbGVycyIsInN1Ym1pdCIsIl9vblN1Ym1pdCIsImJpbmQiLCJkaXNtaXNzIiwiX29uRGlzbWlzcyIsIm1lc3NhZ2VTdWNjZXNzIiwiZ2V0QXR0cmlidXRlIiwibWVzc2FnZUVycm9yIiwibWV0aG9kIiwiYWN0aW9uIiwic2V0dXAiLCJfaW5oZXJpdHMiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsImluaXQiLCJvcHRpb25zIiwiX2NyZWF0ZVByaXN0aW5lIiwiX2F0dGFjaEV2ZW50cyIsImFkZEV2ZW50TGlzdGVuZXIiLCJfZGV0YWNoRXZlbnRzIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCJ2YWxpZGF0ZSIsIl9mZXRjaCIsIlByaXN0aW5lIiwiX3RoaXMyIiwiZmV0Y2giLCJib2R5IiwiRm9ybURhdGEiLCJ0aGVuIiwicmVzIiwic3RhdHVzIiwiX29uRmV0Y2hTdWNjZXNzIiwiX29uRmV0Y2hFcnJvciIsIl9jcmVhdGVNb2RhbCIsInRlbXBsYXRlIiwiX2dldE1vZGFsVGVtcGxhdGUiLCJpY29uIiwibWVzc2FnZSIsIm9uRGlzbWlzcyIsInJlc2V0IiwiX3JlZjIiLCJjb25jYXQiLCJ0cmltIiwiX3JlZjMiLCJtb2RhbEVsZW1lbnQiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJpZCIsImNsYXNzTmFtZSIsImlubmVySFRNTCIsImFwcGVuZENoaWxkIiwibW9kYWwiLCJib290c3RyYXAiLCJNb2RhbCIsImRpc3Bvc2UiLCJyZW1vdmUiLCJhcHAiLCJ1dGlsaXRpZXMiLCJzY3JvbGxMb2NrIiwic2hvdyIsIkJhc2VDb21wb25lbnQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/components/FormAJAX.js\n");

/***/ })

}]);