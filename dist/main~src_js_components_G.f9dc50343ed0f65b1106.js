"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkthree_shader_env01"] = self["webpackChunkthree_shader_env01"] || []).push([["main~src_js_components_G"],{

/***/ "./src/js/components/GMap.js":
/*!***********************************!*\
  !*** ./src/js/components/GMap.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ GMap)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar GMap = /*#__PURE__*/function (_BaseComponent) {\n  function GMap(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, GMap);\n    _this = _callSuper(this, GMap, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        googleMapAPIScriptSelector: 'script[src*=\"maps.googleapis.com/maps/api\"]',\n        zoom: 10,\n        markerOptionsAttribute: 'data-marker-options',\n        markerContentAttribute: 'data-marker-content',\n        styles: '[{\"featureType\":\"all\",\"elementType\":\"labels.text.fill\",\"stylers\":[{\"saturation\":36},{\"color\":\"#111111\"},{\"lightness\":40}]},{\"featureType\":\"all\",\"elementType\":\"labels.text.stroke\",\"stylers\":[{\"visibility\":\"on\"},{\"color\":\"#111111\"},{\"lightness\":16}]},{\"featureType\":\"all\",\"elementType\":\"labels.icon\",\"stylers\":[{\"visibility\":\"off\"}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#111111\"},{\"lightness\":20}]},{\"featureType\":\"administrative\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#111111\"},{\"lightness\":17},{\"weight\":1.2}]},{\"featureType\":\"landscape\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#111111\"},{\"lightness\":20}]},{\"featureType\":\"poi\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#111111\"},{\"lightness\":21}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.fill\",\"stylers\":[{\"color\":\"#111111\"},{\"lightness\":17}]},{\"featureType\":\"road.highway\",\"elementType\":\"geometry.stroke\",\"stylers\":[{\"color\":\"#111111\"},{\"lightness\":29},{\"weight\":0.2}]},{\"featureType\":\"road.arterial\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#111111\"},{\"lightness\":18}]},{\"featureType\":\"road.local\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#111111\"},{\"lightness\":16}]},{\"featureType\":\"transit\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#111111\"},{\"lightness\":19}]},{\"featureType\":\"water\",\"elementType\":\"geometry\",\"stylers\":[{\"color\":\"#111111\"},{\"lightness\":17}]}]'\n      },\n      // Component inner elements\n      innerElements: {\n        container: '.js-gmap__container',\n        markers: '.js-gmap__marker'\n      }\n    }]);\n    _this.prevInfoWindow = false;\n    _this.setup();\n    return _this;\n  }\n  _inherits(GMap, _BaseComponent);\n  return _createClass(GMap, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      if (this._isGoogleMapsAPILoaded()) {\n        this._init();\n      } else {\n        this._loadGoogleMapsAPI().then(function () {\n          _this2._init();\n        })[\"catch\"](function () {\n          console.error(\"Couldn't load Google Maps: Please make sure API <script> is present on the page.\");\n        });\n      }\n    }\n  }, {\n    key: \"_init\",\n    value: function _init() {\n      var _this3 = this;\n      app.utilities.waitForVariable('google').then(function () {\n        _this3._createMap();\n        _this3._addMarkers();\n        _this3._centerMap();\n        _this3._addButtonCursorClasses();\n      });\n    }\n  }, {\n    key: \"_parseStyles\",\n    value: function _parseStyles(styles) {\n      if (!styles) {\n        return false;\n      }\n      try {\n        return JSON.parse(styles);\n      } catch (err) {\n        console.error('Google Map: Invalid Snazzy Styles array provided.');\n        return false;\n      }\n    }\n  }, {\n    key: \"_createMap\",\n    value: function _createMap() {\n      var options = {\n        center: new google.maps.LatLng(0, 0),\n        zoom: this.options.zoom,\n        scrollwheel: false\n      };\n      if (this.options.styles) {\n        Object.assign(options, {\n          styles: this._parseStyles(this.options.styles)\n        });\n      }\n      this.map = new google.maps.Map(this.elements.container[0], options);\n    }\n  }, {\n    key: \"_addMarkers\",\n    value: function _addMarkers() {\n      var _this4 = this;\n      if (this.map) {\n        this.map.markers = [];\n        if (this.elements.markers.length) {\n          this.elements.markers.forEach(function (el) {\n            var marker = _this4._createMarker(el);\n            if (marker) {\n              _this4.map.markers.push(marker);\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_createMarker\",\n    value: function _createMarker(el) {\n      var options = app.utilities.parseOptionsStringObject(el.getAttribute(\"\".concat(this.options.markerOptionsAttribute))),\n        content = el.getAttribute(\"\".concat(this.options.markerContentAttribute));\n\n      /**\n       * Marker\n       */\n      var args = {\n        position: new google.maps.LatLng(options.lat, options.lng),\n        map: this.map\n      };\n      if (typeof options.img === 'string') {\n        Object.assign(args, {\n          icon: {\n            url: options.img\n          }\n        });\n      }\n      if (typeof options.img === 'string' && options.width && options.height) {\n        Object.assign(args.icon, {\n          scaledSize: new google.maps.Size(options.width, options.height),\n          origin: new google.maps.Point(0, 0),\n          // origin\n          anchor: new google.maps.Point(0, 0) // anchor\n        });\n      }\n      var marker = new google.maps.Marker(args);\n\n      /**\n       * Info Window (Content)\n       */\n      if (typeof content === 'string' && content.length) {\n        this._createInfoWindow(marker, content);\n      }\n      return marker;\n    }\n  }, {\n    key: \"_createInfoWindow\",\n    value: function _createInfoWindow(marker, content) {\n      var _this5 = this;\n      if (marker && content) {\n        var infoWindow = new google.maps.InfoWindow({\n          content: content\n        });\n        marker.addListener('click', function () {\n          if (_this5.prevInfoWindow) {\n            _this5.prevInfoWindow.close();\n          }\n          _this5.prevInfoWindow = infoWindow;\n          infoWindow.open(_this5.map, marker);\n        });\n      }\n    }\n  }, {\n    key: \"_centerMap\",\n    value: function _centerMap() {\n      var bounds = new google.maps.LatLngBounds();\n      this.map.markers.forEach(function (marker) {\n        if (marker.position && typeof marker.position.lat === 'function' && typeof marker.position.lng === 'function') {\n          var lat = marker.position.lat(),\n            lng = marker.position.lng(),\n            newZoom = new google.maps.LatLng(lat, lng);\n          bounds.extend(newZoom);\n        }\n      });\n\n      // Center single marker\n      if (this.map.markers.length === 1) {\n        this.map.setCenter(bounds.getCenter());\n        this.map.setZoom(this.options.zoom);\n      } else {\n        // Fit bounds to multiple markers\n        this.map.fitBounds(bounds);\n      }\n    }\n  }, {\n    key: \"_isGoogleMapsAPILoaded\",\n    value: function _isGoogleMapsAPILoaded() {\n      return typeof window.google !== 'undefined' && typeof window.google.maps !== 'undefined';\n    }\n  }, {\n    key: \"_loadGoogleMapsAPI\",\n    value: function _loadGoogleMapsAPI() {\n      var _this6 = this;\n      return new Promise(function (resolve, reject) {\n        var googleMapScript = document.querySelector(_this6.options.googleMapAPIScriptSelector);\n        if (googleMapScript) {\n          var id = googleMapScript.id,\n            src = googleMapScript.src;\n          app.assetsManager.load({\n            type: 'script',\n            id: id,\n            src: src,\n            preload: false\n          }).then(function () {\n            return resolve(true);\n          })[\"catch\"](function () {\n            return reject(false);\n          });\n        } else {\n          reject(false);\n        }\n      });\n    }\n  }, {\n    key: \"_addButtonCursorClasses\",\n    value: function _addButtonCursorClasses() {\n      var _this7 = this;\n      google.maps.event.addListenerOnce(this.map, 'tilesloaded', function () {\n        if (!!app.options.cursorFollower && !!app.options.cursorFollower.highlight && typeof app.options.cursorFollower.highlight.includeClass === 'string') {\n          _toConsumableArray(_this7.elements.container[0].querySelectorAll('[role=\"button\"]')).forEach(function (el) {\n            el.classList.add(app.options.cursorFollower.highlight.includeClass);\n          });\n        }\n      });\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/GMap.js\n");

/***/ }),

/***/ "./src/js/components/Grid.js":
/*!***********************************!*\
  !*** ./src/js/components/Grid.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Grid)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Grid = /*#__PURE__*/function (_BaseComponent) {\n  function Grid(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, Grid);\n    _this = _callSuper(this, Grid, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        filterSticky: {\n          trigger: 'self',\n          offsetTop: 0,\n          offsetHeaderHeight: false,\n          matchMedia: '(min-width: 992px)',\n          toggleStickyClass: 'sticking',\n          toggleStickyColorTheme: false,\n          toggleHeaderVisibility: false,\n          autoScrollToGrid: false\n        },\n        filterItemActiveClass: 'filter__item_active',\n        filterItemAttribute: 'data-filter',\n        filterDrawEffect: true\n      },\n      // Component inner elements\n      innerElements: {\n        container: '.js-grid__container',\n        gridItem: '.js-grid__item',\n        gridColumn: '.js-grid__col-grid',\n        filterColumn: '.js-grid__col-filter',\n        gridFilter: '.js-grid__filter',\n        gridFilterDropdown: '.js-grid__filter-dropdown',\n        gridFilterItems: '.js-grid__filter-item',\n        gridFilterItemsInner: '.js-grid__filter-item-inner'\n      }\n    }]);\n    _this._handlers = {\n      clickFilterItem: _this._onClickFilterItem.bind(_this),\n      changeDropdown: _this._onChangeDropdown.bind(_this),\n      arrangeComplete: ScrollTrigger.refresh.bind(ScrollTrigger),\n      animationStart: _this._onAnimationStart.bind(_this)\n    };\n    _this.shapes = [];\n    _this.setup();\n    return _this;\n  }\n  _inherits(Grid, _BaseComponent);\n  return _createClass(Grid, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      this.updateRef('headerRef', 'Header');\n      this.savedFilterColumnColorTheme = '';\n      if (this.elements.filterColumn[0]) {\n        this.savedFilterColumnColorTheme = this.elements.filterColumn[0].getAttribute('data-arts-color-theme');\n      }\n      this.tl = gsap.timeline({\n        defaults: {\n          ease: 'power2.inOut',\n          duration: 0.6\n        }\n      });\n      this._createGrid();\n      this._attachEvents();\n      if (!!this.options.filterDrawEffect && !this._hasAnimationScene()) {\n        this._setHoverDrawEffect();\n      }\n      if (!!this.options.filterSticky) {\n        var mq = typeof this.options.filterSticky.matchMedia === 'string' ? this.options.filterSticky.matchMedia : 'all';\n        this.mm = gsap.matchMedia();\n        this.mm.add(mq, function () {\n          _this2._createStickyFilterScene();\n          return function () {\n            _this2._setSticky(false);\n            ScrollTrigger.refresh(false);\n          };\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      if (this.mm && typeof this.mm.kill === 'function') {\n        this.mm.kill();\n      }\n      this.isotope.destroy();\n    }\n  }, {\n    key: \"prepareAnimation\",\n    value: function prepareAnimation() {\n      var _this3 = this;\n      return new Promise(function (resolve) {\n        _this3.element.addEventListener('animation/start', _this3._handlers.animationStart, {\n          once: true\n        });\n        resolve(true);\n      });\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      this.element.addEventListener('click', this._handlers.clickFilterItem, true);\n      this.element.addEventListener('change', this._handlers.changeDropdown);\n      this.resizeInstance = new ResizeObserver(app.utilities.debounce(this._updateGrid.bind(this), app.utilities.getDebounceTime()));\n      this.resizeInstance.observe(this.element);\n      if (this.isotope) {\n        this.isotope.on('arrangeComplete', this._handlers.arrangeComplete);\n      }\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      if (this.resizeInstance) {\n        this.resizeInstance.unobserve(this.element);\n      }\n      if (this.isotope) {\n        this.isotope.off('arrangeComplete', this._handlers.arrangeComplete);\n      }\n      this.element.removeEventListener('click', this._handlers.clickFilterItem);\n    }\n  }, {\n    key: \"_createGrid\",\n    value: function _createGrid() {\n      this.isotope = new Isotope(this.elements.container[0], {\n        itemSelector: this.innerSelectors.gridItem,\n        percentPosition: true,\n        horizontalOrder: true,\n        filter: this._getActiveFilter()\n      });\n    }\n  }, {\n    key: \"_createStickyFilterScene\",\n    value: function _createStickyFilterScene() {\n      var _this4 = this;\n      var stickyTopOffset = 0;\n      if (typeof this.options.filterSticky.offsetTop === 'number' || typeof this.options.filterSticky.offsetTop === 'string') {\n        stickyTopOffset = parseInt(this.options.filterSticky.offsetTop.toString());\n      }\n      this.stickyScene = ScrollTrigger.create({\n        onEnter: this._setSticky.bind(this, true),\n        onEnterBack: this._setSticky.bind(this, true),\n        onLeave: this._setSticky.bind(this, false),\n        onLeaveBack: this._setSticky.bind(this, false),\n        start: function start() {\n          var offset = 0;\n          offset += stickyTopOffset;\n          offset += !!_this4.options.filterSticky.offsetHeaderHeight && app.utilities.getHeaderHeight();\n          return \"top top+=\".concat(offset);\n        },\n        end: function end() {\n          var offset = 0;\n          offset += stickyTopOffset;\n          if (_this4.elements.gridFilter[0]) {\n            offset += _this4.elements.gridFilter[0].offsetHeight;\n          }\n          offset += !!_this4.options.filterSticky.offsetHeaderHeight && app.utilities.getHeaderHeight();\n          return \"bottom-=\".concat(offset, \" top\");\n        },\n        trigger: this.options.filterSticky.trigger === 'grid' ? this.elements.gridColumn[0] : this.element,\n        pin: this.elements.filterColumn[0]\n      });\n    }\n  }, {\n    key: \"_setSticky\",\n    value: function _setSticky() {\n      var sticking = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (this.elements.filterColumn.length) {\n        if (typeof this.options.filterSticky.toggleStickyClass === 'string') {\n          app.utilities.toggleClasses(this.elements.filterColumn[0], this.options.filterSticky.toggleStickyClass, sticking);\n        }\n        if (typeof this.options.filterSticky.toggleStickyColorTheme === 'string') {\n          if (sticking) {\n            this.elements.filterColumn[0].setAttribute('data-arts-color-theme', this.options.filterSticky.toggleStickyColorTheme);\n          } else {\n            if (this.savedFilterColumnColorTheme) {\n              this.elements.filterColumn[0].setAttribute('data-arts-color-theme', this.savedFilterColumnColorTheme);\n            } else {\n              this.elements.filterColumn[0].removeAttribute('data-arts-color-theme');\n            }\n          }\n        }\n        if (!!this.options.filterSticky.toggleHeaderVisibility && this.headerRef) {\n          this.headerRef.toggleHidden(sticking);\n        }\n      }\n    }\n  }, {\n    key: \"_getActiveFilter\",\n    value: function _getActiveFilter() {\n      var activeFilterItem = this._getActiveFilterItem();\n      return this._getFilterItemValue(activeFilterItem);\n    }\n  }, {\n    key: \"_getFilterItemValue\",\n    value: function _getFilterItemValue(el) {\n      if (el instanceof HTMLElement) {\n        return el.getAttribute(this.options.filterItemAttribute);\n      }\n      return '';\n    }\n  }, {\n    key: \"_getActiveFilterItem\",\n    value: function _getActiveFilterItem() {\n      var _this5 = this;\n      var filteredArray = this.elements.gridFilterItems.filter(function (el) {\n        return el.classList.contains(\"\".concat(_this5.options.filterItemActiveClass));\n      });\n      if (filteredArray.length) {\n        return filteredArray[0];\n      }\n    }\n  }, {\n    key: \"_setActiveFilterItem\",\n    value: function _setActiveFilterItem(el) {\n      var active = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      if (el instanceof HTMLElement) {\n        el.classList.toggle(this.options.filterItemActiveClass, active);\n        var ellipse = el.querySelector('ellipse');\n        if (active && this.elements.gridFilterDropdown[0]) {\n          this.elements.gridFilterDropdown[0].value = this._getFilterItemValue(el);\n        }\n        if (ellipse) {\n          if (active) {\n            this.tl.to(ellipse, {\n              drawSVG: '100% 0%'\n            }, 'start');\n          } else {\n            this.tl.to(ellipse, {\n              drawSVG: '100% 100%'\n            }, 'start');\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_onClickFilterItem\",\n    value: function _onClickFilterItem(event) {\n      var _this6 = this;\n      var filterItem = event.target.closest(this.innerSelectors.gridFilterItems);\n      if (filterItem) {\n        this.tl.clear();\n        this.elements.gridFilterItems.forEach(function (el) {\n          _this6._setActiveFilterItem(el, el === filterItem);\n        });\n        this._arrangeGrid();\n        if (!!this.options.filterSticky && !!this.options.filterSticky.autoScrollToGrid) {\n          this._scrollToGrid();\n        }\n      }\n    }\n  }, {\n    key: \"_onChangeDropdown\",\n    value: function _onChangeDropdown(event) {\n      var _this7 = this;\n      var dropdownEl = event.target.closest(this.innerSelectors.gridFilterDropdown);\n      if (dropdownEl) {\n        var filteredArray = this.elements.gridFilterItems.filter(function (el) {\n          return el.getAttribute(_this7.options.filterItemAttribute) === dropdownEl.value;\n        });\n        if (filteredArray[0]) {\n          filteredArray[0].click();\n        }\n      }\n    }\n  }, {\n    key: \"_arrangeGrid\",\n    value: function _arrangeGrid() {\n      this.isotope.arrange({\n        filter: this._getActiveFilter()\n      });\n    }\n  }, {\n    key: \"_scrollToGrid\",\n    value: function _scrollToGrid() {\n      if (this.stickyScene && this.stickyScene.isActive) {\n        app.utilities.scrollTo({\n          target: this.elements.gridColumn[0],\n          duration: typeof this.options.filterSticky.autoScrollToGrid === 'number' ? this.options.filterSticky.autoScrollToGrid : 0.6\n        });\n      }\n    }\n  }, {\n    key: \"_updateGrid\",\n    value: function _updateGrid() {\n      this.isotope.layout();\n      ScrollTrigger.refresh();\n    }\n  }, {\n    key: \"_setHoverDrawEffect\",\n    value: function _setHoverDrawEffect(cb) {\n      var _this8 = this;\n      this.elements.gridFilterItemsInner.forEach(function (el) {\n        _this8.shapes.push(_this8._addSVGShape(el));\n\n        // draw current item\n        var item = el.closest(_this8.innerSelectors.gridFilterItems);\n        var shouldDraw = item && item.classList.contains(_this8.options.filterItemActiveClass);\n        _this8._setEllipse(el, shouldDraw, cb);\n      });\n    }\n  }, {\n    key: \"_addSVGShape\",\n    value: function _addSVGShape(el) {\n      if (el && typeof app.options.circleTemplate === 'string') {\n        return el.insertAdjacentHTML('beforeend', app.options.circleTemplate);\n      }\n    }\n  }, {\n    key: \"_setEllipse\",\n    value: function _setEllipse(element) {\n      var drawn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var cb = arguments.length > 2 ? arguments[2] : undefined;\n      if (element) {\n        var ellipse = element.querySelector('ellipse');\n        if (ellipse) {\n          gsap.set(ellipse, {\n            drawSVG: drawn ? '100%' : '0%'\n          });\n          if (typeof cb === 'function') {\n            cb(ellipse, drawn);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_onAnimationStart\",\n    value: function _onAnimationStart() {\n      var _this9 = this;\n      this._setHoverDrawEffect(function (ellipse, drawn) {\n        if (drawn) {\n          _this9.tl.fromTo(ellipse, {\n            drawSVG: '0%'\n          }, {\n            delay: 0.6,\n            duration: 1.2,\n            ease: 'expo.inOut',\n            drawSVG: '100% 0%'\n          }, 'start');\n        }\n      });\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/Grid.js\n");

/***/ }),

/***/ "./src/js/components/Gui.js":
/*!**********************************!*\
  !*** ./src/js/components/Gui.js ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Gui)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Gui = /*#__PURE__*/function (_BaseComponent) {\n  function Gui(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element,\n      options = _ref.options;\n    _classCallCheck(this, Gui);\n    _this = _callSuper(this, Gui, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // External options from app.options.ajax\n      defaults: options,\n      // Component inner elements\n      innerElements: {}\n    }]);\n    _this._handlers = {\n      updateHeader: app.utilities.debounce(_this._onUpdateHeader.bind(_this), 300),\n      transitionInit: _this._onTransitionInit.bind(_this)\n    };\n    _this.logos = {\n      'Primary': 'primary',\n      'Secondary': 'secondary'\n    };\n    _this.themes = {\n      'Dark': 'dark',\n      'Light': 'light',\n      'Auto (inherit)': 'null'\n    };\n    _this.headerLayouts = {\n      'Classic Menu / Logo Left / Menu Right': {\n        className: 'header_classic-menu-right',\n        url: '08-04-01-classic-menu-logo-left-menu-right.html'\n      },\n      'Classic Menu / Logo Left / Menu Left': {\n        className: 'header_classic-menu-left',\n        url: '08-04-02-classic-menu-logo-left-menu-left.html'\n      },\n      'Classic Menu / Logo Left / Menu Center': {\n        className: 'header_classic-menu-center',\n        url: '08-04-03-classic-menu-logo-left-menu-center.html'\n      },\n      'Classic Menu / Logo Center / Menu Split': {\n        className: 'header_classic-menu-split-center',\n        url: '08-04-04-classic-menu-logo-center-menu-split.html'\n      },\n      'Overlay Menu / Logo Left / Burger Right': {\n        className: 'header_overlay-logo-left-burger-right',\n        url: '08-05-01-overlay-menu-logo-left-burger-right.html'\n      },\n      'Overlay Menu / Logo Center / Burger Right': {\n        className: 'header_overlay-logo-center-burger-right',\n        url: '08-05-02-overlay-menu-logo-center-burger-right.html'\n      },\n      'Overlay Menu / Logo Center / Burger Left': {\n        className: 'header_overlay-logo-center-burger-left',\n        url: '08-05-03-overlay-menu-logo-center-burger-left.html'\n      }\n    };\n    _this.headerClasses = {\n      'Classic Menu / Logo Left / Menu Right': '08-04-01-classic-menu-logo-left-menu-right.html',\n      'Classic Menu / Logo Left / Menu Left': '08-04-02-classic-menu-logo-left-menu-left.html',\n      'Classic Menu / Logo Left / Menu Center': '08-04-03-classic-menu-logo-left-menu-center.html',\n      'Classic Menu / Logo Center / Menu Split': '08-04-04-classic-menu-logo-center-menu-split.html',\n      'Overlay Menu / Logo Left / Burger Right': '08-05-01-overlay-menu-logo-left-burger-right.html',\n      'Overlay Menu / Logo Center / Burger Right': '08-05-02-overlay-menu-logo-center-burger-right.html',\n      'Overlay Menu / Logo Center / Burger Left': '08-05-03-overlay-menu-logo-center-burger-left.html'\n    };\n    _this.backgrounds = {\n      'Light 1': 'bg-light-1',\n      'Light 2': 'bg-light-2',\n      'Light 3': 'bg-light-3',\n      'Light 4': 'bg-light-4',\n      'Platinum 1': 'bg-platinum-1',\n      'Platinum 2': 'bg-platinum-2',\n      'Gray 1': 'bg-gray-1',\n      'Gray 2': 'bg-gray-2',\n      'Gray 3': 'bg-gray-3',\n      'Gray 4': 'bg-gray-4',\n      'Dark 1': 'bg-dark-1',\n      'Dark 2': 'bg-dark-2',\n      'Dark 3': 'bg-dark-3',\n      'Dark 4': 'bg-dark-4',\n      'Auto (inherit)': 'null'\n    };\n    _this.presets = {\n      'Light 1': {\n        background: 'bg-light-1',\n        theme: 'light',\n        logo: 'primary'\n      },\n      'Light 2': {\n        background: 'bg-light-2',\n        theme: 'light',\n        logo: 'primary'\n      },\n      'Light 3': {\n        background: 'bg-light-3',\n        theme: 'light',\n        logo: 'primary'\n      },\n      'Light 4': {\n        background: 'bg-light-4',\n        theme: 'light',\n        logo: 'primary'\n      },\n      'Platinum 1': {\n        background: 'bg-platinum-1',\n        theme: 'dark',\n        logo: 'secondary'\n      },\n      'Platinum 2': {\n        background: 'bg-platinum-2',\n        theme: 'dark',\n        logo: 'secondary'\n      },\n      'Gray 1': {\n        background: 'bg-gray-1',\n        theme: 'dark',\n        logo: 'secondary'\n      },\n      'Gray 2': {\n        background: 'bg-gray-2',\n        theme: 'light',\n        logo: 'primary'\n      },\n      'Gray 3': {\n        background: 'bg-gray-3',\n        theme: 'dark',\n        logo: 'secondary'\n      },\n      'Gray 4': {\n        background: 'bg-gray-4',\n        theme: 'dark',\n        logo: 'secondary'\n      },\n      'Dark 1': {\n        background: 'bg-dark-1',\n        theme: 'dark',\n        logo: 'secondary'\n      },\n      'Dark 2': {\n        background: 'bg-dark-2',\n        theme: 'dark',\n        logo: 'secondary'\n      },\n      'Dark 3': {\n        background: 'bg-dark-3',\n        theme: 'dark',\n        logo: 'secondary'\n      },\n      'Dark 4': {\n        background: 'bg-dark-4',\n        theme: 'dark',\n        logo: 'secondary'\n      },\n      'Auto (inherit)': {\n        background: 'null',\n        theme: 'null',\n        logo: 'primary'\n      }\n    };\n    _this.controls = {\n      header: {\n        'Layout': null,\n        'Color Theme': null,\n        'Logo': null,\n        'Sticky Background': null,\n        'Sticky Logo': null,\n        'Sticky Color Theme': null\n      },\n      menu: {\n        'Color Theme': null,\n        'Background': null\n      },\n      main: {\n        'Cursor Follower': app.utilities.isEnabledOption(app.options.cursorFollower),\n        'Smooth Scrolling': app.utilities.isEnabledOption(app.options.smoothScroll),\n        'Color Theme': null,\n        'Background': null\n      },\n      download: {\n        'Download Asli HTML Template': function DownloadAsliHTMLTemplate() {\n          return window.open('https://themeforest.net/item/asli-ajax-portfolio-html5-template/45162964?aid=artemsemkin&aso=demo&aca=gui', '_blank');\n        }\n      }\n    };\n    _this.folders = {\n      header: null,\n      menu: null,\n      main: null,\n      cursor: null\n    };\n    _this.controller;\n    _this.initialized = false;\n    _this.setup();\n    return _this;\n  }\n  _inherits(Gui, _BaseComponent);\n  return _createClass(Gui, [{\n    key: \"init\",\n    value: function init() {\n      this.updateRef('headerRef', 'Header');\n      this.updateRef('cursorRef', 'CursorFollower');\n      this.updateRef('scrollRef', 'Scroll');\n      this.instance = new dat.GUI({\n        width: 450\n      });\n      this.element.appendChild(this.instance.domElement);\n      if (this.headerRef) {\n        this._addHeaderControls();\n        this._initHeaderControls();\n        if (this.headerRef.elements.overlayContainer[0]) {\n          this._addMenuControls();\n          this._initMenuControls();\n        }\n      }\n      if (app.containerEl) {\n        this._addMainControls();\n        this._initMainControls();\n      }\n      this.instance.add(this.controls.download, 'Download Asli HTML Template');\n      this.instance.show();\n      this.instance.close();\n      this._attachEvents();\n      this.initialized = true;\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      document.removeEventListener('arts/barba/transition/init/after', this._handlers.transitionInit);\n      this.initialized = false;\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      document.addEventListener('arts/barba/transition/init/after', this._handlers.transitionInit);\n    }\n  }, {\n    key: \"_addHeaderControls\",\n    value: function _addHeaderControls() {\n      var _this2 = this;\n      this.folders.header = this.instance.addFolder('Header');\n\n      // Layout\n      this.headerLayout = this.folders.header.add(this.controls.header, 'Layout', this.headerClasses);\n      this.headerLayout.onChange(function (value) {\n        if (!_this2.initialized) {\n          return;\n        }\n        barba.request(value).then(function (html) {\n          app.utilities.scrollTo({\n            target: 0,\n            duration: window.pageYOffset > 1 ? 0.6 : 0,\n            cb: function cb() {\n              var tl = gsap.timeline({\n                  defaults: {\n                    duration: 0.2\n                  }\n                }),\n                parser = new DOMParser(),\n                currentHeader = document.querySelector('#page-header'),\n                currentBar = currentHeader && currentHeader.querySelector('.js-header__bar'),\n                newDOM = parser.parseFromString(html, 'text/html'),\n                newHeader = newDOM.querySelector('#page-header'),\n                newBar = newHeader && newHeader.querySelector('.js-header__bar');\n              _this2.headerRef.components.forEach(function (innerComponent) {\n                innerComponent.destroy();\n              });\n              _this2.headerRef.destroy();\n              for (var _i = 0, _Object$entries = Object.entries(_this2.headerClasses); _i < _Object$entries.length; _i++) {\n                var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 1),\n                  key = _Object$entries$_i[0];\n                currentHeader.classList.remove(_this2.headerLayouts[key].className);\n              }\n              for (var _i2 = 0, _Object$entries2 = Object.entries(_this2.headerClasses); _i2 < _Object$entries2.length; _i2++) {\n                var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 1),\n                  _key = _Object$entries2$_i[0];\n                if (newHeader && newHeader.classList.contains(_this2.headerLayouts[_key].className)) {\n                  currentHeader.classList.add(_this2.headerLayouts[_key].className);\n                }\n              }\n              _toConsumableArray(newHeader.attributes).forEach(function (attr) {\n                return newHeader.removeAttribute(attr.name);\n              });\n              _toConsumableArray(currentHeader.attributes).forEach(function (attr) {\n                return newHeader.setAttribute(attr.name, attr.value);\n              });\n              if (currentBar && newBar) {\n                currentBar.setAttribute('class', newBar.getAttribute('class'));\n              }\n              _this2._updateNodesAttributes({\n                currentDOM: newDOM,\n                newDOM: document\n              });\n              tl.to([currentBar, newBar], {\n                autoAlpha: 0,\n                transition: 'none',\n                onComplete: function onComplete() {\n                  currentHeader.replaceWith(newHeader);\n                  app.utilities.update();\n                }\n              }).to(newBar, {\n                autoAlpha: 1,\n                clearProps: 'opacity,visibility,transition',\n                onComplete: function onComplete() {\n                  _this2._reloadHeader();\n                }\n              });\n            }\n          });\n        });\n      });\n\n      // Color theme\n      this.headerColorTheme = this.folders.header.add(this.controls.header, 'Color Theme', this.themes);\n      this.headerColorTheme.onChange(function (value) {\n        _this2._changeAttribute({\n          element: _this2.headerRef.elements.bar[0],\n          attribute: 'data-arts-color-theme',\n          value: value,\n          callback: _this2._handlers.updateHeader\n        });\n        if (!!_this2.initialized) {\n          var logo = _this2._getSyncedPresetValue(value, 'theme', 'logo');\n          _this2.headerLogo.setValue(logo);\n        }\n      });\n\n      // Logo\n      this.headerLogo = this.folders.header.add(this.controls.header, 'Logo', this.logos);\n      this.headerLogo.onChange(function (value) {\n        _this2._changeAttribute({\n          element: _this2.headerRef.elements.bar[0],\n          attribute: 'data-arts-header-logo',\n          value: value,\n          callback: _this2._handlers.updateHeader\n        });\n      });\n\n      // Sticky Background\n      this.headerStickyBackground = this.folders.header.add(this.controls.header, 'Sticky Background', this.backgrounds);\n      this.headerStickyBackground.onChange(function (value) {\n        _this2._changeAttribute({\n          element: _this2.headerRef.elements.bar[0],\n          attribute: 'data-arts-header-sticky-class',\n          value: value,\n          callback: _this2._handlers.updateHeader\n        });\n        if (!!_this2.initialized) {\n          var theme = _this2._getSyncedPresetValue(value, 'background', 'theme');\n          var logo = _this2._getSyncedPresetValue(value, 'background', 'logo');\n          _this2.headerStickyColorTheme.setValue(theme);\n          _this2.headerStickyLogo.setValue(logo);\n        }\n      });\n\n      // Sticky Color Theme\n      this.headerStickyColorTheme = this.folders.header.add(this.controls.header, 'Sticky Color Theme', this.themes);\n      this.headerStickyColorTheme.onChange(function (value) {\n        _this2._changeAttribute({\n          element: _this2.headerRef.elements.bar[0],\n          attribute: 'data-arts-header-sticky-color-theme',\n          value: value,\n          callback: _this2._handlers.updateHeader\n        });\n      });\n\n      // Sticky Logo\n      this.headerStickyLogo = this.folders.header.add(this.controls.header, 'Sticky Logo', this.logos);\n      this.headerStickyLogo.onChange(function (value) {\n        _this2._changeAttribute({\n          element: _this2.headerRef.elements.bar[0],\n          attribute: 'data-arts-header-sticky-logo',\n          value: value,\n          callback: _this2._handlers.updateHeader\n        });\n        if (!!_this2.initialized) {\n          _this2.headerLogo.setValue(_this2.headerLogo.getValue());\n        }\n      });\n      this.folders.header.open();\n      this.folders.header.show();\n    }\n  }, {\n    key: \"_addMenuControls\",\n    value: function _addMenuControls() {\n      var _this3 = this;\n      this.folders.menu = this.instance.addFolder('Overlay Menu');\n\n      // Background\n      this.headerMenuOverlayBackground = this.folders.menu.add(this.controls.menu, 'Background', this.backgrounds);\n      this.headerMenuOverlayBackground.onChange(function (value) {\n        _this3._changeBackgroundClass({\n          element: _this3.headerRef.elements.overlayContainer[0],\n          value: value\n        });\n        if (!!_this3.initialized) {\n          var theme = _this3._getSyncedPresetValue(value, 'background', 'theme');\n          _this3.headerMenuOverlayColorTheme.setValue(theme);\n        }\n      });\n\n      // Color Theme\n      this.headerMenuOverlayColorTheme = this.folders.menu.add(this.controls.menu, 'Color Theme', this.themes);\n      this.headerMenuOverlayColorTheme.onChange(function (value) {\n        _this3._changeAttribute({\n          element: _this3.headerRef.elements.bar[0],\n          attribute: 'data-arts-header-overlay-color-theme',\n          value: value\n        });\n        document.removeEventListener('arts/header/overlay/afterClose', _this3._handlers.updateHeader, {\n          once: true\n        });\n        if (!!_this3.headerRef.instance.opened) {\n          _this3._changeAttribute({\n            element: _this3.headerRef.elements.bar[0],\n            attribute: 'data-arts-color-theme',\n            value: value\n          });\n          document.addEventListener('arts/header/overlay/afterClose', _this3._handlers.updateHeader, {\n            once: true\n          });\n        } else {\n          _this3._handlers.updateHeader();\n        }\n      });\n      document.addEventListener('arts/header/overlay/beforeOpen', function () {\n        _this3.folders.menu.show();\n        if (_this3.folders.header) {\n          _this3.folders.header.hide();\n        }\n        if (_this3.folders.main) {\n          _this3.folders.main.hide();\n        }\n      });\n      document.addEventListener('arts/header/overlay/beforeClose', function () {\n        _this3.folders.menu.hide();\n        if (_this3.folders.header) {\n          _this3.folders.header.show();\n        }\n        if (_this3.folders.main) {\n          _this3.folders.main.show();\n        }\n      });\n      this.folders.menu.hide();\n      this.folders.menu.open();\n    }\n  }, {\n    key: \"_reloadHeader\",\n    value: function _reloadHeader() {\n      var _this4 = this;\n      app.componentsManager.instances.persistent.forEach(function (instance, index) {\n        if (instance.name === 'Header') {\n          app.componentsManager.instances.persistent[index] = null;\n          delete app.componentsManager.instances.persistent[index];\n        }\n      });\n      app.loadHeader().then(function () {\n        // Refresh header reference\n        _toConsumableArray(app.componentsManager.instances.disposable).filter(function (component) {\n          return component && 'headerRef' in component;\n        }).forEach(function (component) {\n          return component.headerRef = app.componentsManager.getComponentByName('Header');\n        });\n        _this4.headerRef = app.componentsManager.getComponentByName('Header');\n        _this4.headerRef.elements.overlayContainer[0] = _this4.headerRef.element.querySelector('.header__wrapper-overlay-menu');\n      });\n    }\n  }, {\n    key: \"_reloadScroll\",\n    value: function _reloadScroll() {\n      var _this5 = this;\n      if (this.scrollRef) {\n        this.scrollRef.destroy();\n      }\n      app.componentsManager.instances.persistent.forEach(function (instance, index) {\n        if (instance.name === 'Scroll') {\n          app.componentsManager.instances.persistent[index] = null;\n          delete app.componentsManager.instances.persistent[index];\n        }\n      });\n      app.loadScroll(false).then(function () {\n        // Refresh header reference\n        _toConsumableArray(app.componentsManager.instances.disposable).filter(function (component) {\n          return component && 'scrollRef' in component;\n        }).forEach(function (component) {\n          return component.scrollRef = app.componentsManager.getComponentByName('Scroll');\n        });\n        _this5.scrollRef = app.componentsManager.getComponentByName('Scroll');\n      });\n    }\n  }, {\n    key: \"_reloadCursor\",\n    value: function _reloadCursor() {\n      var _this6 = this;\n      if (this.cursorRef) {\n        this.cursorRef.destroy();\n      }\n      app.componentsManager.instances.persistent.forEach(function (instance, index) {\n        if (instance.name === 'CursorFollower') {\n          app.componentsManager.instances.persistent[index] = null;\n          delete app.componentsManager.instances.persistent[index];\n        }\n      });\n      app.loadCursor().then(function () {\n        // Refresh cursor reference\n        _toConsumableArray(app.componentsManager.instances.disposable).filter(function (component) {\n          return component && 'cursorRef' in component;\n        }).forEach(function (component) {\n          return component.cursorRef = app.componentsManager.getComponentByName('CursorFollower');\n        });\n        _this6.cursorRef = app.componentsManager.getComponentByName('CursorFollower');\n      });\n    }\n  }, {\n    key: \"_addMainControls\",\n    value: function _addMainControls() {\n      var _this7 = this;\n      this.folders.main = this.instance.addFolder('Container');\n\n      // Smooth Scrolling\n      this.mainSmoothScrolling = this.folders.main.add(this.controls.main, 'Smooth Scrolling', {\n        'On': true,\n        'Off': false\n      });\n      this.mainSmoothScrolling.onChange(function (value) {\n        if (value === 'true') {\n          app.options.smoothScroll.enabled = true;\n          if (!_this7.scrollRef.instance) {\n            _this7._reloadScroll();\n          }\n        } else {\n          app.options.smoothScroll.enabled = false;\n          _this7.scrollRef.destroy();\n        }\n      });\n\n      // Cursor Follower\n      this.mainCursorFollower = this.folders.main.add(this.controls.main, 'Cursor Follower', {\n        'On': true,\n        'Off': false\n      });\n      this.mainCursorFollower.onChange(function (value) {\n        if (value === 'true') {\n          app.options.cursorFollower.enabled = true;\n          if (_this7.cursorRef && !_this7.cursorRef.instance.enabled) {\n            _this7.cursorRef.init();\n          } else {\n            _this7._reloadCursor();\n          }\n        } else {\n          app.options.cursorFollower.enabled = false;\n          if (_this7.cursorRef && !!_this7.cursorRef.instance.enabled) {\n            _this7.cursorRef.destroy();\n          }\n        }\n      });\n\n      // Background\n      this.mainBackground = this.folders.main.add(this.controls.main, 'Background', this.backgrounds);\n      this.mainBackground.onChange(function (value) {\n        _this7._changeBackgroundClass({\n          element: app.containerEl,\n          value: value\n        });\n        if (!!_this7.initialized) {\n          var theme = _this7._getSyncedPresetValue(value, 'background', 'theme');\n          if (_this7.headerColorTheme) {\n            _this7.headerColorTheme.setValue(theme);\n          }\n          if (_this7.headerStickyBackground) {\n            _this7.headerStickyBackground.setValue(_this7.headerStickyBackground.getValue());\n          }\n          if (_this7.headerMenuOverlayBackground) {\n            _this7.headerMenuOverlayBackground.setValue(_this7.headerMenuOverlayBackground.getValue());\n          }\n          _this7.mainColorTheme.setValue(theme);\n        }\n      });\n\n      // Color Theme\n      this.mainColorTheme = this.folders.main.add(this.controls.main, 'Color Theme', this.themes);\n      this.mainColorTheme.onChange(function (value) {\n        _this7._changeAttribute({\n          element: app.containerEl,\n          attribute: 'data-arts-color-theme',\n          value: value\n        });\n        if (!!_this7.initialized && _this7.cursorRef) {\n          _this7.cursorRef.update();\n        }\n      });\n      this.folders.main.show();\n      this.folders.main.open();\n    }\n  }, {\n    key: \"_initHeaderControls\",\n    value: function _initHeaderControls() {\n      var element = this.headerRef.elements.bar[0],\n        colorTheme = element.getAttribute('data-arts-color-theme'),\n        logo = element.getAttribute('data-arts-header-logo'),\n        stickyLogo = element.getAttribute('data-arts-header-sticky-logo'),\n        stickyBackground = element.getAttribute('data-arts-header-sticky-class'),\n        stickyTheme = element.getAttribute('data-arts-header-sticky-color-theme'),\n        AJAX = app.componentsManager.getComponentByName('AJAX');\n      this.headerColorTheme.setValue(colorTheme);\n      this.headerLogo.setValue(logo);\n      this.headerStickyLogo.setValue(stickyLogo);\n      this.headerStickyBackground.setValue(stickyBackground);\n      this.headerStickyColorTheme.setValue(stickyTheme);\n      if (!AJAX || AJAX && !AJAX.running) {\n        for (var _i3 = 0, _Object$entries3 = Object.entries(this.headerLayouts); _i3 < _Object$entries3.length; _i3++) {\n          var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n            key = _Object$entries3$_i[0],\n            value = _Object$entries3$_i[1];\n          if (value.className && this.headerRef.element.classList.contains(value.className)) {\n            this.headerLayout.setValue(value.url);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_initMenuControls\",\n    value: function _initMenuControls() {\n      var overlayColorTheme = this.headerRef.element.getAttribute('data-arts-header-overlay-color-theme');\n      if (!overlayColorTheme) {\n        overlayColorTheme = this.headerRef.elements.overlayContainer[0].getAttribute('data-arts-color-theme');\n      }\n      this.headerMenuOverlayColorTheme.setValue(overlayColorTheme);\n      for (var _i4 = 0, _Object$entries4 = Object.entries(this.backgrounds); _i4 < _Object$entries4.length; _i4++) {\n        var _Object$entries4$_i = _slicedToArray(_Object$entries4[_i4], 2),\n          key = _Object$entries4$_i[0],\n          value = _Object$entries4$_i[1];\n        if (this.headerRef.elements.overlayContainer[0].classList.contains(value)) {\n          this.headerMenuOverlayBackground.setValue(value);\n        }\n      }\n    }\n  }, {\n    key: \"_initMainControls\",\n    value: function _initMainControls() {\n      var mainColorTheme = app.containerEl.getAttribute('data-arts-color-theme');\n      this.mainColorTheme.setValue(mainColorTheme);\n      for (var _i5 = 0, _Object$entries5 = Object.entries(this.backgrounds); _i5 < _Object$entries5.length; _i5++) {\n        var _Object$entries5$_i = _slicedToArray(_Object$entries5[_i5], 2),\n          key = _Object$entries5$_i[0],\n          value = _Object$entries5$_i[1];\n        if (app.containerEl.classList.contains(value)) {\n          this.mainBackground.setValue(value);\n        }\n      }\n    }\n  }, {\n    key: \"_changeAttribute\",\n    value: function _changeAttribute() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        element = _ref2.element,\n        attribute = _ref2.attribute,\n        value = _ref2.value,\n        callback = _ref2.callback;\n      if (element instanceof HTMLElement && typeof attribute === 'string') {\n        if (value && value !== 'null') {\n          element.setAttribute(attribute, value);\n        } else {\n          element.removeAttribute(attribute);\n        }\n        if (typeof callback === 'function') {\n          callback();\n        }\n      }\n    }\n  }, {\n    key: \"_changeBackgroundClass\",\n    value: function _changeBackgroundClass() {\n      var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        element = _ref3.element,\n        value = _ref3.value,\n        callback = _ref3.callback;\n      if (element instanceof HTMLElement) {\n        for (var _i6 = 0, _Object$entries6 = Object.entries(this.backgrounds); _i6 < _Object$entries6.length; _i6++) {\n          var _Object$entries6$_i = _slicedToArray(_Object$entries6[_i6], 2),\n            key = _Object$entries6$_i[0],\n            val = _Object$entries6$_i[1];\n          element.classList.remove(val);\n        }\n        element.classList.add(value);\n        if (typeof callback === 'function') {\n          callback();\n        }\n      }\n    }\n  }, {\n    key: \"_onUpdateHeader\",\n    value: function _onUpdateHeader() {\n      if (!this.initialized) {\n        return;\n      }\n      for (var _i7 = 0, _Object$entries7 = Object.entries(this.presets); _i7 < _Object$entries7.length; _i7++) {\n        var _Object$entries7$_i = _slicedToArray(_Object$entries7[_i7], 2),\n          key = _Object$entries7$_i[0],\n          value = _Object$entries7$_i[1];\n        this.headerRef.elements.bar[0].classList.remove(value['background']);\n      }\n      var savedOpened = this.headerRef.instance.overlay.opened;\n      this.headerRef.instance.overlay.opened = false;\n      this.headerRef.reload();\n      this.headerRef.instance.overlay.opened = savedOpened;\n    }\n  }, {\n    key: \"_getSyncedPresetValue\",\n    value: function _getSyncedPresetValue(compairingValue) {\n      var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'background';\n      var returnKey = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'theme';\n      for (var _i8 = 0, _Object$entries8 = Object.entries(this.presets); _i8 < _Object$entries8.length; _i8++) {\n        var _Object$entries8$_i = _slicedToArray(_Object$entries8[_i8], 2),\n          id = _Object$entries8$_i[0],\n          value = _Object$entries8$_i[1];\n        if (compairingValue === value[key]) {\n          return value[returnKey];\n        }\n      }\n    }\n  }, {\n    key: \"_onTransitionInit\",\n    value: function _onTransitionInit() {\n      this.initialized = false;\n      if (this.headerRef) {\n        this._initHeaderControls();\n        if (this.headerRef.elements.overlayContainer[0]) {\n          this._initMenuControls();\n        }\n      }\n      this._initMainControls();\n      this.initialized = true;\n    }\n  }, {\n    key: \"_updateNodesAttributes\",\n    value: function _updateNodesAttributes() {\n      var _this8 = this;\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n          currentDOM: document,\n          newDOM: undefined,\n          nodes: ['#page-header', '#page-header .js-header__bar', '#page-header .menu-classic li', '#page-header .menu-overlay li', '#page-header .header__wrapper-overlay-menu']\n        },\n        currentDOM = _ref4.currentDOM,\n        newDOM = _ref4.newDOM,\n        _ref4$nodes = _ref4.nodes,\n        nodes = _ref4$nodes === void 0 ? ['#page-header', '#page-header .js-header__bar', '#page-header .menu-classic li', '#page-header .menu-overlay li', '#page-header .header__wrapper-overlay-menu'] : _ref4$nodes;\n      var nodesToUpdate = nodes.map(function (selector) {\n        return selector.trim();\n      }).filter(function (selector) {\n        return selector.length > 0;\n      });\n      nodesToUpdate.forEach(function (selector) {\n        var currentItems = _toConsumableArray(currentDOM.querySelectorAll(selector)),\n          nextItems = _toConsumableArray(newDOM.querySelectorAll(selector));\n\n        // different type of menu (overlay) found on the next page\n        if (selector === '#page-header .menu-classic li' && !nextItems.length) {\n          nextItems = _toConsumableArray(newDOM.querySelectorAll('#page-header .menu-overlay li'));\n        }\n\n        // different type of menu (classic) found on the next page\n        if (selector === '#page-header .menu-overlay li' && !nextItems.length) {\n          nextItems = _toConsumableArray(newDOM.querySelectorAll('#page-header .menu-classic li'));\n        }\n        if (nextItems.length) {\n          _this8._syncAttributes(currentItems, nextItems);\n        }\n      });\n    }\n  }, {\n    key: \"_syncAttributes\",\n    value: function _syncAttributes(targetElements, sourceElements) {\n      if (targetElements.length > 0 && sourceElements.length > 0 && targetElements.length === sourceElements.length) {\n        targetElements.forEach(function (element, index) {\n          var targetAttributes = _toConsumableArray(element.attributes).filter(function (attr) {\n              return attr.name !== 'style';\n            }),\n            sourceAttributes = _toConsumableArray(sourceElements[index].attributes).filter(function (attr) {\n              return attr.name !== 'style';\n            });\n          if (sourceAttributes.length) {\n            // remove attributes that are not present in source element\n            targetAttributes.forEach(function (attr) {\n              if (!(attr.nodeName in sourceElements[index].attributes)) {\n                element.removeAttribute(attr.nodeName);\n              }\n            });\n\n            // sync attributes\n            sourceAttributes.forEach(function (attr) {\n              if (attr.nodeName in sourceElements[index].attributes) {\n                element.setAttribute(attr.nodeName, sourceElements[index].attributes[attr.nodeName].nodeValue);\n              } else {\n                element.removeAttribute(attr.nodeName);\n              }\n            });\n          } else {\n            // source element doesn't have any attributes present\n            // ... so remove all attributes from the target element\n            targetAttributes.forEach(function (attr) {\n              return element.removeAttribute(attr.name);\n            });\n          }\n        });\n      }\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/Gui.js\n");

/***/ }),

/***/ "./src/js/components/Header.js":
/*!*************************************!*\
  !*** ./src/js/components/Header.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Header)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Header = /*#__PURE__*/function (_BaseComponent) {\n  function Header(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element,\n      options = _ref.options;\n    _classCallCheck(this, Header);\n    _this = _callSuper(this, Header, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // External options from app.options.header\n      defaults: options,\n      // Component inner elements\n      innerElements: {\n        bar: '.js-header__bar',\n        overlayContainer: '.js-header__overlay-container',\n        overlayContainerInner: '.js-header__overlay-container-inner',\n        overlaySwitcher: '.js-header__overlay-switcher',\n        topLevelMenu: '.menu-overlay',\n        allSubMenus: '.menu-overlay .sub-menu',\n        submenuBackButton: '.js-header__overlay-submenu-back',\n        submenuLabelCurrent: '.js-header__overlay-label-opened-current',\n        submenuLabelNext: '.js-header__overlay-label-opened-next',\n        widgets: '.js-header__overlay-widget'\n      }\n    }]);\n    _this._handlers = {\n      mqChange: _this._onMQChange.bind(_this),\n      transitionStart: _this._onTransitionStart.bind(_this),\n      transitionEnd: _this._onTransitionEnd.bind(_this),\n      transitionInitBefore: _this._onTransitionInitBefore.bind(_this),\n      transitionInitAfter: _this._onTransitionInitAfter.bind(_this)\n    };\n    _this.lockedSticky = false;\n    _this.isOverlayOpening = false;\n    _this.mq = window.matchMedia(_this.options.matchMediaAutoCloseOverlay);\n    _this.setup();\n    return _this;\n  }\n  _inherits(Header, _BaseComponent);\n  return _createClass(Header, [{\n    key: \"init\",\n    value: function init() {\n      this.menuOverlayRef = this._getInnerComponentByName('MenuOverlay');\n      this.menuClassicRef = this._getInnerComponentByName('MenuClassic');\n      this._createHeader();\n      this._attachEvents();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      if (this.instance) {\n        this.instance.destroy();\n        this.instance = undefined;\n      }\n      this.lockedSticky = false;\n      this.isOverlayOpening = false;\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.instance) {\n        this.instance.destroy();\n        this.instance = undefined;\n        this._updateOptions();\n        this._createHeader();\n      }\n    }\n  }, {\n    key: \"toggleHidden\",\n    value: function toggleHidden() {\n      var hidden = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.element.classList.toggle('header_hidden-not-opened', hidden);\n    }\n  }, {\n    key: \"lockSticky\",\n    value: function lockSticky() {\n      var lock = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!this.instance || !this.instance.sticky || !this.elements.bar[0]) {\n        return;\n      }\n      this.lockedSticky = lock;\n      if (!!lock) {\n        var stickyClass = this.element.getAttribute('data-arts-header-sticky-class');\n        if (stickyClass) {\n          this.elements.bar[0].classList.remove(stickyClass);\n        }\n        this.instance.sticky.disable();\n      } else {\n        this.instance.sticky.enable();\n        this.instance.update();\n      }\n      this.instance.sticky.locked = lock;\n    }\n  }, {\n    key: \"_getStickyOptions\",\n    value: function _getStickyOptions() {\n      return app.utilities.isEnabledOption(this.options.sticky) ? _objectSpread({\n        containerSelector: this.innerSelectors.bar\n      }, this.options.sticky) : false;\n    }\n  }, {\n    key: \"_createHeader\",\n    value: function _createHeader() {\n      this.instance = new ArtsHeader(this.element, {\n        init: true,\n        matchMedia: false,\n        sticky: this._getStickyOptions(),\n        overlay: {\n          containerSelector: this.innerSelectors.overlayContainer,\n          containerSelectorStickyFallback: this.innerSelectors.bar,\n          toggleAttributes: {\n            'data-arts-color-theme': 'data-arts-header-overlay-color-theme'\n          },\n          toggleOpenedClass: 'opened',\n          toggleAnimatingClass: 'animating',\n          onOpen: this._onOverlayOpen.bind(this),\n          onClose: this._onOverlayClose.bind(this)\n        },\n        switcher: {\n          elementSelector: this.innerSelectors.overlaySwitcher,\n          toggleActiveClass: 'header__burger_opened'\n        },\n        menu: {\n          menuSelector: this.innerSelectors.topLevelMenu,\n          submenuBackButtonSelector: this.innerSelectors.submenuBackButton,\n          toggleCurrentMenuClass: 'current',\n          toggleSubmenuOpenedClass: 'opened-submenu',\n          toggleOpeningClass: 'animating',\n          beforeOpen: this._onMenuBeforeOpen.bind(this),\n          onOpen: this._onMenuOpen.bind(this),\n          onClose: this._onMenuClose.bind(this)\n        },\n        anchors: {\n          autoCloseOverlay: true,\n          onClick: this._onHeaderAnchorsClick.bind(this)\n        },\n        heightObserver: {\n          containerSelector: this.innerSelectors.bar,\n          updateCSSVar: '--header-height',\n          observe: this.options.observeHeight\n        }\n      });\n    }\n  }, {\n    key: \"_onOverlayOpen\",\n    value: function _onOverlayOpen() {\n      var _this2 = this;\n      var tl = gsap.timeline({\n        onStart: function onStart() {\n          if (_this2.menuOverlayRef) {\n            _this2.menuOverlayRef.currentSubmenuRef = null;\n            _this2.menuOverlayRef.currentSubmenuParentRef = null;\n          }\n          _this2.isOverlayOpening = true;\n          app.utilities.update();\n        },\n        onComplete: function onComplete() {\n          _this2.isOverlayOpening = false;\n        }\n      }).set(this.elements.allSubMenus, {\n        visibility: 'hidden'\n      }).set(this.elements.overlayContainer, {\n        autoAlpha: 1,\n        zIndex: 400\n      }).animateCurtain(this.elements.overlayContainer, {\n        animateFrom: 'top',\n        duration: 1.2,\n        onStart: function onStart() {\n          app.utilities.dispatchEvent('arts/header/overlay/beforeOpen');\n        },\n        onComplete: function onComplete() {\n          app.utilities.dispatchEvent('arts/header/overlay/afterOpen');\n        }\n      }).to(app.contentEl, {\n        autoAlpha: 0,\n        onStart: function onStart() {\n          app.utilities.dispatchEvent('arts/container/visibility', {\n            detail: {\n              container: app.containerEl,\n              visible: false\n            }\n          });\n          app.utilities.scrollLock(true);\n        },\n        duration: 0.3\n      }, '<50%').fromTo(this.elements.widgets, {\n        autoAlpha: 0,\n        y: '100%',\n        immediateRender: true\n      }, {\n        autoAlpha: 1,\n        y: '0%',\n        duration: 1.2,\n        ease: 'power4.out',\n        stagger: {\n          amount: 0.1,\n          from: 'start',\n          axis: 'y'\n        }\n      }, '<25%');\n      tl.timeScale(app.utilities.getTimeScaleByKey('overlayMenuOpen'));\n      return tl;\n    }\n  }, {\n    key: \"_onOverlayClose\",\n    value: function _onOverlayClose() {\n      var _this3 = this;\n      var tl = gsap.timeline({\n        onComplete: function onComplete() {\n          if (_this3.menuOverlayRef) {\n            _this3.menuOverlayRef.disableScroll();\n            _this3.menuOverlayRef.restoreSubmenuOriginalPlacement();\n          }\n        }\n      }).to(this.elements.widgets, {\n        autoAlpha: 0,\n        y: '100%',\n        duration: 1.2,\n        ease: 'power4.out',\n        stagger: {\n          amount: 0.1,\n          from: 'end',\n          axis: 'y'\n        }\n      }).hideCurtain(this.elements.overlayContainer, {\n        animateTo: 'top',\n        duration: 1.2,\n        clearProps: 'all',\n        onStart: function onStart() {\n          app.utilities.dispatchEvent('arts/header/overlay/beforeClose');\n          app.utilities.scrollLock(false);\n        },\n        onComplete: function onComplete() {\n          app.utilities.dispatchEvent('arts/header/overlay/afterClose');\n        }\n      }, '<').to(app.contentEl, {\n        autoAlpha: 1,\n        duration: 0.3,\n        onComplete: function onComplete() {\n          gsap.set(app.contentEl, {\n            clearProps: 'opacity,visibility'\n          });\n          app.utilities.dispatchEvent('arts/container/visibility', {\n            detail: {\n              container: app.containerEl,\n              visible: true\n            }\n          });\n        }\n      }, '<');\n      tl.timeScale(app.utilities.getTimeScaleByKey('overlayMenuClose'));\n      return tl;\n    }\n  }, {\n    key: \"_onMenuBeforeOpen\",\n    value: function _onMenuBeforeOpen() {\n      this._scrollContainerInnerTop({\n        duration: 0\n      });\n    }\n  }, {\n    key: \"_scrollContainerInnerTop\",\n    value: function _scrollContainerInnerTop() {\n      var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref2$target = _ref2.target,\n        target = _ref2$target === void 0 ? 0 : _ref2$target,\n        _ref2$duration = _ref2.duration,\n        duration = _ref2$duration === void 0 ? 0.5 : _ref2$duration,\n        _ref2$container = _ref2.container,\n        container = _ref2$container === void 0 ? this.elements.overlayContainerInner[0] : _ref2$container;\n      if (this.elements.overlayContainerInner[0] && this.elements.overlayContainerInner[0].scrollTop > 0) {\n        return app.utilities.scrollTo({\n          target: target,\n          duration: duration,\n          container: container\n        });\n      }\n    }\n  }, {\n    key: \"_onMenuOpen\",\n    value: function _onMenuOpen(currentMenu, previousMenu) {\n      var _this4 = this;\n      if (!currentMenu) {\n        return;\n      }\n      var isFirstOpenTopLevelMenu = currentMenu === previousMenu,\n        speed = app.utilities.getTimeScaleByKey('overlayMenuOpen'),\n        currentMenuLabel = currentMenu.getAttribute('aria-label'),\n        isTopLevel = this.instance.currentMenuIsTopLevel,\n        menuItems = _toConsumableArray(currentMenu.querySelectorAll(':scope > li > a')),\n        tl = gsap.timeline({\n          onStart: function onStart() {\n            if (_this4.menuOverlayRef && _this4.menuOverlayRef.infiniteList && _this4.menuOverlayRef.infiniteList.enabled) {\n              if (isTopLevel) {\n                _this4.menuOverlayRef.infiniteList.update();\n                _this4.menuOverlayRef.enableScroll();\n              } else {\n                _this4.menuOverlayRef.disableScroll();\n              }\n            }\n            if (currentMenuLabel) {\n              _this4._setSubmenuLabelNext(currentMenuLabel);\n            }\n          }\n        });\n\n      // Prepare menu items\n      menuItems.forEach(function (el, index) {\n        tl.hideLines(el, {\n          duration: 0,\n          y: '-103%'\n        }, 'start');\n      });\n      tl.set(currentMenu, {\n        visibility: 'visible',\n        onComplete: function onComplete() {\n          _this4._scrollContainerInnerTop();\n        }\n      });\n      if (!isTopLevel) {\n        menuItems.reverse();\n      }\n\n      // Animate menu items\n      menuItems.forEach(function (el, index) {\n        var offset = '<';\n        if (index === 0 && isFirstOpenTopLevelMenu) {\n          offset = 0.6;\n        }\n        tl.animateLines(el, {\n          duration: 1.2 / speed,\n          ease: 'power4.out',\n          onStart: function onStart() {\n            if (index === 0 && _this4.menuOverlayRef && _this4.isOverlayOpening) {\n              _this4.menuOverlayRef.scrollListToCurrentTopLevelItem();\n            }\n          }\n        }, offset);\n      });\n      tl.fromTo(this.elements.submenuLabelCurrent, {\n        y: 0,\n        autoAlpha: 1\n      }, {\n        y: -30,\n        autoAlpha: 0,\n        duration: 0.3,\n        onComplete: function onComplete() {\n          if (isTopLevel) {\n            _this4._setSubmenuLabelCurrent();\n          } else {\n            _this4._setSubmenuLabelCurrent(currentMenuLabel);\n          }\n        }\n      }, '<').fromTo(this.elements.submenuLabelNext, {\n        y: 30,\n        autoAlpha: 0\n      }, {\n        y: 0,\n        autoAlpha: 1,\n        duration: 0.3,\n        onStart: function onStart() {\n          if (currentMenuLabel) {\n            _this4._setSubmenuLabelNext(currentMenuLabel);\n          }\n        }\n      }, '<');\n      tl.timeScale(speed);\n      return tl;\n    }\n  }, {\n    key: \"_setSubmenuLabelCurrent\",\n    value: function _setSubmenuLabelCurrent() {\n      var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      if (this.elements.submenuLabelCurrent[0]) {\n        this.elements.submenuLabelCurrent[0].innerHTML = text;\n      }\n    }\n  }, {\n    key: \"_setSubmenuLabelNext\",\n    value: function _setSubmenuLabelNext() {\n      var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n      if (this.elements.submenuLabelNext[0]) {\n        this.elements.submenuLabelNext[0].innerHTML = text;\n      }\n    }\n  }, {\n    key: \"_onMenuClose\",\n    value: function _onMenuClose(currentMenu, previousMenu) {\n      var _this5 = this;\n      if (!previousMenu) {\n        return;\n      }\n      var speed = app.utilities.getTimeScaleByKey('overlayMenuClose'),\n        tl = gsap.timeline({\n          onStart: function onStart() {\n            if (previousMenu === _this5.elements.topLevelMenu[0] && currentMenu !== _this5.elements.topLevelMenu[0]) {\n              if (_this5.menuOverlayRef) {\n                _this5.menuOverlayRef.moveSubmenuToHolder(currentMenu);\n              }\n            }\n          },\n          onComplete: function onComplete() {\n            if (_this5.instance.opened && isTopLevel) {\n              if (_this5.menuOverlayRef) {\n                _this5.menuOverlayRef.restoreSubmenuOriginalPlacement();\n              }\n            }\n          }\n        }),\n        isTopLevel = this.instance.currentMenuIsTopLevel,\n        menuItems = _toConsumableArray(previousMenu.querySelectorAll(':scope > li > a'));\n      menuItems.forEach(function (el, index) {\n        tl.hideLines(el, {\n          duration: 1.2,\n          ease: 'power4.out'\n        }, 'start');\n      });\n      tl.set(previousMenu, {\n        clearProps: 'visibility,height'\n      });\n      tl.timeScale(speed);\n      return tl;\n    }\n  }, {\n    key: \"_onHeaderAnchorsClick\",\n    value: function _onHeaderAnchorsClick(anchorTarget) {\n      app.utilities.scrollTo({\n        target: anchorTarget\n      });\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      if (typeof this.mq.addEventListener === 'function') {\n        this.mq.addEventListener('change', this._handlers.mqChange);\n      } else {\n        this.mq.addListener(this._handlers.mqChange);\n      }\n      document.addEventListener('arts/barba/transition/start', this._handlers.transitionStart);\n      document.addEventListener('arts/barba/transition/end', this._handlers.transitionEnd);\n      document.addEventListener('arts/barba/transition/init/before', this._handlers.transitionInitBefore);\n      document.addEventListener('arts/barba/transition/init/after', this._handlers.transitionInitAfter);\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      if (typeof this.mq.removeEventListener === 'function') {\n        this.mq.removeEventListener('change', this._handlers.mqChange);\n      } else {\n        this.mq.removeListener(this._handlers.mqChange);\n      }\n      document.removeEventListener('arts/barba/transition/start', this._handlers.transitionStart);\n      document.removeEventListener('arts/barba/transition/end', this._handlers.transitionEnd);\n      document.removeEventListener('arts/barba/transition/init/before', this._handlers.transitionInitBefore);\n      document.removeEventListener('arts/barba/transition/init/after', this._handlers.transitionInitAfter);\n    }\n  }, {\n    key: \"_onMQChange\",\n    value: function _onMQChange(event) {\n      if (event.matches && this.menuOverlayRef && this.menuClassicRef && this.instance.opened) {\n        this.instance.toggleOverlay(false, true);\n      }\n    }\n  }, {\n    key: \"_onTransitionStart\",\n    value: function _onTransitionStart() {\n      if (this.instance && this.instance.sticky && this.elements.bar[0]) {\n        var stickyClass = this.element.getAttribute('data-arts-header-sticky-class');\n        if (stickyClass) {\n          this.elements.bar[0].classList.remove(stickyClass);\n        }\n        this.instance.sticky.disable();\n      }\n    }\n  }, {\n    key: \"_onTransitionEnd\",\n    value: function _onTransitionEnd() {\n      if (this.instance) {\n        this.instance.update();\n      }\n    }\n  }, {\n    key: \"_onTransitionInitBefore\",\n    value: function _onTransitionInitBefore() {\n      if (this.menuOverlayRef && this.menuOverlayRef.infiniteList && this.menuOverlayRef.infiniteList.enabled) {\n        this.menuOverlayRef.infiniteList.controller.lanes[0].items.destroy();\n      }\n    }\n  }, {\n    key: \"_onTransitionInitAfter\",\n    value: function _onTransitionInitAfter() {\n      if (this.menuOverlayRef && this.menuOverlayRef.infiniteList && this.menuOverlayRef.infiniteList.enabled) {\n        this.menuOverlayRef.infiniteList.update();\n      }\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LENBQUMySCxZQUFZLENBQUNDLE9BQU8sRUFBRTtRQUN4RyxJQUFJLENBQUM1SCxjQUFjLENBQUMySCxZQUFZLENBQUNsSCxNQUFNLENBQUMsQ0FBQztNQUMxQztJQUNEO0VBQUM7QUFBQSxFQWpnQmtDZ0osYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL3RocmVlLXNoYWRlci1lbnYwMS8uL3NyYy9qcy9jb21wb25lbnRzL0hlYWRlci5qcz82YzFkIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIEhlYWRlciBleHRlbmRzIEJhc2VDb21wb25lbnQge1xuXHRjb25zdHJ1Y3Rvcih7XG5cdFx0bmFtZSxcblx0XHRsb2FkSW5uZXJDb21wb25lbnRzLFxuXHRcdHBhcmVudCxcblx0XHRlbGVtZW50LFxuXHRcdG9wdGlvbnNcblx0fSkge1xuXHRcdHN1cGVyKHtcblx0XHRcdG5hbWUsXG5cdFx0XHRsb2FkSW5uZXJDb21wb25lbnRzLFxuXHRcdFx0cGFyZW50LFxuXHRcdFx0ZWxlbWVudCxcblx0XHRcdC8vIEV4dGVybmFsIG9wdGlvbnMgZnJvbSBhcHAub3B0aW9ucy5oZWFkZXJcblx0XHRcdGRlZmF1bHRzOiBvcHRpb25zLFxuXHRcdFx0Ly8gQ29tcG9uZW50IGlubmVyIGVsZW1lbnRzXG5cdFx0XHRpbm5lckVsZW1lbnRzOiB7XG5cdFx0XHRcdGJhcjogJy5qcy1oZWFkZXJfX2JhcicsXG5cdFx0XHRcdG92ZXJsYXlDb250YWluZXI6ICcuanMtaGVhZGVyX19vdmVybGF5LWNvbnRhaW5lcicsXG5cdFx0XHRcdG92ZXJsYXlDb250YWluZXJJbm5lcjogJy5qcy1oZWFkZXJfX292ZXJsYXktY29udGFpbmVyLWlubmVyJyxcblx0XHRcdFx0b3ZlcmxheVN3aXRjaGVyOiAnLmpzLWhlYWRlcl9fb3ZlcmxheS1zd2l0Y2hlcicsXG5cdFx0XHRcdHRvcExldmVsTWVudTogJy5tZW51LW92ZXJsYXknLFxuXHRcdFx0XHRhbGxTdWJNZW51czogJy5tZW51LW92ZXJsYXkgLnN1Yi1tZW51Jyxcblx0XHRcdFx0c3VibWVudUJhY2tCdXR0b246ICcuanMtaGVhZGVyX19vdmVybGF5LXN1Ym1lbnUtYmFjaycsXG5cdFx0XHRcdHN1Ym1lbnVMYWJlbEN1cnJlbnQ6ICcuanMtaGVhZGVyX19vdmVybGF5LWxhYmVsLW9wZW5lZC1jdXJyZW50Jyxcblx0XHRcdFx0c3VibWVudUxhYmVsTmV4dDogJy5qcy1oZWFkZXJfX292ZXJsYXktbGFiZWwtb3BlbmVkLW5leHQnLFxuXHRcdFx0XHR3aWRnZXRzOiAnLmpzLWhlYWRlcl9fb3ZlcmxheS13aWRnZXQnXG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHR0aGlzLl9oYW5kbGVycyA9IHtcblx0XHRcdG1xQ2hhbmdlOiB0aGlzLl9vbk1RQ2hhbmdlLmJpbmQodGhpcyksXG5cdFx0XHR0cmFuc2l0aW9uU3RhcnQ6IHRoaXMuX29uVHJhbnNpdGlvblN0YXJ0LmJpbmQodGhpcyksXG5cdFx0XHR0cmFuc2l0aW9uRW5kOiB0aGlzLl9vblRyYW5zaXRpb25FbmQuYmluZCh0aGlzKSxcblx0XHRcdHRyYW5zaXRpb25Jbml0QmVmb3JlOiB0aGlzLl9vblRyYW5zaXRpb25Jbml0QmVmb3JlLmJpbmQodGhpcyksXG5cdFx0XHR0cmFuc2l0aW9uSW5pdEFmdGVyOiB0aGlzLl9vblRyYW5zaXRpb25Jbml0QWZ0ZXIuYmluZCh0aGlzKSxcblx0XHR9O1xuXG5cdFx0dGhpcy5sb2NrZWRTdGlja3kgPSBmYWxzZTtcblx0XHR0aGlzLmlzT3ZlcmxheU9wZW5pbmcgPSBmYWxzZTtcblx0XHR0aGlzLm1xID0gd2luZG93Lm1hdGNoTWVkaWEodGhpcy5vcHRpb25zLm1hdGNoTWVkaWFBdXRvQ2xvc2VPdmVybGF5KTtcblxuXHRcdHRoaXMuc2V0dXAoKTtcblx0fVxuXG5cdGluaXQoKSB7XG5cdFx0dGhpcy5tZW51T3ZlcmxheVJlZiA9IHRoaXMuX2dldElubmVyQ29tcG9uZW50QnlOYW1lKCdNZW51T3ZlcmxheScpO1xuXHRcdHRoaXMubWVudUNsYXNzaWNSZWYgPSB0aGlzLl9nZXRJbm5lckNvbXBvbmVudEJ5TmFtZSgnTWVudUNsYXNzaWMnKTtcblxuXHRcdHRoaXMuX2NyZWF0ZUhlYWRlcigpO1xuXHRcdHRoaXMuX2F0dGFjaEV2ZW50cygpO1xuXHR9XG5cblx0ZGVzdHJveSgpIHtcblx0XHR0aGlzLl9kZXRhY2hFdmVudHMoKTtcblxuXHRcdGlmICh0aGlzLmluc3RhbmNlKSB7XG5cdFx0XHR0aGlzLmluc3RhbmNlLmRlc3Ryb3koKTtcblx0XHRcdHRoaXMuaW5zdGFuY2UgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXG5cdFx0dGhpcy5sb2NrZWRTdGlja3kgPSBmYWxzZTtcblx0XHR0aGlzLmlzT3ZlcmxheU9wZW5pbmcgPSBmYWxzZTtcblx0fVxuXG5cdHVwZGF0ZSgpIHtcblx0XHRpZiAodGhpcy5pbnN0YW5jZSkge1xuXHRcdFx0dGhpcy5pbnN0YW5jZS5kZXN0cm95KCk7XG5cdFx0XHR0aGlzLmluc3RhbmNlID0gdW5kZWZpbmVkO1xuXG5cdFx0XHR0aGlzLl91cGRhdGVPcHRpb25zKCk7XG5cdFx0XHR0aGlzLl9jcmVhdGVIZWFkZXIoKTtcblx0XHR9XG5cdH1cblxuXHR0b2dnbGVIaWRkZW4oaGlkZGVuID0gZmFsc2UpIHtcblx0XHR0aGlzLmVsZW1lbnQuY2xhc3NMaXN0LnRvZ2dsZSgnaGVhZGVyX2hpZGRlbi1ub3Qtb3BlbmVkJywgaGlkZGVuKTtcblx0fVxuXG5cdGxvY2tTdGlja3kobG9jayA9IGZhbHNlKSB7XG5cdFx0aWYgKCF0aGlzLmluc3RhbmNlIHx8ICF0aGlzLmluc3RhbmNlLnN0aWNreSB8fCAhdGhpcy5lbGVtZW50cy5iYXJbMF0pIHtcblx0XHRcdHJldHVyblxuXHRcdH1cblxuXHRcdHRoaXMubG9ja2VkU3RpY2t5ID0gbG9jaztcblxuXHRcdGlmICghIWxvY2spIHtcblx0XHRcdGNvbnN0IHN0aWNreUNsYXNzID0gdGhpcy5lbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1hcnRzLWhlYWRlci1zdGlja3ktY2xhc3MnKTtcblxuXHRcdFx0aWYgKHN0aWNreUNsYXNzKSB7XG5cdFx0XHRcdHRoaXMuZWxlbWVudHMuYmFyWzBdLmNsYXNzTGlzdC5yZW1vdmUoc3RpY2t5Q2xhc3MpO1xuXHRcdFx0fVxuXG5cdFx0XHR0aGlzLmluc3RhbmNlLnN0aWNreS5kaXNhYmxlKCk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMuaW5zdGFuY2Uuc3RpY2t5LmVuYWJsZSgpO1xuXHRcdFx0dGhpcy5pbnN0YW5jZS51cGRhdGUoKTtcblx0XHR9XG5cblx0XHR0aGlzLmluc3RhbmNlLnN0aWNreS5sb2NrZWQgPSBsb2NrO1xuXHR9XG5cblx0X2dldFN0aWNreU9wdGlvbnMoKSB7XG5cdFx0cmV0dXJuIGFwcC51dGlsaXRpZXMuaXNFbmFibGVkT3B0aW9uKHRoaXMub3B0aW9ucy5zdGlja3kpID8ge1xuXHRcdFx0Y29udGFpbmVyU2VsZWN0b3I6IHRoaXMuaW5uZXJTZWxlY3RvcnMuYmFyLFxuXHRcdFx0Li4udGhpcy5vcHRpb25zLnN0aWNreVxuXHRcdH0gOiBmYWxzZTtcblx0fVxuXG5cdF9jcmVhdGVIZWFkZXIoKSB7XG5cdFx0dGhpcy5pbnN0YW5jZSA9IG5ldyBBcnRzSGVhZGVyKHRoaXMuZWxlbWVudCwge1xuXHRcdFx0aW5pdDogdHJ1ZSxcblx0XHRcdG1hdGNoTWVkaWE6IGZhbHNlLFxuXHRcdFx0c3RpY2t5OiB0aGlzLl9nZXRTdGlja3lPcHRpb25zKCksXG5cdFx0XHRvdmVybGF5OiB7XG5cdFx0XHRcdGNvbnRhaW5lclNlbGVjdG9yOiB0aGlzLmlubmVyU2VsZWN0b3JzLm92ZXJsYXlDb250YWluZXIsXG5cdFx0XHRcdGNvbnRhaW5lclNlbGVjdG9yU3RpY2t5RmFsbGJhY2s6IHRoaXMuaW5uZXJTZWxlY3RvcnMuYmFyLFxuXHRcdFx0XHR0b2dnbGVBdHRyaWJ1dGVzOiB7XG5cdFx0XHRcdFx0J2RhdGEtYXJ0cy1jb2xvci10aGVtZSc6ICdkYXRhLWFydHMtaGVhZGVyLW92ZXJsYXktY29sb3ItdGhlbWUnXG5cdFx0XHRcdH0sXG5cdFx0XHRcdHRvZ2dsZU9wZW5lZENsYXNzOiAnb3BlbmVkJyxcblx0XHRcdFx0dG9nZ2xlQW5pbWF0aW5nQ2xhc3M6ICdhbmltYXRpbmcnLFxuXHRcdFx0XHRvbk9wZW46IHRoaXMuX29uT3ZlcmxheU9wZW4uYmluZCh0aGlzKSxcblx0XHRcdFx0b25DbG9zZTogdGhpcy5fb25PdmVybGF5Q2xvc2UuYmluZCh0aGlzKSxcblx0XHRcdH0sXG5cdFx0XHRzd2l0Y2hlcjoge1xuXHRcdFx0XHRlbGVtZW50U2VsZWN0b3I6IHRoaXMuaW5uZXJTZWxlY3RvcnMub3ZlcmxheVN3aXRjaGVyLFxuXHRcdFx0XHR0b2dnbGVBY3RpdmVDbGFzczogJ2hlYWRlcl9fYnVyZ2VyX29wZW5lZCdcblx0XHRcdH0sXG5cdFx0XHRtZW51OiB7XG5cdFx0XHRcdG1lbnVTZWxlY3RvcjogdGhpcy5pbm5lclNlbGVjdG9ycy50b3BMZXZlbE1lbnUsXG5cdFx0XHRcdHN1Ym1lbnVCYWNrQnV0dG9uU2VsZWN0b3I6IHRoaXMuaW5uZXJTZWxlY3RvcnMuc3VibWVudUJhY2tCdXR0b24sXG5cdFx0XHRcdHRvZ2dsZUN1cnJlbnRNZW51Q2xhc3M6ICdjdXJyZW50Jyxcblx0XHRcdFx0dG9nZ2xlU3VibWVudU9wZW5lZENsYXNzOiAnb3BlbmVkLXN1Ym1lbnUnLFxuXHRcdFx0XHR0b2dnbGVPcGVuaW5nQ2xhc3M6ICdhbmltYXRpbmcnLFxuXHRcdFx0XHRiZWZvcmVPcGVuOiB0aGlzLl9vbk1lbnVCZWZvcmVPcGVuLmJpbmQodGhpcyksXG5cdFx0XHRcdG9uT3BlbjogdGhpcy5fb25NZW51T3Blbi5iaW5kKHRoaXMpLFxuXHRcdFx0XHRvbkNsb3NlOiB0aGlzLl9vbk1lbnVDbG9zZS5iaW5kKHRoaXMpXG5cdFx0XHR9LFxuXHRcdFx0YW5jaG9yczoge1xuXHRcdFx0XHRhdXRvQ2xvc2VPdmVybGF5OiB0cnVlLFxuXHRcdFx0XHRvbkNsaWNrOiB0aGlzLl9vbkhlYWRlckFuY2hvcnNDbGljay5iaW5kKHRoaXMpXG5cdFx0XHR9LFxuXHRcdFx0aGVpZ2h0T2JzZXJ2ZXI6IHtcblx0XHRcdFx0Y29udGFpbmVyU2VsZWN0b3I6IHRoaXMuaW5uZXJTZWxlY3RvcnMuYmFyLFxuXHRcdFx0XHR1cGRhdGVDU1NWYXI6ICctLWhlYWRlci1oZWlnaHQnLFxuXHRcdFx0XHRvYnNlcnZlOiB0aGlzLm9wdGlvbnMub2JzZXJ2ZUhlaWdodFxuXHRcdFx0fVxuXHRcdH0pO1xuXHR9XG5cblx0X29uT3ZlcmxheU9wZW4oKSB7XG5cdFx0Y29uc3QgdGwgPSBnc2FwLnRpbWVsaW5lKHtcblx0XHRcdG9uU3RhcnQ6ICgpID0+IHtcblx0XHRcdFx0aWYgKHRoaXMubWVudU92ZXJsYXlSZWYpIHtcblx0XHRcdFx0XHR0aGlzLm1lbnVPdmVybGF5UmVmLmN1cnJlbnRTdWJtZW51UmVmID0gbnVsbDtcblx0XHRcdFx0XHR0aGlzLm1lbnVPdmVybGF5UmVmLmN1cnJlbnRTdWJtZW51UGFyZW50UmVmID0gbnVsbDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHRoaXMuaXNPdmVybGF5T3BlbmluZyA9IHRydWU7XG5cblx0XHRcdFx0YXBwLnV0aWxpdGllcy51cGRhdGUoKTtcblx0XHRcdH0sXG5cdFx0XHRvbkNvbXBsZXRlOiAoKSA9PiB7XG5cdFx0XHRcdHRoaXMuaXNPdmVybGF5T3BlbmluZyA9IGZhbHNlO1xuXHRcdFx0fVxuXHRcdH0pXG5cdFx0XHQuc2V0KHRoaXMuZWxlbWVudHMuYWxsU3ViTWVudXMsIHtcblx0XHRcdFx0dmlzaWJpbGl0eTogJ2hpZGRlbicsXG5cdFx0XHR9KVxuXHRcdFx0LnNldCh0aGlzLmVsZW1lbnRzLm92ZXJsYXlDb250YWluZXIsIHtcblx0XHRcdFx0YXV0b0FscGhhOiAxLFxuXHRcdFx0XHR6SW5kZXg6IDQwMCxcblx0XHRcdH0pXG5cdFx0XHQuYW5pbWF0ZUN1cnRhaW4odGhpcy5lbGVtZW50cy5vdmVybGF5Q29udGFpbmVyLCB7XG5cdFx0XHRcdGFuaW1hdGVGcm9tOiAndG9wJyxcblx0XHRcdFx0ZHVyYXRpb246IDEuMixcblx0XHRcdFx0b25TdGFydDogKCkgPT4ge1xuXHRcdFx0XHRcdGFwcC51dGlsaXRpZXMuZGlzcGF0Y2hFdmVudCgnYXJ0cy9oZWFkZXIvb3ZlcmxheS9iZWZvcmVPcGVuJyk7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdG9uQ29tcGxldGU6ICgpID0+IHtcblx0XHRcdFx0XHRhcHAudXRpbGl0aWVzLmRpc3BhdGNoRXZlbnQoJ2FydHMvaGVhZGVyL292ZXJsYXkvYWZ0ZXJPcGVuJyk7XG5cdFx0XHRcdH1cblx0XHRcdH0pXG5cdFx0XHQudG8oYXBwLmNvbnRlbnRFbCwge1xuXHRcdFx0XHRhdXRvQWxwaGE6IDAsXG5cdFx0XHRcdG9uU3RhcnQ6ICgpID0+IHtcblx0XHRcdFx0XHRhcHAudXRpbGl0aWVzLmRpc3BhdGNoRXZlbnQoJ2FydHMvY29udGFpbmVyL3Zpc2liaWxpdHknLCB7XG5cdFx0XHRcdFx0XHRkZXRhaWw6IHtcblx0XHRcdFx0XHRcdFx0Y29udGFpbmVyOiBhcHAuY29udGFpbmVyRWwsXG5cdFx0XHRcdFx0XHRcdHZpc2libGU6IGZhbHNlXG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fSk7XG5cdFx0XHRcdFx0YXBwLnV0aWxpdGllcy5zY3JvbGxMb2NrKHRydWUpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRkdXJhdGlvbjogMC4zXG5cdFx0XHR9LCAnPDUwJScpXG5cdFx0XHQuZnJvbVRvKHRoaXMuZWxlbWVudHMud2lkZ2V0cywge1xuXHRcdFx0XHRhdXRvQWxwaGE6IDAsXG5cdFx0XHRcdHk6ICcxMDAlJyxcblx0XHRcdFx0aW1tZWRpYXRlUmVuZGVyOiB0cnVlXG5cdFx0XHR9LCB7XG5cdFx0XHRcdGF1dG9BbHBoYTogMSxcblx0XHRcdFx0eTogJzAlJyxcblx0XHRcdFx0ZHVyYXRpb246IDEuMixcblx0XHRcdFx0ZWFzZTogJ3Bvd2VyNC5vdXQnLFxuXHRcdFx0XHRzdGFnZ2VyOiB7XG5cdFx0XHRcdFx0YW1vdW50OiAwLjEsXG5cdFx0XHRcdFx0ZnJvbTogJ3N0YXJ0Jyxcblx0XHRcdFx0XHRheGlzOiAneSdcblx0XHRcdFx0fVxuXHRcdFx0fSwgJzwyNSUnKTtcblxuXHRcdHRsLnRpbWVTY2FsZShhcHAudXRpbGl0aWVzLmdldFRpbWVTY2FsZUJ5S2V5KCdvdmVybGF5TWVudU9wZW4nKSk7XG5cblx0XHRyZXR1cm4gdGw7XG5cdH1cblxuXHRfb25PdmVybGF5Q2xvc2UoKSB7XG5cdFx0Y29uc3QgdGwgPSBnc2FwLnRpbWVsaW5lKHtcblx0XHRcdG9uQ29tcGxldGU6ICgpID0+IHtcblx0XHRcdFx0aWYgKHRoaXMubWVudU92ZXJsYXlSZWYpIHtcblx0XHRcdFx0XHR0aGlzLm1lbnVPdmVybGF5UmVmLmRpc2FibGVTY3JvbGwoKTtcblx0XHRcdFx0XHR0aGlzLm1lbnVPdmVybGF5UmVmLnJlc3RvcmVTdWJtZW51T3JpZ2luYWxQbGFjZW1lbnQoKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pXG5cdFx0XHQudG8odGhpcy5lbGVtZW50cy53aWRnZXRzLCB7XG5cdFx0XHRcdGF1dG9BbHBoYTogMCxcblx0XHRcdFx0eTogJzEwMCUnLFxuXHRcdFx0XHRkdXJhdGlvbjogMS4yLFxuXHRcdFx0XHRlYXNlOiAncG93ZXI0Lm91dCcsXG5cdFx0XHRcdHN0YWdnZXI6IHtcblx0XHRcdFx0XHRhbW91bnQ6IDAuMSxcblx0XHRcdFx0XHRmcm9tOiAnZW5kJyxcblx0XHRcdFx0XHRheGlzOiAneSdcblx0XHRcdFx0fVxuXHRcdFx0fSlcblx0XHRcdC5oaWRlQ3VydGFpbih0aGlzLmVsZW1lbnRzLm92ZXJsYXlDb250YWluZXIsIHtcblx0XHRcdFx0YW5pbWF0ZVRvOiAndG9wJyxcblx0XHRcdFx0ZHVyYXRpb246IDEuMixcblx0XHRcdFx0Y2xlYXJQcm9wczogJ2FsbCcsXG5cdFx0XHRcdG9uU3RhcnQ6ICgpID0+IHtcblx0XHRcdFx0XHRhcHAudXRpbGl0aWVzLmRpc3BhdGNoRXZlbnQoJ2FydHMvaGVhZGVyL292ZXJsYXkvYmVmb3JlQ2xvc2UnKTtcblx0XHRcdFx0XHRhcHAudXRpbGl0aWVzLnNjcm9sbExvY2soZmFsc2UpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHRvbkNvbXBsZXRlOiAoKSA9PiB7XG5cdFx0XHRcdFx0YXBwLnV0aWxpdGllcy5kaXNwYXRjaEV2ZW50KCdhcnRzL2hlYWRlci9vdmVybGF5L2FmdGVyQ2xvc2UnKTtcblx0XHRcdFx0fVxuXHRcdFx0fSwgJzwnKVxuXHRcdFx0LnRvKGFwcC5jb250ZW50RWwsIHtcblx0XHRcdFx0YXV0b0FscGhhOiAxLFxuXHRcdFx0XHRkdXJhdGlvbjogMC4zLFxuXHRcdFx0XHRvbkNvbXBsZXRlOiAoKSA9PiB7XG5cdFx0XHRcdFx0Z3NhcC5zZXQoYXBwLmNvbnRlbnRFbCwge1xuXHRcdFx0XHRcdFx0Y2xlYXJQcm9wczogJ29wYWNpdHksdmlzaWJpbGl0eSdcblx0XHRcdFx0XHR9KTtcblxuXHRcdFx0XHRcdGFwcC51dGlsaXRpZXMuZGlzcGF0Y2hFdmVudCgnYXJ0cy9jb250YWluZXIvdmlzaWJpbGl0eScsIHtcblx0XHRcdFx0XHRcdGRldGFpbDoge1xuXHRcdFx0XHRcdFx0XHRjb250YWluZXI6IGFwcC5jb250YWluZXJFbCxcblx0XHRcdFx0XHRcdFx0dmlzaWJsZTogdHJ1ZVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH0pO1xuXHRcdFx0XHR9XG5cdFx0XHR9LCAnPCcpO1xuXG5cdFx0dGwudGltZVNjYWxlKGFwcC51dGlsaXRpZXMuZ2V0VGltZVNjYWxlQnlLZXkoJ292ZXJsYXlNZW51Q2xvc2UnKSk7XG5cblx0XHRyZXR1cm4gdGw7XG5cdH1cblxuXHRfb25NZW51QmVmb3JlT3BlbigpIHtcblx0XHR0aGlzLl9zY3JvbGxDb250YWluZXJJbm5lclRvcCh7XG5cdFx0XHRkdXJhdGlvbjogMFxuXHRcdH0pO1xuXHR9XG5cblx0X3Njcm9sbENvbnRhaW5lcklubmVyVG9wKHtcblx0XHR0YXJnZXQgPSAwLFxuXHRcdGR1cmF0aW9uID0gMC41LFxuXHRcdGNvbnRhaW5lciA9IHRoaXMuZWxlbWVudHMub3ZlcmxheUNvbnRhaW5lcklubmVyWzBdXG5cdH0gPSB7fSkge1xuXHRcdGlmICh0aGlzLmVsZW1lbnRzLm92ZXJsYXlDb250YWluZXJJbm5lclswXSAmJiB0aGlzLmVsZW1lbnRzLm92ZXJsYXlDb250YWluZXJJbm5lclswXS5zY3JvbGxUb3AgPiAwKSB7XG5cdFx0XHRyZXR1cm4gYXBwLnV0aWxpdGllcy5zY3JvbGxUbyh7XG5cdFx0XHRcdHRhcmdldCxcblx0XHRcdFx0ZHVyYXRpb24sXG5cdFx0XHRcdGNvbnRhaW5lcixcblx0XHRcdH0pO1xuXHRcdH1cblx0fVxuXG5cdF9vbk1lbnVPcGVuKGN1cnJlbnRNZW51LCBwcmV2aW91c01lbnUpIHtcblx0XHRpZiAoIWN1cnJlbnRNZW51KSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Y29uc3Rcblx0XHRcdGlzRmlyc3RPcGVuVG9wTGV2ZWxNZW51ID0gY3VycmVudE1lbnUgPT09IHByZXZpb3VzTWVudSxcblx0XHRcdHNwZWVkID0gYXBwLnV0aWxpdGllcy5nZXRUaW1lU2NhbGVCeUtleSgnb3ZlcmxheU1lbnVPcGVuJyksXG5cdFx0XHRjdXJyZW50TWVudUxhYmVsID0gY3VycmVudE1lbnUuZ2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJyksXG5cdFx0XHRpc1RvcExldmVsID0gdGhpcy5pbnN0YW5jZS5jdXJyZW50TWVudUlzVG9wTGV2ZWwsXG5cdFx0XHRtZW51SXRlbXMgPSBbLi4uY3VycmVudE1lbnUucXVlcnlTZWxlY3RvckFsbCgnOnNjb3BlID4gbGkgPiBhJyldLFxuXHRcdFx0dGwgPSBnc2FwLnRpbWVsaW5lKHtcblx0XHRcdFx0b25TdGFydDogKCkgPT4ge1xuXHRcdFx0XHRcdGlmICh0aGlzLm1lbnVPdmVybGF5UmVmICYmIHRoaXMubWVudU92ZXJsYXlSZWYuaW5maW5pdGVMaXN0ICYmIHRoaXMubWVudU92ZXJsYXlSZWYuaW5maW5pdGVMaXN0LmVuYWJsZWQpIHtcblx0XHRcdFx0XHRcdGlmIChpc1RvcExldmVsKSB7XG5cdFx0XHRcdFx0XHRcdHRoaXMubWVudU92ZXJsYXlSZWYuaW5maW5pdGVMaXN0LnVwZGF0ZSgpO1xuXHRcdFx0XHRcdFx0XHR0aGlzLm1lbnVPdmVybGF5UmVmLmVuYWJsZVNjcm9sbCgpO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0dGhpcy5tZW51T3ZlcmxheVJlZi5kaXNhYmxlU2Nyb2xsKCk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKGN1cnJlbnRNZW51TGFiZWwpIHtcblx0XHRcdFx0XHRcdHRoaXMuX3NldFN1Ym1lbnVMYWJlbE5leHQoY3VycmVudE1lbnVMYWJlbCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9KTtcblxuXHRcdC8vIFByZXBhcmUgbWVudSBpdGVtc1xuXHRcdG1lbnVJdGVtcy5mb3JFYWNoKChlbCwgaW5kZXgpID0+IHtcblx0XHRcdHRsXG5cdFx0XHRcdC5oaWRlTGluZXMoZWwsIHtcblx0XHRcdFx0XHRkdXJhdGlvbjogMCxcblx0XHRcdFx0XHR5OiAnLTEwMyUnXG5cdFx0XHRcdH0sICdzdGFydCcpO1xuXHRcdH0pO1xuXG5cdFx0dGwuc2V0KGN1cnJlbnRNZW51LCB7XG5cdFx0XHR2aXNpYmlsaXR5OiAndmlzaWJsZScsXG5cdFx0XHRvbkNvbXBsZXRlOiAoKSA9PiB7XG5cdFx0XHRcdHRoaXMuX3Njcm9sbENvbnRhaW5lcklubmVyVG9wKCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRpZiAoIWlzVG9wTGV2ZWwpIHtcblx0XHRcdG1lbnVJdGVtcy5yZXZlcnNlKCk7XG5cdFx0fVxuXG5cdFx0Ly8gQW5pbWF0ZSBtZW51IGl0ZW1zXG5cdFx0bWVudUl0ZW1zLmZvckVhY2goKGVsLCBpbmRleCkgPT4ge1xuXHRcdFx0bGV0IG9mZnNldCA9ICc8JztcblxuXHRcdFx0aWYgKGluZGV4ID09PSAwICYmIGlzRmlyc3RPcGVuVG9wTGV2ZWxNZW51KSB7XG5cdFx0XHRcdG9mZnNldCA9IDAuNjtcblx0XHRcdH1cblxuXHRcdFx0dGwuYW5pbWF0ZUxpbmVzKGVsLCB7XG5cdFx0XHRcdGR1cmF0aW9uOiAxLjIgLyBzcGVlZCxcblx0XHRcdFx0ZWFzZTogJ3Bvd2VyNC5vdXQnLFxuXHRcdFx0XHRvblN0YXJ0OiAoKSA9PiB7XG5cdFx0XHRcdFx0aWYgKGluZGV4ID09PSAwICYmIHRoaXMubWVudU92ZXJsYXlSZWYgJiYgdGhpcy5pc092ZXJsYXlPcGVuaW5nKSB7XG5cdFx0XHRcdFx0XHR0aGlzLm1lbnVPdmVybGF5UmVmLnNjcm9sbExpc3RUb0N1cnJlbnRUb3BMZXZlbEl0ZW0oKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0sIG9mZnNldCk7XG5cdFx0fSk7XG5cblx0XHR0bC5mcm9tVG8odGhpcy5lbGVtZW50cy5zdWJtZW51TGFiZWxDdXJyZW50LCB7XG5cdFx0XHR5OiAwLFxuXHRcdFx0YXV0b0FscGhhOiAxXG5cdFx0fSwge1xuXHRcdFx0eTogLTMwLFxuXHRcdFx0YXV0b0FscGhhOiAwLFxuXHRcdFx0ZHVyYXRpb246IDAuMyxcblx0XHRcdG9uQ29tcGxldGU6ICgpID0+IHtcblx0XHRcdFx0aWYgKGlzVG9wTGV2ZWwpIHtcblx0XHRcdFx0XHR0aGlzLl9zZXRTdWJtZW51TGFiZWxDdXJyZW50KCk7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0dGhpcy5fc2V0U3VibWVudUxhYmVsQ3VycmVudChjdXJyZW50TWVudUxhYmVsKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0sICc8Jylcblx0XHRcdC5mcm9tVG8odGhpcy5lbGVtZW50cy5zdWJtZW51TGFiZWxOZXh0LCB7XG5cdFx0XHRcdHk6IDMwLFxuXHRcdFx0XHRhdXRvQWxwaGE6IDBcblx0XHRcdH0sIHtcblx0XHRcdFx0eTogMCxcblx0XHRcdFx0YXV0b0FscGhhOiAxLFxuXHRcdFx0XHRkdXJhdGlvbjogMC4zLFxuXHRcdFx0XHRvblN0YXJ0OiAoKSA9PiB7XG5cdFx0XHRcdFx0aWYgKGN1cnJlbnRNZW51TGFiZWwpIHtcblx0XHRcdFx0XHRcdHRoaXMuX3NldFN1Ym1lbnVMYWJlbE5leHQoY3VycmVudE1lbnVMYWJlbCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9LCAnPCcpO1xuXG5cdFx0dGwudGltZVNjYWxlKHNwZWVkKTtcblxuXHRcdHJldHVybiB0bDtcblx0fVxuXG5cdF9zZXRTdWJtZW51TGFiZWxDdXJyZW50KHRleHQgPSAnJykge1xuXHRcdGlmICh0aGlzLmVsZW1lbnRzLnN1Ym1lbnVMYWJlbEN1cnJlbnRbMF0pIHtcblx0XHRcdHRoaXMuZWxlbWVudHMuc3VibWVudUxhYmVsQ3VycmVudFswXS5pbm5lckhUTUwgPSB0ZXh0O1xuXHRcdH1cblx0fVxuXG5cdF9zZXRTdWJtZW51TGFiZWxOZXh0KHRleHQgPSAnJykge1xuXHRcdGlmICh0aGlzLmVsZW1lbnRzLnN1Ym1lbnVMYWJlbE5leHRbMF0pIHtcblx0XHRcdHRoaXMuZWxlbWVudHMuc3VibWVudUxhYmVsTmV4dFswXS5pbm5lckhUTUwgPSB0ZXh0O1xuXHRcdH1cblx0fVxuXG5cdF9vbk1lbnVDbG9zZShjdXJyZW50TWVudSwgcHJldmlvdXNNZW51KSB7XG5cdFx0aWYgKCFwcmV2aW91c01lbnUpIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRjb25zdFxuXHRcdFx0c3BlZWQgPSBhcHAudXRpbGl0aWVzLmdldFRpbWVTY2FsZUJ5S2V5KCdvdmVybGF5TWVudUNsb3NlJyksXG5cdFx0XHR0bCA9IGdzYXAudGltZWxpbmUoe1xuXHRcdFx0XHRvblN0YXJ0OiAoKSA9PiB7XG5cdFx0XHRcdFx0aWYgKHByZXZpb3VzTWVudSA9PT0gdGhpcy5lbGVtZW50cy50b3BMZXZlbE1lbnVbMF0gJiYgY3VycmVudE1lbnUgIT09IHRoaXMuZWxlbWVudHMudG9wTGV2ZWxNZW51WzBdKSB7XG5cdFx0XHRcdFx0XHRpZiAodGhpcy5tZW51T3ZlcmxheVJlZikge1xuXHRcdFx0XHRcdFx0XHR0aGlzLm1lbnVPdmVybGF5UmVmLm1vdmVTdWJtZW51VG9Ib2xkZXIoY3VycmVudE1lbnUpO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSxcblx0XHRcdFx0b25Db21wbGV0ZTogKCkgPT4ge1xuXHRcdFx0XHRcdGlmICh0aGlzLmluc3RhbmNlLm9wZW5lZCAmJiBpc1RvcExldmVsKSB7XG5cdFx0XHRcdFx0XHRpZiAodGhpcy5tZW51T3ZlcmxheVJlZikge1xuXHRcdFx0XHRcdFx0XHR0aGlzLm1lbnVPdmVybGF5UmVmLnJlc3RvcmVTdWJtZW51T3JpZ2luYWxQbGFjZW1lbnQoKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0pLFxuXHRcdFx0aXNUb3BMZXZlbCA9IHRoaXMuaW5zdGFuY2UuY3VycmVudE1lbnVJc1RvcExldmVsLFxuXHRcdFx0bWVudUl0ZW1zID0gWy4uLnByZXZpb3VzTWVudS5xdWVyeVNlbGVjdG9yQWxsKCc6c2NvcGUgPiBsaSA+IGEnKV07XG5cblx0XHRtZW51SXRlbXMuZm9yRWFjaCgoZWwsIGluZGV4KSA9PiB7XG5cdFx0XHR0bC5oaWRlTGluZXMoZWwsIHtcblx0XHRcdFx0ZHVyYXRpb246IDEuMixcblx0XHRcdFx0ZWFzZTogJ3Bvd2VyNC5vdXQnXG5cdFx0XHR9LCAnc3RhcnQnKTtcblx0XHR9KTtcblxuXHRcdHRsLnNldChwcmV2aW91c01lbnUsIHtcblx0XHRcdGNsZWFyUHJvcHM6ICd2aXNpYmlsaXR5LGhlaWdodCdcblx0XHR9KTtcblxuXHRcdHRsLnRpbWVTY2FsZShzcGVlZCk7XG5cblx0XHRyZXR1cm4gdGw7XG5cdH1cblxuXHRfb25IZWFkZXJBbmNob3JzQ2xpY2soYW5jaG9yVGFyZ2V0KSB7XG5cdFx0YXBwLnV0aWxpdGllcy5zY3JvbGxUbyh7XG5cdFx0XHR0YXJnZXQ6IGFuY2hvclRhcmdldFxuXHRcdH0pO1xuXHR9XG5cblx0X2F0dGFjaEV2ZW50cygpIHtcblx0XHRpZiAodHlwZW9mIHRoaXMubXEuYWRkRXZlbnRMaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0dGhpcy5tcS5hZGRFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLl9oYW5kbGVycy5tcUNoYW5nZSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMubXEuYWRkTGlzdGVuZXIodGhpcy5faGFuZGxlcnMubXFDaGFuZ2UpO1xuXHRcdH1cblxuXHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2FydHMvYmFyYmEvdHJhbnNpdGlvbi9zdGFydCcsIHRoaXMuX2hhbmRsZXJzLnRyYW5zaXRpb25TdGFydCk7XG5cdFx0ZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignYXJ0cy9iYXJiYS90cmFuc2l0aW9uL2VuZCcsIHRoaXMuX2hhbmRsZXJzLnRyYW5zaXRpb25FbmQpO1xuXHRcdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2FydHMvYmFyYmEvdHJhbnNpdGlvbi9pbml0L2JlZm9yZScsIHRoaXMuX2hhbmRsZXJzLnRyYW5zaXRpb25Jbml0QmVmb3JlKTtcblx0XHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdhcnRzL2JhcmJhL3RyYW5zaXRpb24vaW5pdC9hZnRlcicsIHRoaXMuX2hhbmRsZXJzLnRyYW5zaXRpb25Jbml0QWZ0ZXIpO1xuXHR9XG5cblx0X2RldGFjaEV2ZW50cygpIHtcblx0XHRpZiAodHlwZW9mIHRoaXMubXEucmVtb3ZlRXZlbnRMaXN0ZW5lciA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0dGhpcy5tcS5yZW1vdmVFdmVudExpc3RlbmVyKCdjaGFuZ2UnLCB0aGlzLl9oYW5kbGVycy5tcUNoYW5nZSk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdHRoaXMubXEucmVtb3ZlTGlzdGVuZXIodGhpcy5faGFuZGxlcnMubXFDaGFuZ2UpO1xuXHRcdH1cblxuXHRcdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2FydHMvYmFyYmEvdHJhbnNpdGlvbi9zdGFydCcsIHRoaXMuX2hhbmRsZXJzLnRyYW5zaXRpb25TdGFydCk7XG5cdFx0ZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcignYXJ0cy9iYXJiYS90cmFuc2l0aW9uL2VuZCcsIHRoaXMuX2hhbmRsZXJzLnRyYW5zaXRpb25FbmQpO1xuXHRcdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2FydHMvYmFyYmEvdHJhbnNpdGlvbi9pbml0L2JlZm9yZScsIHRoaXMuX2hhbmRsZXJzLnRyYW5zaXRpb25Jbml0QmVmb3JlKTtcblx0XHRkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdhcnRzL2JhcmJhL3RyYW5zaXRpb24vaW5pdC9hZnRlcicsIHRoaXMuX2hhbmRsZXJzLnRyYW5zaXRpb25Jbml0QWZ0ZXIpO1xuXHR9XG5cblx0X29uTVFDaGFuZ2UoZXZlbnQpIHtcblx0XHRpZiAoZXZlbnQubWF0Y2hlcyAmJiB0aGlzLm1lbnVPdmVybGF5UmVmICYmIHRoaXMubWVudUNsYXNzaWNSZWYgJiYgdGhpcy5pbnN0YW5jZS5vcGVuZWQpIHtcblx0XHRcdHRoaXMuaW5zdGFuY2UudG9nZ2xlT3ZlcmxheShmYWxzZSwgdHJ1ZSk7XG5cdFx0fVxuXHR9XG5cblx0X29uVHJhbnNpdGlvblN0YXJ0KCkge1xuXHRcdGlmICh0aGlzLmluc3RhbmNlICYmIHRoaXMuaW5zdGFuY2Uuc3RpY2t5ICYmIHRoaXMuZWxlbWVudHMuYmFyWzBdKSB7XG5cdFx0XHRjb25zdCBzdGlja3lDbGFzcyA9IHRoaXMuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYXJ0cy1oZWFkZXItc3RpY2t5LWNsYXNzJyk7XG5cblx0XHRcdGlmIChzdGlja3lDbGFzcykge1xuXHRcdFx0XHR0aGlzLmVsZW1lbnRzLmJhclswXS5jbGFzc0xpc3QucmVtb3ZlKHN0aWNreUNsYXNzKTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5pbnN0YW5jZS5zdGlja3kuZGlzYWJsZSgpO1xuXHRcdH1cblx0fVxuXG5cdF9vblRyYW5zaXRpb25FbmQoKSB7XG5cdFx0aWYgKHRoaXMuaW5zdGFuY2UpIHtcblx0XHRcdHRoaXMuaW5zdGFuY2UudXBkYXRlKCk7XG5cdFx0fVxuXHR9XG5cblx0X29uVHJhbnNpdGlvbkluaXRCZWZvcmUoKSB7XG5cdFx0aWYgKHRoaXMubWVudU92ZXJsYXlSZWYgJiYgdGhpcy5tZW51T3ZlcmxheVJlZi5pbmZpbml0ZUxpc3QgJiYgdGhpcy5tZW51T3ZlcmxheVJlZi5pbmZpbml0ZUxpc3QuZW5hYmxlZCkge1xuXHRcdFx0dGhpcy5tZW51T3ZlcmxheVJlZi5pbmZpbml0ZUxpc3QuY29udHJvbGxlci5sYW5lc1swXS5pdGVtcy5kZXN0cm95KCk7XG5cdFx0fVxuXG5cdH1cblx0X29uVHJhbnNpdGlvbkluaXRBZnRlcigpIHtcblx0XHRpZiAodGhpcy5tZW51T3ZlcmxheVJlZiAmJiB0aGlzLm1lbnVPdmVybGF5UmVmLmluZmluaXRlTGlzdCAmJiB0aGlzLm1lbnVPdmVybGF5UmVmLmluZmluaXRlTGlzdC5lbmFibGVkKSB7XG5cdFx0XHR0aGlzLm1lbnVPdmVybGF5UmVmLmluZmluaXRlTGlzdC51cGRhdGUoKTtcblx0XHR9XG5cdH1cbn1cbiJdLCJuYW1lcyI6WyJIZWFkZXIiLCJfQmFzZUNvbXBvbmVudCIsIl9yZWYiLCJfdGhpcyIsIm5hbWUiLCJsb2FkSW5uZXJDb21wb25lbnRzIiwicGFyZW50IiwiZWxlbWVudCIsIm9wdGlvbnMiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY2FsbFN1cGVyIiwiZGVmYXVsdHMiLCJpbm5lckVsZW1lbnRzIiwiYmFyIiwib3ZlcmxheUNvbnRhaW5lciIsIm92ZXJsYXlDb250YWluZXJJbm5lciIsIm92ZXJsYXlTd2l0Y2hlciIsInRvcExldmVsTWVudSIsImFsbFN1Yk1lbnVzIiwic3VibWVudUJhY2tCdXR0b24iLCJzdWJtZW51TGFiZWxDdXJyZW50Iiwic3VibWVudUxhYmVsTmV4dCIsIndpZGdldHMiLCJfaGFuZGxlcnMiLCJtcUNoYW5nZSIsIl9vbk1RQ2hhbmdlIiwiYmluZCIsInRyYW5zaXRpb25TdGFydCIsIl9vblRyYW5zaXRpb25TdGFydCIsInRyYW5zaXRpb25FbmQiLCJfb25UcmFuc2l0aW9uRW5kIiwidHJhbnNpdGlvbkluaXRCZWZvcmUiLCJfb25UcmFuc2l0aW9uSW5pdEJlZm9yZSIsInRyYW5zaXRpb25Jbml0QWZ0ZXIiLCJfb25UcmFuc2l0aW9uSW5pdEFmdGVyIiwibG9ja2VkU3RpY2t5IiwiaXNPdmVybGF5T3BlbmluZyIsIm1xIiwid2luZG93IiwibWF0Y2hNZWRpYSIsIm1hdGNoTWVkaWFBdXRvQ2xvc2VPdmVybGF5Iiwic2V0dXAiLCJfaW5oZXJpdHMiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsImluaXQiLCJtZW51T3ZlcmxheVJlZiIsIl9nZXRJbm5lckNvbXBvbmVudEJ5TmFtZSIsIm1lbnVDbGFzc2ljUmVmIiwiX2NyZWF0ZUhlYWRlciIsIl9hdHRhY2hFdmVudHMiLCJkZXN0cm95IiwiX2RldGFjaEV2ZW50cyIsImluc3RhbmNlIiwidW5kZWZpbmVkIiwidXBkYXRlIiwiX3VwZGF0ZU9wdGlvbnMiLCJ0b2dnbGVIaWRkZW4iLCJoaWRkZW4iLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJjbGFzc0xpc3QiLCJ0b2dnbGUiLCJsb2NrU3RpY2t5IiwibG9jayIsInN0aWNreSIsImVsZW1lbnRzIiwic3RpY2t5Q2xhc3MiLCJnZXRBdHRyaWJ1dGUiLCJyZW1vdmUiLCJkaXNhYmxlIiwiZW5hYmxlIiwibG9ja2VkIiwiX2dldFN0aWNreU9wdGlvbnMiLCJhcHAiLCJ1dGlsaXRpZXMiLCJpc0VuYWJsZWRPcHRpb24iLCJfb2JqZWN0U3ByZWFkIiwiY29udGFpbmVyU2VsZWN0b3IiLCJpbm5lclNlbGVjdG9ycyIsIkFydHNIZWFkZXIiLCJvdmVybGF5IiwiY29udGFpbmVyU2VsZWN0b3JTdGlja3lGYWxsYmFjayIsInRvZ2dsZUF0dHJpYnV0ZXMiLCJ0b2dnbGVPcGVuZWRDbGFzcyIsInRvZ2dsZUFuaW1hdGluZ0NsYXNzIiwib25PcGVuIiwiX29uT3ZlcmxheU9wZW4iLCJvbkNsb3NlIiwiX29uT3ZlcmxheUNsb3NlIiwic3dpdGNoZXIiLCJlbGVtZW50U2VsZWN0b3IiLCJ0b2dnbGVBY3RpdmVDbGFzcyIsIm1lbnUiLCJtZW51U2VsZWN0b3IiLCJzdWJtZW51QmFja0J1dHRvblNlbGVjdG9yIiwidG9nZ2xlQ3VycmVudE1lbnVDbGFzcyIsInRvZ2dsZVN1Ym1lbnVPcGVuZWRDbGFzcyIsInRvZ2dsZU9wZW5pbmdDbGFzcyIsImJlZm9yZU9wZW4iLCJfb25NZW51QmVmb3JlT3BlbiIsIl9vbk1lbnVPcGVuIiwiX29uTWVudUNsb3NlIiwiYW5jaG9ycyIsImF1dG9DbG9zZU92ZXJsYXkiLCJvbkNsaWNrIiwiX29uSGVhZGVyQW5jaG9yc0NsaWNrIiwiaGVpZ2h0T2JzZXJ2ZXIiLCJ1cGRhdGVDU1NWYXIiLCJvYnNlcnZlIiwib2JzZXJ2ZUhlaWdodCIsIl90aGlzMiIsInRsIiwiZ3NhcCIsInRpbWVsaW5lIiwib25TdGFydCIsImN1cnJlbnRTdWJtZW51UmVmIiwiY3VycmVudFN1Ym1lbnVQYXJlbnRSZWYiLCJvbkNvbXBsZXRlIiwic2V0IiwidmlzaWJpbGl0eSIsImF1dG9BbHBoYSIsInpJbmRleCIsImFuaW1hdGVDdXJ0YWluIiwiYW5pbWF0ZUZyb20iLCJkdXJhdGlvbiIsImRpc3BhdGNoRXZlbnQiLCJ0byIsImNvbnRlbnRFbCIsImRldGFpbCIsImNvbnRhaW5lciIsImNvbnRhaW5lckVsIiwidmlzaWJsZSIsInNjcm9sbExvY2siLCJmcm9tVG8iLCJ5IiwiaW1tZWRpYXRlUmVuZGVyIiwiZWFzZSIsInN0YWdnZXIiLCJhbW91bnQiLCJmcm9tIiwiYXhpcyIsInRpbWVTY2FsZSIsImdldFRpbWVTY2FsZUJ5S2V5IiwiX3RoaXMzIiwiZGlzYWJsZVNjcm9sbCIsInJlc3RvcmVTdWJtZW51T3JpZ2luYWxQbGFjZW1lbnQiLCJoaWRlQ3VydGFpbiIsImFuaW1hdGVUbyIsImNsZWFyUHJvcHMiLCJfc2Nyb2xsQ29udGFpbmVySW5uZXJUb3AiLCJfcmVmMiIsIl9yZWYyJHRhcmdldCIsInRhcmdldCIsIl9yZWYyJGR1cmF0aW9uIiwiX3JlZjIkY29udGFpbmVyIiwic2Nyb2xsVG9wIiwic2Nyb2xsVG8iLCJjdXJyZW50TWVudSIsInByZXZpb3VzTWVudSIsIl90aGlzNCIsImlzRmlyc3RPcGVuVG9wTGV2ZWxNZW51Iiwic3BlZWQiLCJjdXJyZW50TWVudUxhYmVsIiwiaXNUb3BMZXZlbCIsImN1cnJlbnRNZW51SXNUb3BMZXZlbCIsIm1lbnVJdGVtcyIsIl90b0NvbnN1bWFibGVBcnJheSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJpbmZpbml0ZUxpc3QiLCJlbmFibGVkIiwiZW5hYmxlU2Nyb2xsIiwiX3NldFN1Ym1lbnVMYWJlbE5leHQiLCJmb3JFYWNoIiwiZWwiLCJpbmRleCIsImhpZGVMaW5lcyIsInJldmVyc2UiLCJvZmZzZXQiLCJhbmltYXRlTGluZXMiLCJzY3JvbGxMaXN0VG9DdXJyZW50VG9wTGV2ZWxJdGVtIiwiX3NldFN1Ym1lbnVMYWJlbEN1cnJlbnQiLCJ0ZXh0IiwiaW5uZXJIVE1MIiwiX3RoaXM1IiwibW92ZVN1Ym1lbnVUb0hvbGRlciIsIm9wZW5lZCIsImFuY2hvclRhcmdldCIsImFkZEV2ZW50TGlzdGVuZXIiLCJhZGRMaXN0ZW5lciIsImRvY3VtZW50IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlbW92ZUxpc3RlbmVyIiwiZXZlbnQiLCJtYXRjaGVzIiwidG9nZ2xlT3ZlcmxheSIsImNvbnRyb2xsZXIiLCJsYW5lcyIsIml0ZW1zIiwiQmFzZUNvbXBvbmVudCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/components/Header.js\n");

/***/ })

}]);