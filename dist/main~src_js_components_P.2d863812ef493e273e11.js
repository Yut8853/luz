"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkthree_shader_env01"] = self["webpackChunkthree_shader_env01"] || []).push([["main~src_js_components_P"],{

/***/ "./src/js/components/PSWP.js":
/*!***********************************!*\
  !*** ./src/js/components/PSWP.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ PSWP)\n/* harmony export */ });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar PSWP = /*#__PURE__*/function (_BaseComponent) {\n  function PSWP(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, PSWP);\n    _this = _callSuper(this, PSWP, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // External options from app.options.gallery\n      defaults: app.options.gallery,\n      // Component inner elements\n      innerElements: {}\n    }]);\n    _this._handlers = {\n      itemData: _this._onItemData.bind(_this),\n      contentLoad: _this._onContentLoad.bind(_this),\n      contentActivate: _this._onContentActivate.bind(_this),\n      contentDeactivate: _this._onContentDeactivate.bind(_this),\n      firstUpdate: _this._onFirstUpdate.bind(_this),\n      beforeOpen: _this._onBeforeOpen.bind(_this),\n      close: _this._onClose.bind(_this),\n      uiRegister: _this._onUIRegister.bind(_this),\n      pointerDown: _this._onPointerDown.bind(_this),\n      pointerMove: _this._onPointerMove.bind(_this),\n      pointerUp: _this._onPointerUp.bind(_this)\n    };\n    _this._patterns = {\n      image: /[^\\s]+(\\.(jpg|jpeg|jfif|pjpeg|pjp|bmp|gif|png|apng|webp|svg))/g,\n      video: /[^\\s]+(\\.(mp4|ogv|webm))/g,\n      // fallback $1 /(?:http?s?:\\/\\/)?(?:www\\.)?(?:youtube\\.com|youtu\\.be)\\/(?:watch\\?v=|embed\\/)([^&|?|\\/]*)/g\n      youtube: /^((?:https?:)?\\/\\/)?((?:www|m)\\.)?((?:youtube(-nocookie)?\\.com|youtu.be))(\\/(?:[\\w\\-]+\\?v=|embed\\/|v\\/)?)([\\w\\-]+)(\\S+)?$/g,\n      // $6\n      vimeo: /(?:http?s?:\\/\\/)?(?:www\\.)?(?:vimeo\\.com)\\/(?:.*\\/)?(.+)/g // $1\n    };\n    _this.setup();\n    return _this;\n  }\n  _inherits(PSWP, _BaseComponent);\n  return _createClass(PSWP, [{\n    key: \"init\",\n    value: function init() {\n      this.updateRef('cursorRef', 'CursorFollower');\n      this._createLightbox();\n      this._attachEvents();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      this.lightbox.on('contentLoad', this._handlers.contentLoad);\n      this.lightbox.on('contentActivate', this._handlers.contentActivate);\n      this.lightbox.on('contentDeactivate', this._handlers.contentDeactivate);\n      this.lightbox.on('beforeOpen', this._handlers.beforeOpen);\n      this.lightbox.on('firstUpdate', this._handlers.firstUpdate);\n      this.lightbox.on('close', this._handlers.close);\n      this.lightbox.on('uiRegister', this._handlers.uiRegister);\n      this.lightbox.on('pointerDown', this._handlers.pointerDown);\n      this.lightbox.on('pointerMove', this._handlers.pointerMove);\n      this.lightbox.on('pointerUp', this._handlers.pointerUp);\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      if (this.lightbox) {\n        this.lightbox.destroy();\n      }\n    }\n  }, {\n    key: \"_createLightbox\",\n    value: function _createLightbox() {\n      this.lightbox = new PhotoSwipeLightbox({\n        gallery: this.element,\n        children: this.options.itemsSelector,\n        bgOpacity: this.options.bgOpacity,\n        initialZoomLevel: this.options.initialZoomLevel,\n        secondaryZoomLevel: this.options.secondaryZoomLevel,\n        maxZoomLevel: this.options.maxZoomLevel,\n        arrowPrev: !this._shouldDisableDefaultUIElement('arrows'),\n        arrowNext: !this._shouldDisableDefaultUIElement('arrows'),\n        zoom: !this._shouldDisableDefaultUIElement('zoom'),\n        close: !this._shouldDisableDefaultUIElement('close'),\n        counter: !this._shouldDisableDefaultUIElement('counter'),\n        preloader: !this._shouldDisableDefaultUIElement('preloader'),\n        pswpModule: PhotoSwipe\n      });\n      this.lightbox.addFilter('itemData', this._handlers.itemData);\n      this.lightbox.init();\n    }\n  }, {\n    key: \"_onPointerDown\",\n    value: function _onPointerDown(event) {\n      this.updateRef('cursorRef', 'CursorFollower');\n      if (this.cursorRef && this.cursorRef.instance) {\n        this.cursorRef.instance.updateMouse(event.originalEvent);\n      }\n    }\n  }, {\n    key: \"_onPointerMove\",\n    value: function _onPointerMove(event) {\n      if (this.cursorRef && this.cursorRef.instance) {\n        this.cursorRef.instance.updateMouse(event.originalEvent);\n      }\n    }\n  }, {\n    key: \"_onPointerUp\",\n    value: function _onPointerUp(event) {\n      if (this.cursorRef && this.cursorRef.instance) {\n        this.cursorRef.instance.updateMouse(event.originalEvent);\n      }\n    }\n  }, {\n    key: \"_onBeforeOpen\",\n    value: function _onBeforeOpen() {\n      app.utilities.scrollLock(true);\n      app.utilities.dispatchEvent('arts/container/visibility', {\n        detail: {\n          container: app.containerEl,\n          visible: false\n        }\n      });\n    }\n  }, {\n    key: \"_onFirstUpdate\",\n    value: function _onFirstUpdate() {\n      if (typeof this.options.colorTheme === 'string') {\n        this.lightbox.pswp.element.setAttribute('data-arts-color-theme', this.options.colorTheme);\n      }\n    }\n  }, {\n    key: \"_shouldDisableDefaultUIElement\",\n    value: function _shouldDisableDefaultUIElement(name) {\n      return !this.options[name] || !!this.options[name] && !!this.options[name].custom;\n    }\n  }, {\n    key: \"_onUIRegister\",\n    value: function _onUIRegister() {\n      if (!!this.options.close && this._shouldDisableDefaultUIElement('close')) {\n        this._registerUIClose();\n      }\n      if (!!this.options.arrows && this._shouldDisableDefaultUIElement('arrows')) {\n        this._registerUIArrowPrev();\n        this._registerUIArrowNext();\n      }\n      if (!!this.options.counter && this._shouldDisableDefaultUIElement('counter')) {\n        this._registerUICounter();\n      }\n      if (!!this.options.captions) {\n        this._registerUICaption();\n      }\n      if (!!this.options.preloader && this._shouldDisableDefaultUIElement('preloader')) {\n        this._registerUIPreloader();\n      }\n      if (!!this.options.zoom && this._shouldDisableDefaultUIElement('zoom')) {\n        this._registerUIZoom();\n      }\n    }\n  }, {\n    key: \"_registerUIZoom\",\n    value: function _registerUIZoom() {\n      var _this2 = this;\n      this.lightbox.pswp.ui.registerElement({\n        name: 'customZoom',\n        className: 'pswp-custom-button pswp-custom-button_left pswp-custom-button_zoom',\n        appendTo: 'bar',\n        tagName: 'a',\n        onClick: 'toggleZoom',\n        order: 20,\n        onInit: function onInit(el, pswp) {\n          el.setAttribute('href', '#');\n          el.setAttribute('rel', 'nofollow');\n          var iconAttributes = '';\n          if (_typeof(_this2.options.zoom.cursor) === 'object') {\n            var cursorAttributes = deepmerge({\n              delegate: true\n            }, _this2.options.zoom.cursor);\n            el.setAttribute('data-arts-cursor-follower-target', JSON.stringify(cursorAttributes));\n            iconAttributes = 'data-arts-cursor-follower-delegated=\"true\"';\n          }\n          el.addEventListener('click', app.hoverEffect.preventDefault);\n          el.innerHTML = \"<div class=\\\"pswp-custom-button__zoom-icon material-icons zoom_in\\\" \".concat(iconAttributes, \"></div>\").trim();\n        }\n      });\n    }\n  }, {\n    key: \"_registerUIPreloader\",\n    value: function _registerUIPreloader() {\n      this.lightbox.pswp.ui.registerElement({\n        name: 'customPreloader',\n        className: 'pswp-custom-button pswp-custom-preloader',\n        appendTo: 'root',\n        order: 7,\n        onInit: function onInit(el, pswp) {\n          var isVisible;\n          var delayTimeout;\n          el.innerHTML = \"<svg viewBox=\\\"25 25 50 50\\\"><circle cx=\\\"50\\\" cy=\\\"50\\\" r=\\\"24\\\" fill=\\\"none\\\"></circle></svg>\";\n          var toggleIndicatorClass = function toggleIndicatorClass(className, add) {\n            el.classList[add ? 'add' : 'remove']('pswp__preloader--' + className);\n          };\n          var setIndicatorVisibility = function setIndicatorVisibility(visible) {\n            if (isVisible !== visible) {\n              isVisible = visible;\n              toggleIndicatorClass('active', visible);\n            }\n          };\n          var updatePreloaderVisibility = function updatePreloaderVisibility() {\n            if (!pswp.currSlide.content.isLoading()) {\n              setIndicatorVisibility(false);\n              if (delayTimeout) {\n                clearTimeout(delayTimeout);\n                delayTimeout = null;\n              }\n              return;\n            }\n            if (!delayTimeout) {\n              // display loading indicator with delay\n              delayTimeout = setTimeout(function () {\n                setIndicatorVisibility(pswp.currSlide.content.isLoading());\n                delayTimeout = null;\n              }, pswp.options.preloaderDelay);\n            }\n          };\n          pswp.on('change', updatePreloaderVisibility);\n          pswp.on('loadComplete', function (e) {\n            if (pswp.currSlide === e.slide) {\n              updatePreloaderVisibility();\n            }\n          });\n\n          // expose the method\n          pswp.ui.updatePreloaderVisibility = updatePreloaderVisibility;\n        }\n      });\n    }\n  }, {\n    key: \"_registerUICaption\",\n    value: function _registerUICaption() {\n      var _this3 = this;\n      this.lightbox.pswp.ui.registerElement({\n        name: 'customCaption',\n        className: 'pswp-custom-caption',\n        order: 9,\n        isButton: false,\n        appendTo: 'root',\n        html: '',\n        onInit: function onInit(el, pswp) {\n          _this3.lightbox.pswp.on('change', function () {\n            var currentSlideElement = _this3.lightbox.pswp.currSlide.data.element;\n            var captionHTML = '';\n            if (currentSlideElement) {\n              var captionFromAttribute = currentSlideElement.getAttribute('data-caption');\n\n              // Explicitly set caption\n              if (captionFromAttribute) {\n                captionHTML = \"<div class=\\\"pswp-custom-caption__content\\\">\".concat(captionFromAttribute, \"</div>\");\n              } else {\n                // Try to get caption from thumbnail alt attribute\n                var currentImage = currentSlideElement.querySelector('img');\n                if (currentImage) {\n                  var altContents = currentImage.getAttribute('alt');\n                  if (altContents && altContents.length) {\n                    captionHTML = \"<div class=\\\"pswp-custom-caption__content\\\">\".concat(altContents, \"</div>\");\n                  }\n                }\n              }\n            }\n            el.innerHTML = captionHTML || '';\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_registerUICounter\",\n    value: function _registerUICounter() {\n      this.lightbox.pswp.ui.registerElement({\n        name: 'customCounter',\n        className: 'pswp-custom-button pswp-custom-button_left pswp-custom-button_counter',\n        appendTo: 'bar',\n        order: 5,\n        onInit: function onInit(el, pswp) {\n          pswp.on('change', function () {\n            el.innerText = pswp.currIndex + 1 + pswp.options.indexIndicatorSep + pswp.getNumItems();\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_registerUIClose\",\n    value: function _registerUIClose() {\n      var _this4 = this;\n      this.lightbox.pswp.ui.registerElement({\n        name: 'customClose',\n        className: 'pswp-custom-button pswp-custom-button_right pswp-custom-button_close',\n        appendTo: 'bar',\n        tagName: 'a',\n        onClick: 'close',\n        order: 20,\n        onInit: function onInit(el, pswp) {\n          el.setAttribute('href', '#');\n          el.setAttribute('rel', 'nofollow');\n          var wrapperLinesAttributes = '';\n          if (_typeof(_this4.options.close.cursor) === 'object') {\n            var cursorAttributes = deepmerge({\n              delegate: true\n            }, _this4.options.close.cursor);\n            el.setAttribute('data-arts-cursor-follower-target', JSON.stringify(cursorAttributes));\n            wrapperLinesAttributes = 'data-arts-cursor-follower-delegated=\"true\"';\n          }\n          el.addEventListener('click', app.hoverEffect.preventDefault);\n          el.innerHTML = \"\\n\\t\\t\\t\\t\\t<div class=\\\"pswp-custom-button__label me-2\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"pswp-custom-button__close-label-close\\\">\".concat(_this4.options.close.label || '', \"</div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"pswp-custom-button__close-label-hover\\\">\").concat(_this4.options.close.labelHover || '', \"</div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<div class=\\\"pswp-custom-button__close-wrapper-lines\\\" \").concat(wrapperLinesAttributes, \">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"pswp-custom-button__close-line\\\"></div>\\n\\t\\t\\t\\t\\t\\t<div class=\\\"pswp-custom-button__close-line\\\"></div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\").trim();\n        }\n      });\n    }\n  }, {\n    key: \"_registerUIArrowPrev\",\n    value: function _registerUIArrowPrev() {\n      var _this5 = this;\n      this.lightbox.pswp.ui.registerElement({\n        name: 'customArrowPrev',\n        className: 'slider-arrow pswp-custom-arrow-prev',\n        appendTo: 'wrapper',\n        tagName: 'div',\n        onClick: 'prev',\n        order: 10,\n        onInit: function onInit(el, pswp) {\n          var buttonAttributes = '';\n          if (_typeof(_this5.options.arrows.cursor) === 'object') {\n            buttonAttributes = \"data-arts-cursor-follower-target=\".concat(JSON.stringify(_this5.options.arrows.cursor));\n          }\n          el.innerHTML = \"\\n\\t\\t\\t\\t\\t<button class=\\\"button-circle slider-arrow__button\\\" \".concat(buttonAttributes, \">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"slider-arrow__inner\\\">\\n\\t\\t\\t\\t\\t\\t\\t<svg class=\\\"svg-arrow svg-arrow_left\\\" width=\\\"41\\\" height=\\\"12\\\" viewBox=\\\"0 0 41 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M6 7v5L0 6l6-6v5h35v2z\\\" fill-rule=\\\"evenodd\\\"></path></svg>\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\").trim();\n        }\n      });\n    }\n  }, {\n    key: \"_registerUIArrowNext\",\n    value: function _registerUIArrowNext() {\n      var _this6 = this;\n      this.lightbox.pswp.ui.registerElement({\n        name: 'customArrowNext',\n        className: 'slider-arrow pswp-custom-arrow-next',\n        appendTo: 'wrapper',\n        tagName: 'div',\n        onClick: 'next',\n        order: 11,\n        onInit: function onInit(el, pswp) {\n          var buttonAttributes = '';\n          if (_typeof(_this6.options.arrows.cursor) === 'object') {\n            buttonAttributes = \"data-arts-cursor-follower-target=\".concat(JSON.stringify(_this6.options.arrows.cursor));\n          }\n          el.innerHTML = \"\\n\\t\\t\\t\\t\\t<button class=\\\"button-circle slider-arrow__button\\\" \".concat(buttonAttributes, \">\\n\\t\\t\\t\\t\\t\\t<span class=\\\"slider-arrow__inner\\\">\\n\\t\\t\\t\\t\\t\\t\\t<svg class=\\\"svg-arrow svg-arrow_right\\\" width=\\\"41\\\" height=\\\"12\\\" viewBox=\\\"0 0 41 12\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\"><path d=\\\"M35 5V0l5.999 6L35 12V7H0V5z\\\" fill-rule=\\\"evenodd\\\"></path></svg>\\n\\t\\t\\t\\t\\t\\t</span>\\n\\t\\t\\t\\t\\t</button>\\n\\t\\t\\t\\t\").trim();\n        }\n      });\n    }\n  }, {\n    key: \"_onClose\",\n    value: function _onClose() {\n      var delay = typeof this.lightbox.pswp.options.hideAnimationDuration === 'number' ? this.lightbox.pswp.options.hideAnimationDuration / 1000 : 0;\n      app.utilities.scrollLock(false);\n      this.updateRef('cursorRef', 'CursorFollower');\n      if (this.cursorRef && this.cursorRef.instance) {\n        this.cursorRef.instance.reset();\n      }\n      gsap.delayedCall(delay, function () {\n        app.utilities.dispatchEvent('arts/container/visibility', {\n          detail: {\n            container: app.containerEl,\n            visible: true\n          }\n        });\n      });\n    }\n  }, {\n    key: \"_onItemData\",\n    value: function _onItemData(itemData, index) {\n      var autoplay = itemData.element.getAttribute('data-autoplay'),\n        url = itemData.element.getAttribute('href');\n      if (url) {\n        var type = this._getMediaTypeFromURL(url);\n        Object.assign(itemData, {\n          type: type\n        });\n      }\n      if (autoplay && autoplay !== 'false') {\n        Object.assign(itemData, {\n          autoplay: true\n        });\n      }\n      return itemData;\n    }\n  }, {\n    key: \"_onContentLoad\",\n    value: function _onContentLoad(event) {\n      var content = event.content;\n      if (content.type && content.data.src && content.type !== 'image') {\n        event.preventDefault();\n        content.element = document.createElement('div');\n        content.element.className = 'pswp__wrapper-embed';\n        switch (content.type) {\n          case 'video':\n            /**\n             * Self hosted video\n             */\n            this._renderHTML5Video(content.element, content.data.src, content.data.autoplay);\n            break;\n          case 'youtube':\n            /**\n             * YouTube iFrame\n             */\n            this._renderYouTubeIFrame(content.element, content.data.src, content.data.autoplay);\n            break;\n          case 'vimeo':\n            /**\n             * Vimeo iFrame\n             */\n            this._renderVimeoIFrame(content.element, content.data.src, content.data.autoplay);\n            break;\n          default:\n            /**\n             * Fallback iFrame\n             */\n            this._renderIFrame(content.element, content.data.src);\n            break;\n        }\n      }\n    }\n  }, {\n    key: \"_onContentActivate\",\n    value: function _onContentActivate(event) {\n      var content = event.content;\n      if (content.data.autoplay && content.index === content.instance.currIndex) {\n        this._playVideo(content);\n      }\n    }\n  }, {\n    key: \"_onContentDeactivate\",\n    value: function _onContentDeactivate(event) {\n      var content = event.content;\n      this._pauseVideo(content);\n    }\n  }, {\n    key: \"_renderHTML5Video\",\n    value: function _renderHTML5Video(element, src) {\n      var video = document.createElement('video');\n      video.setAttribute('src', src);\n      video.setAttribute('controls', true);\n      video.setAttribute('playsinline', true);\n      video.setAttribute('autoplay', true);\n      element.appendChild(video);\n    }\n  }, {\n    key: \"_renderYouTubeIFrame\",\n    value: function _renderYouTubeIFrame(element, src) {\n      var autoplay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var iframe = document.createElement('iframe'),\n        param = autoplay ? 'autoplay=1' : '',\n        url = src.replace(this._patterns.youtube, \"https://www.youtube.com/embed/$6?\".concat(param, \"&enablejsapi=1\"));\n      iframe.className = 'iframe-youtube';\n      iframe.setAttribute('width', '100%');\n      iframe.setAttribute('height', '100%');\n      iframe.setAttribute('src', url);\n      iframe.setAttribute('frameborder', '0');\n      iframe.setAttribute('allow', 'autoplay; accelerometer; encrypted-media; gyroscope; picture-in-picture; fullscreen');\n      element.appendChild(iframe);\n    }\n  }, {\n    key: \"_renderVimeoIFrame\",\n    value: function _renderVimeoIFrame(element, src) {\n      var autoplay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var iframe = document.createElement('iframe'),\n        param = autoplay ? 'autoplay=1' : '',\n        url = src.replace(this._patterns.vimeo, \"https://player.vimeo.com/video/$1?\".concat(param));\n      iframe.className = 'iframe-vimeo';\n      iframe.setAttribute('width', '100%');\n      iframe.setAttribute('height', '100%');\n      iframe.setAttribute('src', url);\n      iframe.setAttribute('frameborder', '0');\n      iframe.setAttribute('allow', 'autoplay; fullscreen');\n      element.appendChild(iframe);\n    }\n  }, {\n    key: \"_renderIFrame\",\n    value: function _renderIFrame(element, src) {\n      var iframe = document.createElement('iframe');\n      iframe.setAttribute('width', '100%');\n      iframe.setAttribute('height', '100%');\n      iframe.setAttribute('src', src);\n      iframe.setAttribute('frameborder', '0');\n      iframe.setAttribute('allow', 'autoplay; fullscreen');\n      element.appendChild(iframe);\n    }\n  }, {\n    key: \"_getMediaTypeFromURL\",\n    value: function _getMediaTypeFromURL(url) {\n      for (var _i = 0, _Object$entries = Object.entries(this._patterns); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n          name = _Object$entries$_i[0],\n          pattern = _Object$entries$_i[1];\n        if (url.match(pattern)) {\n          return \"\".concat(name);\n        }\n      }\n      return 'iframe';\n    }\n  }, {\n    key: \"_playVideo\",\n    value: function _playVideo(content) {\n      var _this7 = this;\n      switch (content.type) {\n        case 'video':\n          {\n            var video = content.element.querySelector('video');\n            this._playHTMLVideo(video);\n            break;\n          }\n        /**\n         * YouTube iFrame\n         */\n        case 'youtube':\n          {\n            var iframe = content.element.querySelector('iframe');\n            if (iframe) {\n              if (iframe.contentWindow) {\n                this._playIFrameYouTube(iframe);\n              } else {\n                iframe.onload = function () {\n                  setTimeout(function () {\n                    _this7._playIFrameYouTube(iframe);\n                  }, 100);\n                };\n              }\n            }\n            break;\n          }\n\n        /**\n         * Vimeo iFrame\n         */\n        case 'vimeo':\n          {\n            var _iframe = content.element.querySelector('iframe');\n            if (_iframe) {\n              if (_iframe.contentWindow) {\n                this._playIFrameVimeo(_iframe);\n              } else {\n                _iframe.addEventListener('load', function () {\n                  _this7._playIFrameVimeo(_iframe);\n                }, true);\n              }\n            }\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"_pauseVideo\",\n    value: function _pauseVideo(content) {\n      var _this8 = this;\n      switch (content.type) {\n        case 'video':\n          {\n            var video = content.element.querySelector('video');\n            this._pauseHTMLVideo(video);\n            break;\n          }\n        /**\n         * YouTube iFrame\n         */\n        case 'youtube':\n          {\n            var iframe = content.element.querySelector('iframe');\n            if (iframe) {\n              if (iframe.contentWindow) {\n                this._pauseIFrameYouTube(iframe);\n              } else {\n                iframe.onload = function () {\n                  return _this8._pauseIFrameYouTube(iframe);\n                };\n              }\n            }\n            break;\n          }\n\n        /**\n         * Vimeo iFrame\n         */\n        case 'vimeo':\n          {\n            var _iframe2 = content.element.querySelector('iframe');\n            if (_iframe2) {\n              if (_iframe2.contentWindow) {\n                this._pauseIFrameVimeo(_iframe2);\n              } else {\n                _iframe2.onload = function () {\n                  return _this8._pauseIFrameVimeo(_iframe2);\n                };\n              }\n            }\n            break;\n          }\n      }\n    }\n  }, {\n    key: \"_playHTMLVideo\",\n    value: function _playHTMLVideo(video) {\n      if (video && typeof video.play === 'function') {\n        video.play();\n      }\n    }\n  }, {\n    key: \"_pauseHTMLVideo\",\n    value: function _pauseHTMLVideo(video) {\n      if (video && typeof video.pause === 'function') {\n        video.pause();\n      }\n    }\n  }, {\n    key: \"_playIFrameYouTube\",\n    value: function _playIFrameYouTube(iframe) {\n      iframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"playVideo\",\"args\":\"\"}', '*');\n    }\n  }, {\n    key: \"_pauseIFrameYouTube\",\n    value: function _pauseIFrameYouTube(iframe) {\n      iframe.contentWindow.postMessage('{\"event\":\"command\",\"func\":\"pauseVideo\",\"args\":\"\"}', '*');\n    }\n  }, {\n    key: \"_playIFrameVimeo\",\n    value: function _playIFrameVimeo(iframe) {\n      iframe.contentWindow.postMessage('{\"method\":\"play\"}', '*');\n    }\n  }, {\n    key: \"_pauseIFrameVimeo\",\n    value: function _pauseIFrameVimeo(iframe) {\n      iframe.contentWindow.postMessage('{\"method\":\"pause\"}', '*');\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUE7SUFBQUMsS0FBQSxFQUVELFNBQUEySixrQkFBa0JuQixNQUFNLEVBQUU7TUFDekJBLE1BQU0sQ0FBQ1ksYUFBYSxDQUFDVSxXQUFXLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxDQUFDO0lBQzVEO0VBQUM7QUFBQSxFQXhxQmdDQyxhQUFhIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vdGhyZWUtc2hhZGVyLWVudjAxLy4vc3JjL2pzL2NvbXBvbmVudHMvUFNXUC5qcz9iZDk3Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBTV1AgZXh0ZW5kcyBCYXNlQ29tcG9uZW50IHtcblx0Y29uc3RydWN0b3Ioe1xuXHRcdG5hbWUsXG5cdFx0bG9hZElubmVyQ29tcG9uZW50cyxcblx0XHRwYXJlbnQsXG5cdFx0ZWxlbWVudFxuXHR9KSB7XG5cdFx0c3VwZXIoe1xuXHRcdFx0bmFtZSxcblx0XHRcdGxvYWRJbm5lckNvbXBvbmVudHMsXG5cdFx0XHRwYXJlbnQsXG5cdFx0XHRlbGVtZW50LFxuXHRcdFx0Ly8gRXh0ZXJuYWwgb3B0aW9ucyBmcm9tIGFwcC5vcHRpb25zLmdhbGxlcnlcblx0XHRcdGRlZmF1bHRzOiBhcHAub3B0aW9ucy5nYWxsZXJ5LFxuXHRcdFx0Ly8gQ29tcG9uZW50IGlubmVyIGVsZW1lbnRzXG5cdFx0XHRpbm5lckVsZW1lbnRzOiB7XG5cblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdHRoaXMuX2hhbmRsZXJzID0ge1xuXHRcdFx0aXRlbURhdGE6IHRoaXMuX29uSXRlbURhdGEuYmluZCh0aGlzKSxcblx0XHRcdGNvbnRlbnRMb2FkOiB0aGlzLl9vbkNvbnRlbnRMb2FkLmJpbmQodGhpcyksXG5cdFx0XHRjb250ZW50QWN0aXZhdGU6IHRoaXMuX29uQ29udGVudEFjdGl2YXRlLmJpbmQodGhpcyksXG5cdFx0XHRjb250ZW50RGVhY3RpdmF0ZTogdGhpcy5fb25Db250ZW50RGVhY3RpdmF0ZS5iaW5kKHRoaXMpLFxuXHRcdFx0Zmlyc3RVcGRhdGU6IHRoaXMuX29uRmlyc3RVcGRhdGUuYmluZCh0aGlzKSxcblx0XHRcdGJlZm9yZU9wZW46IHRoaXMuX29uQmVmb3JlT3Blbi5iaW5kKHRoaXMpLFxuXHRcdFx0Y2xvc2U6IHRoaXMuX29uQ2xvc2UuYmluZCh0aGlzKSxcblx0XHRcdHVpUmVnaXN0ZXI6IHRoaXMuX29uVUlSZWdpc3Rlci5iaW5kKHRoaXMpLFxuXHRcdFx0cG9pbnRlckRvd246IHRoaXMuX29uUG9pbnRlckRvd24uYmluZCh0aGlzKSxcblx0XHRcdHBvaW50ZXJNb3ZlOiB0aGlzLl9vblBvaW50ZXJNb3ZlLmJpbmQodGhpcyksXG5cdFx0XHRwb2ludGVyVXA6IHRoaXMuX29uUG9pbnRlclVwLmJpbmQodGhpcyksXG5cdFx0fTtcblx0XHR0aGlzLl9wYXR0ZXJucyA9IHtcblx0XHRcdGltYWdlOiAvW15cXHNdKyhcXC4oanBnfGpwZWd8amZpZnxwanBlZ3xwanB8Ym1wfGdpZnxwbmd8YXBuZ3x3ZWJwfHN2ZykpL2csXG5cdFx0XHR2aWRlbzogL1teXFxzXSsoXFwuKG1wNHxvZ3Z8d2VibSkpL2csXG5cdFx0XHQvLyBmYWxsYmFjayAkMSAvKD86aHR0cD9zPzpcXC9cXC8pPyg/Ond3d1xcLik/KD86eW91dHViZVxcLmNvbXx5b3V0dVxcLmJlKVxcLyg/OndhdGNoXFw/dj18ZW1iZWRcXC8pKFteJnw/fFxcL10qKS9nXG5cdFx0XHR5b3V0dWJlOiAvXigoPzpodHRwcz86KT9cXC9cXC8pPygoPzp3d3d8bSlcXC4pPygoPzp5b3V0dWJlKC1ub2Nvb2tpZSk/XFwuY29tfHlvdXR1LmJlKSkoXFwvKD86W1xcd1xcLV0rXFw/dj18ZW1iZWRcXC98dlxcLyk/KShbXFx3XFwtXSspKFxcUyspPyQvZywgLy8gJDZcblx0XHRcdHZpbWVvOiAvKD86aHR0cD9zPzpcXC9cXC8pPyg/Ond3d1xcLik/KD86dmltZW9cXC5jb20pXFwvKD86LipcXC8pPyguKykvZyAvLyAkMVxuXHRcdH07XG5cblx0XHR0aGlzLnNldHVwKCk7XG5cdH1cblxuXHRpbml0KCkge1xuXHRcdHRoaXMudXBkYXRlUmVmKCdjdXJzb3JSZWYnLCAnQ3Vyc29yRm9sbG93ZXInKTtcblxuXHRcdHRoaXMuX2NyZWF0ZUxpZ2h0Ym94KCk7XG5cdFx0dGhpcy5fYXR0YWNoRXZlbnRzKCk7XG5cdH1cblxuXHRkZXN0cm95KCkge1xuXHRcdHRoaXMuX2RldGFjaEV2ZW50cygpO1xuXHR9XG5cblx0X2F0dGFjaEV2ZW50cygpIHtcblx0XHR0aGlzLmxpZ2h0Ym94Lm9uKCdjb250ZW50TG9hZCcsIHRoaXMuX2hhbmRsZXJzLmNvbnRlbnRMb2FkKTtcblx0XHR0aGlzLmxpZ2h0Ym94Lm9uKCdjb250ZW50QWN0aXZhdGUnLCB0aGlzLl9oYW5kbGVycy5jb250ZW50QWN0aXZhdGUpO1xuXHRcdHRoaXMubGlnaHRib3gub24oJ2NvbnRlbnREZWFjdGl2YXRlJywgdGhpcy5faGFuZGxlcnMuY29udGVudERlYWN0aXZhdGUpO1xuXHRcdHRoaXMubGlnaHRib3gub24oJ2JlZm9yZU9wZW4nLCB0aGlzLl9oYW5kbGVycy5iZWZvcmVPcGVuKTtcblx0XHR0aGlzLmxpZ2h0Ym94Lm9uKCdmaXJzdFVwZGF0ZScsIHRoaXMuX2hhbmRsZXJzLmZpcnN0VXBkYXRlKTtcblx0XHR0aGlzLmxpZ2h0Ym94Lm9uKCdjbG9zZScsIHRoaXMuX2hhbmRsZXJzLmNsb3NlKTtcblx0XHR0aGlzLmxpZ2h0Ym94Lm9uKCd1aVJlZ2lzdGVyJywgdGhpcy5faGFuZGxlcnMudWlSZWdpc3Rlcik7XG5cblx0XHR0aGlzLmxpZ2h0Ym94Lm9uKCdwb2ludGVyRG93bicsIHRoaXMuX2hhbmRsZXJzLnBvaW50ZXJEb3duKTtcblx0XHR0aGlzLmxpZ2h0Ym94Lm9uKCdwb2ludGVyTW92ZScsIHRoaXMuX2hhbmRsZXJzLnBvaW50ZXJNb3ZlKTtcblx0XHR0aGlzLmxpZ2h0Ym94Lm9uKCdwb2ludGVyVXAnLCB0aGlzLl9oYW5kbGVycy5wb2ludGVyVXApO1xuXHR9XG5cblx0X2RldGFjaEV2ZW50cygpIHtcblx0XHRpZiAodGhpcy5saWdodGJveCkge1xuXHRcdFx0dGhpcy5saWdodGJveC5kZXN0cm95KCk7XG5cdFx0fVxuXHR9XG5cblx0X2NyZWF0ZUxpZ2h0Ym94KCkge1xuXHRcdHRoaXMubGlnaHRib3ggPSBuZXcgUGhvdG9Td2lwZUxpZ2h0Ym94KHtcblx0XHRcdGdhbGxlcnk6IHRoaXMuZWxlbWVudCxcblx0XHRcdGNoaWxkcmVuOiB0aGlzLm9wdGlvbnMuaXRlbXNTZWxlY3Rvcixcblx0XHRcdGJnT3BhY2l0eTogdGhpcy5vcHRpb25zLmJnT3BhY2l0eSxcblx0XHRcdGluaXRpYWxab29tTGV2ZWw6IHRoaXMub3B0aW9ucy5pbml0aWFsWm9vbUxldmVsLFxuXHRcdFx0c2Vjb25kYXJ5Wm9vbUxldmVsOiB0aGlzLm9wdGlvbnMuc2Vjb25kYXJ5Wm9vbUxldmVsLFxuXHRcdFx0bWF4Wm9vbUxldmVsOiB0aGlzLm9wdGlvbnMubWF4Wm9vbUxldmVsLFxuXHRcdFx0YXJyb3dQcmV2OiAhdGhpcy5fc2hvdWxkRGlzYWJsZURlZmF1bHRVSUVsZW1lbnQoJ2Fycm93cycpLFxuXHRcdFx0YXJyb3dOZXh0OiAhdGhpcy5fc2hvdWxkRGlzYWJsZURlZmF1bHRVSUVsZW1lbnQoJ2Fycm93cycpLFxuXHRcdFx0em9vbTogIXRoaXMuX3Nob3VsZERpc2FibGVEZWZhdWx0VUlFbGVtZW50KCd6b29tJyksXG5cdFx0XHRjbG9zZTogIXRoaXMuX3Nob3VsZERpc2FibGVEZWZhdWx0VUlFbGVtZW50KCdjbG9zZScpLFxuXHRcdFx0Y291bnRlcjogIXRoaXMuX3Nob3VsZERpc2FibGVEZWZhdWx0VUlFbGVtZW50KCdjb3VudGVyJyksXG5cdFx0XHRwcmVsb2FkZXI6ICF0aGlzLl9zaG91bGREaXNhYmxlRGVmYXVsdFVJRWxlbWVudCgncHJlbG9hZGVyJyksXG5cdFx0XHRwc3dwTW9kdWxlOiBQaG90b1N3aXBlXG5cdFx0fSk7XG5cdFx0dGhpcy5saWdodGJveC5hZGRGaWx0ZXIoJ2l0ZW1EYXRhJywgdGhpcy5faGFuZGxlcnMuaXRlbURhdGEpO1xuXHRcdHRoaXMubGlnaHRib3guaW5pdCgpO1xuXHR9XG5cblx0X29uUG9pbnRlckRvd24oZXZlbnQpIHtcblx0XHR0aGlzLnVwZGF0ZVJlZignY3Vyc29yUmVmJywgJ0N1cnNvckZvbGxvd2VyJyk7XG5cblx0XHRpZiAodGhpcy5jdXJzb3JSZWYgJiYgdGhpcy5jdXJzb3JSZWYuaW5zdGFuY2UpIHtcblx0XHRcdHRoaXMuY3Vyc29yUmVmLmluc3RhbmNlLnVwZGF0ZU1vdXNlKGV2ZW50Lm9yaWdpbmFsRXZlbnQpO1xuXHRcdH1cblx0fVxuXG5cdF9vblBvaW50ZXJNb3ZlKGV2ZW50KSB7XG5cdFx0aWYgKHRoaXMuY3Vyc29yUmVmICYmIHRoaXMuY3Vyc29yUmVmLmluc3RhbmNlKSB7XG5cdFx0XHR0aGlzLmN1cnNvclJlZi5pbnN0YW5jZS51cGRhdGVNb3VzZShldmVudC5vcmlnaW5hbEV2ZW50KTtcblx0XHR9XG5cdH1cblx0X29uUG9pbnRlclVwKGV2ZW50KSB7XG5cdFx0aWYgKHRoaXMuY3Vyc29yUmVmICYmIHRoaXMuY3Vyc29yUmVmLmluc3RhbmNlKSB7XG5cdFx0XHR0aGlzLmN1cnNvclJlZi5pbnN0YW5jZS51cGRhdGVNb3VzZShldmVudC5vcmlnaW5hbEV2ZW50KTtcblx0XHR9XG5cdH1cblxuXHRfb25CZWZvcmVPcGVuKCkge1xuXHRcdGFwcC51dGlsaXRpZXMuc2Nyb2xsTG9jayh0cnVlKTtcblxuXHRcdGFwcC51dGlsaXRpZXMuZGlzcGF0Y2hFdmVudCgnYXJ0cy9jb250YWluZXIvdmlzaWJpbGl0eScsIHtcblx0XHRcdGRldGFpbDoge1xuXHRcdFx0XHRjb250YWluZXI6IGFwcC5jb250YWluZXJFbCxcblx0XHRcdFx0dmlzaWJsZTogZmFsc2Vcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cdF9vbkZpcnN0VXBkYXRlKCkge1xuXHRcdGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLmNvbG9yVGhlbWUgPT09ICdzdHJpbmcnKSB7XG5cdFx0XHR0aGlzLmxpZ2h0Ym94LnBzd3AuZWxlbWVudC5zZXRBdHRyaWJ1dGUoJ2RhdGEtYXJ0cy1jb2xvci10aGVtZScsIHRoaXMub3B0aW9ucy5jb2xvclRoZW1lKTtcblx0XHR9XG5cdH1cblxuXHRfc2hvdWxkRGlzYWJsZURlZmF1bHRVSUVsZW1lbnQobmFtZSkge1xuXHRcdHJldHVybiAhdGhpcy5vcHRpb25zW25hbWVdIHx8ICghIXRoaXMub3B0aW9uc1tuYW1lXSAmJiAhIXRoaXMub3B0aW9uc1tuYW1lXS5jdXN0b20pO1xuXHR9XG5cblx0X29uVUlSZWdpc3RlcigpIHtcblx0XHRpZiAoISF0aGlzLm9wdGlvbnMuY2xvc2UgJiYgdGhpcy5fc2hvdWxkRGlzYWJsZURlZmF1bHRVSUVsZW1lbnQoJ2Nsb3NlJykpIHtcblx0XHRcdHRoaXMuX3JlZ2lzdGVyVUlDbG9zZSgpO1xuXHRcdH1cblxuXHRcdGlmICghIXRoaXMub3B0aW9ucy5hcnJvd3MgJiYgdGhpcy5fc2hvdWxkRGlzYWJsZURlZmF1bHRVSUVsZW1lbnQoJ2Fycm93cycpKSB7XG5cdFx0XHR0aGlzLl9yZWdpc3RlclVJQXJyb3dQcmV2KCk7XG5cdFx0XHR0aGlzLl9yZWdpc3RlclVJQXJyb3dOZXh0KCk7XG5cdFx0fVxuXG5cdFx0aWYgKCEhdGhpcy5vcHRpb25zLmNvdW50ZXIgJiYgdGhpcy5fc2hvdWxkRGlzYWJsZURlZmF1bHRVSUVsZW1lbnQoJ2NvdW50ZXInKSkge1xuXHRcdFx0dGhpcy5fcmVnaXN0ZXJVSUNvdW50ZXIoKTtcblx0XHR9XG5cblx0XHRpZiAoISF0aGlzLm9wdGlvbnMuY2FwdGlvbnMpIHtcblx0XHRcdHRoaXMuX3JlZ2lzdGVyVUlDYXB0aW9uKCk7XG5cdFx0fVxuXG5cdFx0aWYgKCEhdGhpcy5vcHRpb25zLnByZWxvYWRlciAmJiB0aGlzLl9zaG91bGREaXNhYmxlRGVmYXVsdFVJRWxlbWVudCgncHJlbG9hZGVyJykpIHtcblx0XHRcdHRoaXMuX3JlZ2lzdGVyVUlQcmVsb2FkZXIoKTtcblx0XHR9XG5cblx0XHRpZiAoISF0aGlzLm9wdGlvbnMuem9vbSAmJiB0aGlzLl9zaG91bGREaXNhYmxlRGVmYXVsdFVJRWxlbWVudCgnem9vbScpKSB7XG5cdFx0XHR0aGlzLl9yZWdpc3RlclVJWm9vbSgpO1xuXHRcdH1cblx0fVxuXG5cdF9yZWdpc3RlclVJWm9vbSgpIHtcblx0XHR0aGlzLmxpZ2h0Ym94LnBzd3AudWkucmVnaXN0ZXJFbGVtZW50KHtcblx0XHRcdG5hbWU6ICdjdXN0b21ab29tJyxcblx0XHRcdGNsYXNzTmFtZTogJ3Bzd3AtY3VzdG9tLWJ1dHRvbiBwc3dwLWN1c3RvbS1idXR0b25fbGVmdCBwc3dwLWN1c3RvbS1idXR0b25fem9vbScsXG5cdFx0XHRhcHBlbmRUbzogJ2JhcicsXG5cdFx0XHR0YWdOYW1lOiAnYScsXG5cdFx0XHRvbkNsaWNrOiAndG9nZ2xlWm9vbScsXG5cdFx0XHRvcmRlcjogMjAsXG5cdFx0XHRvbkluaXQ6IChlbCwgcHN3cCkgPT4ge1xuXHRcdFx0XHRlbC5zZXRBdHRyaWJ1dGUoJ2hyZWYnLCAnIycpO1xuXHRcdFx0XHRlbC5zZXRBdHRyaWJ1dGUoJ3JlbCcsICdub2ZvbGxvdycpO1xuXG5cdFx0XHRcdGxldCBpY29uQXR0cmlidXRlcyA9ICcnO1xuXG5cdFx0XHRcdGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLnpvb20uY3Vyc29yID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRcdGNvbnN0IGN1cnNvckF0dHJpYnV0ZXMgPSBkZWVwbWVyZ2Uoe1xuXHRcdFx0XHRcdFx0ZGVsZWdhdGU6IHRydWVcblx0XHRcdFx0XHR9LCB0aGlzLm9wdGlvbnMuem9vbS5jdXJzb3IpO1xuXG5cdFx0XHRcdFx0ZWwuc2V0QXR0cmlidXRlKCdkYXRhLWFydHMtY3Vyc29yLWZvbGxvd2VyLXRhcmdldCcsIEpTT04uc3RyaW5naWZ5KGN1cnNvckF0dHJpYnV0ZXMpKTtcblx0XHRcdFx0XHRpY29uQXR0cmlidXRlcyA9ICdkYXRhLWFydHMtY3Vyc29yLWZvbGxvd2VyLWRlbGVnYXRlZD1cInRydWVcIic7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRlbC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGFwcC5ob3ZlckVmZmVjdC5wcmV2ZW50RGVmYXVsdCk7XG5cdFx0XHRcdGVsLmlubmVySFRNTCA9IGA8ZGl2IGNsYXNzPVwicHN3cC1jdXN0b20tYnV0dG9uX196b29tLWljb24gbWF0ZXJpYWwtaWNvbnMgem9vbV9pblwiICR7aWNvbkF0dHJpYnV0ZXN9PjwvZGl2PmAudHJpbSgpO1xuXHRcdFx0fVxuXHRcdH0pO1xuXHR9XG5cblx0X3JlZ2lzdGVyVUlQcmVsb2FkZXIoKSB7XG5cdFx0dGhpcy5saWdodGJveC5wc3dwLnVpLnJlZ2lzdGVyRWxlbWVudCh7XG5cdFx0XHRuYW1lOiAnY3VzdG9tUHJlbG9hZGVyJyxcblx0XHRcdGNsYXNzTmFtZTogJ3Bzd3AtY3VzdG9tLWJ1dHRvbiBwc3dwLWN1c3RvbS1wcmVsb2FkZXInLFxuXHRcdFx0YXBwZW5kVG86ICdyb290Jyxcblx0XHRcdG9yZGVyOiA3LFxuXHRcdFx0b25Jbml0OiAoZWwsIHBzd3ApID0+IHtcblx0XHRcdFx0bGV0IGlzVmlzaWJsZTtcblx0XHRcdFx0bGV0IGRlbGF5VGltZW91dDtcblxuXHRcdFx0XHRlbC5pbm5lckhUTUwgPSBgPHN2ZyB2aWV3Qm94PVwiMjUgMjUgNTAgNTBcIj48Y2lyY2xlIGN4PVwiNTBcIiBjeT1cIjUwXCIgcj1cIjI0XCIgZmlsbD1cIm5vbmVcIj48L2NpcmNsZT48L3N2Zz5gO1xuXG5cdFx0XHRcdGNvbnN0IHRvZ2dsZUluZGljYXRvckNsYXNzID0gKGNsYXNzTmFtZSwgYWRkKSA9PiB7XG5cdFx0XHRcdFx0ZWwuY2xhc3NMaXN0W2FkZCA/ICdhZGQnIDogJ3JlbW92ZSddKCdwc3dwX19wcmVsb2FkZXItLScgKyBjbGFzc05hbWUpO1xuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdGNvbnN0IHNldEluZGljYXRvclZpc2liaWxpdHkgPSAodmlzaWJsZSkgPT4ge1xuXHRcdFx0XHRcdGlmIChpc1Zpc2libGUgIT09IHZpc2libGUpIHtcblx0XHRcdFx0XHRcdGlzVmlzaWJsZSA9IHZpc2libGU7XG5cdFx0XHRcdFx0XHR0b2dnbGVJbmRpY2F0b3JDbGFzcygnYWN0aXZlJywgdmlzaWJsZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXG5cdFx0XHRcdGNvbnN0IHVwZGF0ZVByZWxvYWRlclZpc2liaWxpdHkgPSAoKSA9PiB7XG5cdFx0XHRcdFx0aWYgKCFwc3dwLmN1cnJTbGlkZS5jb250ZW50LmlzTG9hZGluZygpKSB7XG5cdFx0XHRcdFx0XHRzZXRJbmRpY2F0b3JWaXNpYmlsaXR5KGZhbHNlKTtcblx0XHRcdFx0XHRcdGlmIChkZWxheVRpbWVvdXQpIHtcblx0XHRcdFx0XHRcdFx0Y2xlYXJUaW1lb3V0KGRlbGF5VGltZW91dCk7XG5cdFx0XHRcdFx0XHRcdGRlbGF5VGltZW91dCA9IG51bGw7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRyZXR1cm47XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0aWYgKCFkZWxheVRpbWVvdXQpIHtcblx0XHRcdFx0XHRcdC8vIGRpc3BsYXkgbG9hZGluZyBpbmRpY2F0b3Igd2l0aCBkZWxheVxuXHRcdFx0XHRcdFx0ZGVsYXlUaW1lb3V0ID0gc2V0VGltZW91dCgoKSA9PiB7XG5cdFx0XHRcdFx0XHRcdHNldEluZGljYXRvclZpc2liaWxpdHkocHN3cC5jdXJyU2xpZGUuY29udGVudC5pc0xvYWRpbmcoKSk7XG5cdFx0XHRcdFx0XHRcdGRlbGF5VGltZW91dCA9IG51bGw7XG5cdFx0XHRcdFx0XHR9LCBwc3dwLm9wdGlvbnMucHJlbG9hZGVyRGVsYXkpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fTtcblxuXHRcdFx0XHRwc3dwLm9uKCdjaGFuZ2UnLCB1cGRhdGVQcmVsb2FkZXJWaXNpYmlsaXR5KTtcblxuXHRcdFx0XHRwc3dwLm9uKCdsb2FkQ29tcGxldGUnLCAoZSkgPT4ge1xuXHRcdFx0XHRcdGlmIChwc3dwLmN1cnJTbGlkZSA9PT0gZS5zbGlkZSkge1xuXHRcdFx0XHRcdFx0dXBkYXRlUHJlbG9hZGVyVmlzaWJpbGl0eSgpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSk7XG5cblx0XHRcdFx0Ly8gZXhwb3NlIHRoZSBtZXRob2Rcblx0XHRcdFx0cHN3cC51aS51cGRhdGVQcmVsb2FkZXJWaXNpYmlsaXR5ID0gdXBkYXRlUHJlbG9hZGVyVmlzaWJpbGl0eTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cdF9yZWdpc3RlclVJQ2FwdGlvbigpIHtcblx0XHR0aGlzLmxpZ2h0Ym94LnBzd3AudWkucmVnaXN0ZXJFbGVtZW50KHtcblx0XHRcdG5hbWU6ICdjdXN0b21DYXB0aW9uJyxcblx0XHRcdGNsYXNzTmFtZTogJ3Bzd3AtY3VzdG9tLWNhcHRpb24nLFxuXHRcdFx0b3JkZXI6IDksXG5cdFx0XHRpc0J1dHRvbjogZmFsc2UsXG5cdFx0XHRhcHBlbmRUbzogJ3Jvb3QnLFxuXHRcdFx0aHRtbDogJycsXG5cdFx0XHRvbkluaXQ6IChlbCwgcHN3cCkgPT4ge1xuXHRcdFx0XHR0aGlzLmxpZ2h0Ym94LnBzd3Aub24oJ2NoYW5nZScsICgpID0+IHtcblx0XHRcdFx0XHRjb25zdCBjdXJyZW50U2xpZGVFbGVtZW50ID0gdGhpcy5saWdodGJveC5wc3dwLmN1cnJTbGlkZS5kYXRhLmVsZW1lbnQ7XG5cblx0XHRcdFx0XHRsZXQgY2FwdGlvbkhUTUwgPSAnJztcblxuXHRcdFx0XHRcdGlmIChjdXJyZW50U2xpZGVFbGVtZW50KSB7XG5cdFx0XHRcdFx0XHRjb25zdCBjYXB0aW9uRnJvbUF0dHJpYnV0ZSA9IGN1cnJlbnRTbGlkZUVsZW1lbnQuZ2V0QXR0cmlidXRlKCdkYXRhLWNhcHRpb24nKTtcblxuXHRcdFx0XHRcdFx0Ly8gRXhwbGljaXRseSBzZXQgY2FwdGlvblxuXHRcdFx0XHRcdFx0aWYgKGNhcHRpb25Gcm9tQXR0cmlidXRlKSB7XG5cdFx0XHRcdFx0XHRcdGNhcHRpb25IVE1MID0gYDxkaXYgY2xhc3M9XCJwc3dwLWN1c3RvbS1jYXB0aW9uX19jb250ZW50XCI+JHtjYXB0aW9uRnJvbUF0dHJpYnV0ZX08L2Rpdj5gO1xuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0Ly8gVHJ5IHRvIGdldCBjYXB0aW9uIGZyb20gdGh1bWJuYWlsIGFsdCBhdHRyaWJ1dGVcblx0XHRcdFx0XHRcdFx0Y29uc3QgY3VycmVudEltYWdlID0gY3VycmVudFNsaWRlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpbWcnKTtcblxuXHRcdFx0XHRcdFx0XHRpZiAoY3VycmVudEltYWdlKSB7XG5cdFx0XHRcdFx0XHRcdFx0Y29uc3QgYWx0Q29udGVudHMgPSBjdXJyZW50SW1hZ2UuZ2V0QXR0cmlidXRlKCdhbHQnKTtcblxuXHRcdFx0XHRcdFx0XHRcdGlmIChhbHRDb250ZW50cyAmJiBhbHRDb250ZW50cy5sZW5ndGgpIHtcblx0XHRcdFx0XHRcdFx0XHRcdGNhcHRpb25IVE1MID0gYDxkaXYgY2xhc3M9XCJwc3dwLWN1c3RvbS1jYXB0aW9uX19jb250ZW50XCI+JHthbHRDb250ZW50c308L2Rpdj5gO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGVsLmlubmVySFRNTCA9IGNhcHRpb25IVE1MIHx8ICcnO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cdF9yZWdpc3RlclVJQ291bnRlcigpIHtcblx0XHR0aGlzLmxpZ2h0Ym94LnBzd3AudWkucmVnaXN0ZXJFbGVtZW50KHtcblx0XHRcdG5hbWU6ICdjdXN0b21Db3VudGVyJyxcblx0XHRcdGNsYXNzTmFtZTogJ3Bzd3AtY3VzdG9tLWJ1dHRvbiBwc3dwLWN1c3RvbS1idXR0b25fbGVmdCBwc3dwLWN1c3RvbS1idXR0b25fY291bnRlcicsXG5cdFx0XHRhcHBlbmRUbzogJ2JhcicsXG5cdFx0XHRvcmRlcjogNSxcblx0XHRcdG9uSW5pdDogKGVsLCBwc3dwKSA9PiB7XG5cdFx0XHRcdHBzd3Aub24oJ2NoYW5nZScsICgpID0+IHtcblx0XHRcdFx0XHRlbC5pbm5lclRleHQgPSAocHN3cC5jdXJySW5kZXggKyAxKSArXG5cdFx0XHRcdFx0XHRwc3dwLm9wdGlvbnMuaW5kZXhJbmRpY2F0b3JTZXAgK1xuXHRcdFx0XHRcdFx0cHN3cC5nZXROdW1JdGVtcygpO1xuXHRcdFx0XHR9KTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cdF9yZWdpc3RlclVJQ2xvc2UoKSB7XG5cdFx0dGhpcy5saWdodGJveC5wc3dwLnVpLnJlZ2lzdGVyRWxlbWVudCh7XG5cdFx0XHRuYW1lOiAnY3VzdG9tQ2xvc2UnLFxuXHRcdFx0Y2xhc3NOYW1lOiAncHN3cC1jdXN0b20tYnV0dG9uIHBzd3AtY3VzdG9tLWJ1dHRvbl9yaWdodCBwc3dwLWN1c3RvbS1idXR0b25fY2xvc2UnLFxuXHRcdFx0YXBwZW5kVG86ICdiYXInLFxuXHRcdFx0dGFnTmFtZTogJ2EnLFxuXHRcdFx0b25DbGljazogJ2Nsb3NlJyxcblx0XHRcdG9yZGVyOiAyMCxcblx0XHRcdG9uSW5pdDogKGVsLCBwc3dwKSA9PiB7XG5cdFx0XHRcdGVsLnNldEF0dHJpYnV0ZSgnaHJlZicsICcjJyk7XG5cdFx0XHRcdGVsLnNldEF0dHJpYnV0ZSgncmVsJywgJ25vZm9sbG93Jyk7XG5cblx0XHRcdFx0bGV0IHdyYXBwZXJMaW5lc0F0dHJpYnV0ZXMgPSAnJztcblxuXHRcdFx0XHRpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5jbG9zZS5jdXJzb3IgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdFx0Y29uc3QgY3Vyc29yQXR0cmlidXRlcyA9IGRlZXBtZXJnZSh7XG5cdFx0XHRcdFx0XHRkZWxlZ2F0ZTogdHJ1ZVxuXHRcdFx0XHRcdH0sIHRoaXMub3B0aW9ucy5jbG9zZS5jdXJzb3IpO1xuXG5cdFx0XHRcdFx0ZWwuc2V0QXR0cmlidXRlKCdkYXRhLWFydHMtY3Vyc29yLWZvbGxvd2VyLXRhcmdldCcsIEpTT04uc3RyaW5naWZ5KGN1cnNvckF0dHJpYnV0ZXMpKTtcblx0XHRcdFx0XHR3cmFwcGVyTGluZXNBdHRyaWJ1dGVzID0gJ2RhdGEtYXJ0cy1jdXJzb3ItZm9sbG93ZXItZGVsZWdhdGVkPVwidHJ1ZVwiJztcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgYXBwLmhvdmVyRWZmZWN0LnByZXZlbnREZWZhdWx0KTtcblxuXHRcdFx0XHRlbC5pbm5lckhUTUwgPSBgXG5cdFx0XHRcdFx0PGRpdiBjbGFzcz1cInBzd3AtY3VzdG9tLWJ1dHRvbl9fbGFiZWwgbWUtMlwiPlxuXHRcdFx0XHRcdFx0PGRpdiBjbGFzcz1cInBzd3AtY3VzdG9tLWJ1dHRvbl9fY2xvc2UtbGFiZWwtY2xvc2VcIj4ke3RoaXMub3B0aW9ucy5jbG9zZS5sYWJlbCB8fCAnJ308L2Rpdj5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJwc3dwLWN1c3RvbS1idXR0b25fX2Nsb3NlLWxhYmVsLWhvdmVyXCI+JHt0aGlzLm9wdGlvbnMuY2xvc2UubGFiZWxIb3ZlciB8fCAnJ308L2Rpdj5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0XHQ8ZGl2IGNsYXNzPVwicHN3cC1jdXN0b20tYnV0dG9uX19jbG9zZS13cmFwcGVyLWxpbmVzXCIgJHt3cmFwcGVyTGluZXNBdHRyaWJ1dGVzfT5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJwc3dwLWN1c3RvbS1idXR0b25fX2Nsb3NlLWxpbmVcIj48L2Rpdj5cblx0XHRcdFx0XHRcdDxkaXYgY2xhc3M9XCJwc3dwLWN1c3RvbS1idXR0b25fX2Nsb3NlLWxpbmVcIj48L2Rpdj5cblx0XHRcdFx0XHQ8L2Rpdj5cblx0XHRcdFx0YC50cmltKCk7XG5cdFx0XHR9XG5cdFx0fSk7XG5cdH1cblxuXHRfcmVnaXN0ZXJVSUFycm93UHJldigpIHtcblx0XHR0aGlzLmxpZ2h0Ym94LnBzd3AudWkucmVnaXN0ZXJFbGVtZW50KHtcblx0XHRcdG5hbWU6ICdjdXN0b21BcnJvd1ByZXYnLFxuXHRcdFx0Y2xhc3NOYW1lOiAnc2xpZGVyLWFycm93IHBzd3AtY3VzdG9tLWFycm93LXByZXYnLFxuXHRcdFx0YXBwZW5kVG86ICd3cmFwcGVyJyxcblx0XHRcdHRhZ05hbWU6ICdkaXYnLFxuXHRcdFx0b25DbGljazogJ3ByZXYnLFxuXHRcdFx0b3JkZXI6IDEwLFxuXHRcdFx0b25Jbml0OiAoZWwsIHBzd3ApID0+IHtcblx0XHRcdFx0bGV0IGJ1dHRvbkF0dHJpYnV0ZXMgPSAnJztcblxuXHRcdFx0XHRpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5hcnJvd3MuY3Vyc29yID09PSAnb2JqZWN0Jykge1xuXHRcdFx0XHRcdGJ1dHRvbkF0dHJpYnV0ZXMgPSBgZGF0YS1hcnRzLWN1cnNvci1mb2xsb3dlci10YXJnZXQ9JHtKU09OLnN0cmluZ2lmeSh0aGlzLm9wdGlvbnMuYXJyb3dzLmN1cnNvcil9YDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGVsLmlubmVySFRNTCA9IGBcblx0XHRcdFx0XHQ8YnV0dG9uIGNsYXNzPVwiYnV0dG9uLWNpcmNsZSBzbGlkZXItYXJyb3dfX2J1dHRvblwiICR7YnV0dG9uQXR0cmlidXRlc30+XG5cdFx0XHRcdFx0XHQ8c3BhbiBjbGFzcz1cInNsaWRlci1hcnJvd19faW5uZXJcIj5cblx0XHRcdFx0XHRcdFx0PHN2ZyBjbGFzcz1cInN2Zy1hcnJvdyBzdmctYXJyb3dfbGVmdFwiIHdpZHRoPVwiNDFcIiBoZWlnaHQ9XCIxMlwiIHZpZXdCb3g9XCIwIDAgNDEgMTJcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIk02IDd2NUwwIDZsNi02djVoMzV2MnpcIiBmaWxsLXJ1bGU9XCJldmVub2RkXCI+PC9wYXRoPjwvc3ZnPlxuXHRcdFx0XHRcdFx0PC9zcGFuPlxuXHRcdFx0XHRcdDwvYnV0dG9uPlxuXHRcdFx0XHRgLnRyaW0oKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cdF9yZWdpc3RlclVJQXJyb3dOZXh0KCkge1xuXHRcdHRoaXMubGlnaHRib3gucHN3cC51aS5yZWdpc3RlckVsZW1lbnQoe1xuXHRcdFx0bmFtZTogJ2N1c3RvbUFycm93TmV4dCcsXG5cdFx0XHRjbGFzc05hbWU6ICdzbGlkZXItYXJyb3cgcHN3cC1jdXN0b20tYXJyb3ctbmV4dCcsXG5cdFx0XHRhcHBlbmRUbzogJ3dyYXBwZXInLFxuXHRcdFx0dGFnTmFtZTogJ2RpdicsXG5cdFx0XHRvbkNsaWNrOiAnbmV4dCcsXG5cdFx0XHRvcmRlcjogMTEsXG5cdFx0XHRvbkluaXQ6IChlbCwgcHN3cCkgPT4ge1xuXHRcdFx0XHRsZXQgYnV0dG9uQXR0cmlidXRlcyA9ICcnO1xuXG5cdFx0XHRcdGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLmFycm93cy5jdXJzb3IgPT09ICdvYmplY3QnKSB7XG5cdFx0XHRcdFx0YnV0dG9uQXR0cmlidXRlcyA9IGBkYXRhLWFydHMtY3Vyc29yLWZvbGxvd2VyLXRhcmdldD0ke0pTT04uc3RyaW5naWZ5KHRoaXMub3B0aW9ucy5hcnJvd3MuY3Vyc29yKX1gO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZWwuaW5uZXJIVE1MID0gYFxuXHRcdFx0XHRcdDxidXR0b24gY2xhc3M9XCJidXR0b24tY2lyY2xlIHNsaWRlci1hcnJvd19fYnV0dG9uXCIgJHtidXR0b25BdHRyaWJ1dGVzfT5cblx0XHRcdFx0XHRcdDxzcGFuIGNsYXNzPVwic2xpZGVyLWFycm93X19pbm5lclwiPlxuXHRcdFx0XHRcdFx0XHQ8c3ZnIGNsYXNzPVwic3ZnLWFycm93IHN2Zy1hcnJvd19yaWdodFwiIHdpZHRoPVwiNDFcIiBoZWlnaHQ9XCIxMlwiIHZpZXdCb3g9XCIwIDAgNDEgMTJcIiB4bWxucz1cImh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnXCI+PHBhdGggZD1cIk0zNSA1VjBsNS45OTkgNkwzNSAxMlY3SDBWNXpcIiBmaWxsLXJ1bGU9XCJldmVub2RkXCI+PC9wYXRoPjwvc3ZnPlxuXHRcdFx0XHRcdFx0PC9zcGFuPlxuXHRcdFx0XHRcdDwvYnV0dG9uPlxuXHRcdFx0XHRgLnRyaW0oKTtcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cdF9vbkNsb3NlKCkge1xuXHRcdGNvbnN0IGRlbGF5ID0gdHlwZW9mIHRoaXMubGlnaHRib3gucHN3cC5vcHRpb25zLmhpZGVBbmltYXRpb25EdXJhdGlvbiA9PT0gJ251bWJlcicgPyB0aGlzLmxpZ2h0Ym94LnBzd3Aub3B0aW9ucy5oaWRlQW5pbWF0aW9uRHVyYXRpb24gLyAxMDAwIDogMDtcblxuXHRcdGFwcC51dGlsaXRpZXMuc2Nyb2xsTG9jayhmYWxzZSk7XG5cblx0XHR0aGlzLnVwZGF0ZVJlZignY3Vyc29yUmVmJywgJ0N1cnNvckZvbGxvd2VyJyk7XG5cblx0XHRpZiAodGhpcy5jdXJzb3JSZWYgJiYgdGhpcy5jdXJzb3JSZWYuaW5zdGFuY2UpIHtcblx0XHRcdHRoaXMuY3Vyc29yUmVmLmluc3RhbmNlLnJlc2V0KCk7XG5cdFx0fVxuXG5cdFx0Z3NhcC5kZWxheWVkQ2FsbChkZWxheSwgKCkgPT4ge1xuXHRcdFx0YXBwLnV0aWxpdGllcy5kaXNwYXRjaEV2ZW50KCdhcnRzL2NvbnRhaW5lci92aXNpYmlsaXR5Jywge1xuXHRcdFx0XHRkZXRhaWw6IHtcblx0XHRcdFx0XHRjb250YWluZXI6IGFwcC5jb250YWluZXJFbCxcblx0XHRcdFx0XHR2aXNpYmxlOiB0cnVlXG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH0pO1xuXHR9XG5cblx0X29uSXRlbURhdGEoaXRlbURhdGEsIGluZGV4KSB7XG5cdFx0Y29uc3Rcblx0XHRcdGF1dG9wbGF5ID0gaXRlbURhdGEuZWxlbWVudC5nZXRBdHRyaWJ1dGUoJ2RhdGEtYXV0b3BsYXknKSxcblx0XHRcdHVybCA9IGl0ZW1EYXRhLmVsZW1lbnQuZ2V0QXR0cmlidXRlKCdocmVmJyk7XG5cblx0XHRpZiAodXJsKSB7XG5cdFx0XHRjb25zdCB0eXBlID0gdGhpcy5fZ2V0TWVkaWFUeXBlRnJvbVVSTCh1cmwpO1xuXG5cdFx0XHRPYmplY3QuYXNzaWduKGl0ZW1EYXRhLCB7XG5cdFx0XHRcdHR5cGVcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdGlmIChhdXRvcGxheSAmJiBhdXRvcGxheSAhPT0gJ2ZhbHNlJykge1xuXHRcdFx0T2JqZWN0LmFzc2lnbihpdGVtRGF0YSwge1xuXHRcdFx0XHRhdXRvcGxheTogdHJ1ZVxuXHRcdFx0fSk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGl0ZW1EYXRhO1xuXHR9XG5cblx0X29uQ29udGVudExvYWQoZXZlbnQpIHtcblx0XHRjb25zdCB7XG5cdFx0XHRjb250ZW50XG5cdFx0fSA9IGV2ZW50O1xuXG5cdFx0aWYgKGNvbnRlbnQudHlwZSAmJiBjb250ZW50LmRhdGEuc3JjICYmIGNvbnRlbnQudHlwZSAhPT0gJ2ltYWdlJykge1xuXHRcdFx0ZXZlbnQucHJldmVudERlZmF1bHQoKTtcblxuXHRcdFx0Y29udGVudC5lbGVtZW50ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG5cdFx0XHRjb250ZW50LmVsZW1lbnQuY2xhc3NOYW1lID0gJ3Bzd3BfX3dyYXBwZXItZW1iZWQnO1xuXG5cdFx0XHRzd2l0Y2ggKGNvbnRlbnQudHlwZSkge1xuXHRcdFx0XHRjYXNlICd2aWRlbyc6XG5cdFx0XHRcdFx0LyoqXG5cdFx0XHRcdFx0ICogU2VsZiBob3N0ZWQgdmlkZW9cblx0XHRcdFx0XHQgKi9cblx0XHRcdFx0XHR0aGlzLl9yZW5kZXJIVE1MNVZpZGVvKGNvbnRlbnQuZWxlbWVudCwgY29udGVudC5kYXRhLnNyYywgY29udGVudC5kYXRhLmF1dG9wbGF5KTtcblx0XHRcdFx0XHRicmVhaztcblxuXHRcdFx0XHRjYXNlICd5b3V0dWJlJzpcblx0XHRcdFx0XHQvKipcblx0XHRcdFx0XHQgKiBZb3VUdWJlIGlGcmFtZVxuXHRcdFx0XHRcdCAqL1xuXHRcdFx0XHRcdHRoaXMuX3JlbmRlcllvdVR1YmVJRnJhbWUoY29udGVudC5lbGVtZW50LCBjb250ZW50LmRhdGEuc3JjLCBjb250ZW50LmRhdGEuYXV0b3BsYXkpO1xuXHRcdFx0XHRcdGJyZWFrO1xuXG5cdFx0XHRcdGNhc2UgJ3ZpbWVvJzpcblx0XHRcdFx0XHQvKipcblx0XHRcdFx0XHQgKiBWaW1lbyBpRnJhbWVcblx0XHRcdFx0XHQgKi9cblx0XHRcdFx0XHR0aGlzLl9yZW5kZXJWaW1lb0lGcmFtZShjb250ZW50LmVsZW1lbnQsIGNvbnRlbnQuZGF0YS5zcmMsIGNvbnRlbnQuZGF0YS5hdXRvcGxheSk7XG5cdFx0XHRcdFx0YnJlYWs7XG5cblx0XHRcdFx0ZGVmYXVsdDpcblx0XHRcdFx0XHQvKipcblx0XHRcdFx0XHQgKiBGYWxsYmFjayBpRnJhbWVcblx0XHRcdFx0XHQgKi9cblx0XHRcdFx0XHR0aGlzLl9yZW5kZXJJRnJhbWUoY29udGVudC5lbGVtZW50LCBjb250ZW50LmRhdGEuc3JjKTtcblx0XHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRfb25Db250ZW50QWN0aXZhdGUoZXZlbnQpIHtcblx0XHRjb25zdCB7XG5cdFx0XHRjb250ZW50XG5cdFx0fSA9IGV2ZW50O1xuXG5cdFx0aWYgKGNvbnRlbnQuZGF0YS5hdXRvcGxheSAmJiBjb250ZW50LmluZGV4ID09PSBjb250ZW50Lmluc3RhbmNlLmN1cnJJbmRleCkge1xuXHRcdFx0dGhpcy5fcGxheVZpZGVvKGNvbnRlbnQpO1xuXHRcdH1cblx0fVxuXG5cdF9vbkNvbnRlbnREZWFjdGl2YXRlKGV2ZW50KSB7XG5cdFx0Y29uc3Qge1xuXHRcdFx0Y29udGVudFxuXHRcdH0gPSBldmVudDtcblxuXHRcdHRoaXMuX3BhdXNlVmlkZW8oY29udGVudCk7XG5cdH1cblxuXHRfcmVuZGVySFRNTDVWaWRlbyhlbGVtZW50LCBzcmMpIHtcblx0XHRjb25zdCB2aWRlbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3ZpZGVvJyk7XG5cblx0XHR2aWRlby5zZXRBdHRyaWJ1dGUoJ3NyYycsIHNyYyk7XG5cdFx0dmlkZW8uc2V0QXR0cmlidXRlKCdjb250cm9scycsIHRydWUpO1xuXHRcdHZpZGVvLnNldEF0dHJpYnV0ZSgncGxheXNpbmxpbmUnLCB0cnVlKTtcblx0XHR2aWRlby5zZXRBdHRyaWJ1dGUoJ2F1dG9wbGF5JywgdHJ1ZSk7XG5cblx0XHRlbGVtZW50LmFwcGVuZENoaWxkKHZpZGVvKTtcblx0fVxuXG5cdF9yZW5kZXJZb3VUdWJlSUZyYW1lKGVsZW1lbnQsIHNyYywgYXV0b3BsYXkgPSBmYWxzZSkge1xuXHRcdGNvbnN0XG5cdFx0XHRpZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKSxcblx0XHRcdHBhcmFtID0gYXV0b3BsYXkgPyAnYXV0b3BsYXk9MScgOiAnJyxcblx0XHRcdHVybCA9IHNyYy5yZXBsYWNlKHRoaXMuX3BhdHRlcm5zLnlvdXR1YmUsIGBodHRwczovL3d3dy55b3V0dWJlLmNvbS9lbWJlZC8kNj8ke3BhcmFtfSZlbmFibGVqc2FwaT0xYCk7XG5cblx0XHRpZnJhbWUuY2xhc3NOYW1lID0gJ2lmcmFtZS15b3V0dWJlJztcblx0XHRpZnJhbWUuc2V0QXR0cmlidXRlKCd3aWR0aCcsICcxMDAlJyk7XG5cdFx0aWZyYW1lLnNldEF0dHJpYnV0ZSgnaGVpZ2h0JywgJzEwMCUnKTtcblx0XHRpZnJhbWUuc2V0QXR0cmlidXRlKCdzcmMnLCB1cmwpO1xuXHRcdGlmcmFtZS5zZXRBdHRyaWJ1dGUoJ2ZyYW1lYm9yZGVyJywgJzAnKTtcblx0XHRpZnJhbWUuc2V0QXR0cmlidXRlKCdhbGxvdycsICdhdXRvcGxheTsgYWNjZWxlcm9tZXRlcjsgZW5jcnlwdGVkLW1lZGlhOyBneXJvc2NvcGU7IHBpY3R1cmUtaW4tcGljdHVyZTsgZnVsbHNjcmVlbicpO1xuXG5cdFx0ZWxlbWVudC5hcHBlbmRDaGlsZChpZnJhbWUpO1xuXHR9XG5cblx0X3JlbmRlclZpbWVvSUZyYW1lKGVsZW1lbnQsIHNyYywgYXV0b3BsYXkgPSBmYWxzZSkge1xuXHRcdGNvbnN0XG5cdFx0XHRpZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKSxcblx0XHRcdHBhcmFtID0gYXV0b3BsYXkgPyAnYXV0b3BsYXk9MScgOiAnJyxcblx0XHRcdHVybCA9IHNyYy5yZXBsYWNlKHRoaXMuX3BhdHRlcm5zLnZpbWVvLCBgaHR0cHM6Ly9wbGF5ZXIudmltZW8uY29tL3ZpZGVvLyQxPyR7cGFyYW19YCk7XG5cblx0XHRpZnJhbWUuY2xhc3NOYW1lID0gJ2lmcmFtZS12aW1lbyc7XG5cdFx0aWZyYW1lLnNldEF0dHJpYnV0ZSgnd2lkdGgnLCAnMTAwJScpO1xuXHRcdGlmcmFtZS5zZXRBdHRyaWJ1dGUoJ2hlaWdodCcsICcxMDAlJyk7XG5cdFx0aWZyYW1lLnNldEF0dHJpYnV0ZSgnc3JjJywgdXJsKTtcblx0XHRpZnJhbWUuc2V0QXR0cmlidXRlKCdmcmFtZWJvcmRlcicsICcwJyk7XG5cdFx0aWZyYW1lLnNldEF0dHJpYnV0ZSgnYWxsb3cnLCAnYXV0b3BsYXk7IGZ1bGxzY3JlZW4nKTtcblxuXHRcdGVsZW1lbnQuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcblx0fVxuXG5cdF9yZW5kZXJJRnJhbWUoZWxlbWVudCwgc3JjKSB7XG5cdFx0Y29uc3QgaWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG5cblx0XHRpZnJhbWUuc2V0QXR0cmlidXRlKCd3aWR0aCcsICcxMDAlJyk7XG5cdFx0aWZyYW1lLnNldEF0dHJpYnV0ZSgnaGVpZ2h0JywgJzEwMCUnKTtcblx0XHRpZnJhbWUuc2V0QXR0cmlidXRlKCdzcmMnLCBzcmMpO1xuXHRcdGlmcmFtZS5zZXRBdHRyaWJ1dGUoJ2ZyYW1lYm9yZGVyJywgJzAnKTtcblx0XHRpZnJhbWUuc2V0QXR0cmlidXRlKCdhbGxvdycsICdhdXRvcGxheTsgZnVsbHNjcmVlbicpO1xuXG5cdFx0ZWxlbWVudC5hcHBlbmRDaGlsZChpZnJhbWUpO1xuXHR9XG5cblx0X2dldE1lZGlhVHlwZUZyb21VUkwodXJsKSB7XG5cdFx0Zm9yIChjb25zdCBbbmFtZSwgcGF0dGVybl0gb2YgT2JqZWN0LmVudHJpZXModGhpcy5fcGF0dGVybnMpKSB7XG5cdFx0XHRpZiAodXJsLm1hdGNoKHBhdHRlcm4pKSB7XG5cdFx0XHRcdHJldHVybiBgJHtuYW1lfWA7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuICdpZnJhbWUnO1xuXHR9XG5cblx0X3BsYXlWaWRlbyhjb250ZW50KSB7XG5cdFx0c3dpdGNoIChjb250ZW50LnR5cGUpIHtcblx0XHRcdGNhc2UgJ3ZpZGVvJzoge1xuXHRcdFx0XHRjb25zdCB2aWRlbyA9IGNvbnRlbnQuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCd2aWRlbycpO1xuXG5cdFx0XHRcdHRoaXMuX3BsYXlIVE1MVmlkZW8odmlkZW8pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdC8qKlxuXHRcdFx0ICogWW91VHViZSBpRnJhbWVcblx0XHRcdCAqL1xuXHRcdFx0Y2FzZSAneW91dHViZSc6IHtcblx0XHRcdFx0Y29uc3QgaWZyYW1lID0gY29udGVudC5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lmcmFtZScpO1xuXG5cdFx0XHRcdGlmIChpZnJhbWUpIHtcblx0XHRcdFx0XHRpZiAoaWZyYW1lLmNvbnRlbnRXaW5kb3cpIHtcblx0XHRcdFx0XHRcdHRoaXMuX3BsYXlJRnJhbWVZb3VUdWJlKGlmcmFtZSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGlmcmFtZS5vbmxvYWQgPSAoKSA9PiB7XG5cdFx0XHRcdFx0XHRcdHNldFRpbWVvdXQoKCkgPT4ge1xuXHRcdFx0XHRcdFx0XHRcdHRoaXMuX3BsYXlJRnJhbWVZb3VUdWJlKGlmcmFtZSk7XG5cdFx0XHRcdFx0XHRcdH0sIDEwMCk7XG5cdFx0XHRcdFx0XHR9O1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblxuXHRcdFx0LyoqXG5cdFx0XHQgKiBWaW1lbyBpRnJhbWVcblx0XHRcdCAqL1xuXHRcdFx0Y2FzZSAndmltZW8nOiB7XG5cdFx0XHRcdGNvbnN0IGlmcmFtZSA9IGNvbnRlbnQuZWxlbWVudC5xdWVyeVNlbGVjdG9yKCdpZnJhbWUnKTtcblxuXHRcdFx0XHRpZiAoaWZyYW1lKSB7XG5cdFx0XHRcdFx0aWYgKGlmcmFtZS5jb250ZW50V2luZG93KSB7XG5cdFx0XHRcdFx0XHR0aGlzLl9wbGF5SUZyYW1lVmltZW8oaWZyYW1lKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0aWZyYW1lLmFkZEV2ZW50TGlzdGVuZXIoJ2xvYWQnLCAoKSA9PiB7XG5cdFx0XHRcdFx0XHRcdHRoaXMuX3BsYXlJRnJhbWVWaW1lbyhpZnJhbWUpO1xuXHRcdFx0XHRcdFx0fSwgdHJ1ZSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdGJyZWFrO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdF9wYXVzZVZpZGVvKGNvbnRlbnQpIHtcblx0XHRzd2l0Y2ggKGNvbnRlbnQudHlwZSkge1xuXHRcdFx0Y2FzZSAndmlkZW8nOiB7XG5cdFx0XHRcdGNvbnN0IHZpZGVvID0gY29udGVudC5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ3ZpZGVvJyk7XG5cblx0XHRcdFx0dGhpcy5fcGF1c2VIVE1MVmlkZW8odmlkZW8pO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdC8qKlxuXHRcdFx0ICogWW91VHViZSBpRnJhbWVcblx0XHRcdCAqL1xuXHRcdFx0Y2FzZSAneW91dHViZSc6IHtcblx0XHRcdFx0Y29uc3QgaWZyYW1lID0gY29udGVudC5lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ2lmcmFtZScpO1xuXG5cdFx0XHRcdGlmIChpZnJhbWUpIHtcblxuXHRcdFx0XHRcdGlmIChpZnJhbWUuY29udGVudFdpbmRvdykge1xuXHRcdFx0XHRcdFx0dGhpcy5fcGF1c2VJRnJhbWVZb3VUdWJlKGlmcmFtZSk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdGlmcmFtZS5vbmxvYWQgPSAoKSA9PiB0aGlzLl9wYXVzZUlGcmFtZVlvdVR1YmUoaWZyYW1lKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cblx0XHRcdC8qKlxuXHRcdFx0ICogVmltZW8gaUZyYW1lXG5cdFx0XHQgKi9cblx0XHRcdGNhc2UgJ3ZpbWVvJzoge1xuXHRcdFx0XHRjb25zdCBpZnJhbWUgPSBjb250ZW50LmVsZW1lbnQucXVlcnlTZWxlY3RvcignaWZyYW1lJyk7XG5cblx0XHRcdFx0aWYgKGlmcmFtZSkge1xuXHRcdFx0XHRcdGlmIChpZnJhbWUuY29udGVudFdpbmRvdykge1xuXHRcdFx0XHRcdFx0dGhpcy5fcGF1c2VJRnJhbWVWaW1lbyhpZnJhbWUpO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRpZnJhbWUub25sb2FkID0gKCkgPT4gdGhpcy5fcGF1c2VJRnJhbWVWaW1lbyhpZnJhbWUpO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRfcGxheUhUTUxWaWRlbyh2aWRlbykge1xuXHRcdGlmICh2aWRlbyAmJiB0eXBlb2YgdmlkZW8ucGxheSA9PT0gJ2Z1bmN0aW9uJykge1xuXHRcdFx0dmlkZW8ucGxheSgpO1xuXHRcdH1cblx0fVxuXG5cdF9wYXVzZUhUTUxWaWRlbyh2aWRlbykge1xuXHRcdGlmICh2aWRlbyAmJiB0eXBlb2YgdmlkZW8ucGF1c2UgPT09ICdmdW5jdGlvbicpIHtcblx0XHRcdHZpZGVvLnBhdXNlKCk7XG5cdFx0fVxuXHR9XG5cblx0X3BsYXlJRnJhbWVZb3VUdWJlKGlmcmFtZSkge1xuXHRcdGlmcmFtZS5jb250ZW50V2luZG93LnBvc3RNZXNzYWdlKCd7XCJldmVudFwiOlwiY29tbWFuZFwiLFwiZnVuY1wiOlwicGxheVZpZGVvXCIsXCJhcmdzXCI6XCJcIn0nLCAnKicpO1xuXHR9XG5cblx0X3BhdXNlSUZyYW1lWW91VHViZShpZnJhbWUpIHtcblx0XHRpZnJhbWUuY29udGVudFdpbmRvdy5wb3N0TWVzc2FnZSgne1wiZXZlbnRcIjpcImNvbW1hbmRcIixcImZ1bmNcIjpcInBhdXNlVmlkZW9cIixcImFyZ3NcIjpcIlwifScsICcqJyk7XG5cdH1cblxuXHRfcGxheUlGcmFtZVZpbWVvKGlmcmFtZSkge1xuXHRcdGlmcmFtZS5jb250ZW50V2luZG93LnBvc3RNZXNzYWdlKCd7XCJtZXRob2RcIjpcInBsYXlcIn0nLCAnKicpO1xuXHR9XG5cblx0X3BhdXNlSUZyYW1lVmltZW8oaWZyYW1lKSB7XG5cdFx0aWZyYW1lLmNvbnRlbnRXaW5kb3cucG9zdE1lc3NhZ2UoJ3tcIm1ldGhvZFwiOlwicGF1c2VcIn0nLCAnKicpO1xuXHR9XG59XG4iXSwibmFtZXMiOlsiUFNXUCIsIl9CYXNlQ29tcG9uZW50IiwiX3JlZiIsIl90aGlzIiwibmFtZSIsImxvYWRJbm5lckNvbXBvbmVudHMiLCJwYXJlbnQiLCJlbGVtZW50IiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NhbGxTdXBlciIsImRlZmF1bHRzIiwiYXBwIiwib3B0aW9ucyIsImdhbGxlcnkiLCJpbm5lckVsZW1lbnRzIiwiX2hhbmRsZXJzIiwiaXRlbURhdGEiLCJfb25JdGVtRGF0YSIsImJpbmQiLCJjb250ZW50TG9hZCIsIl9vbkNvbnRlbnRMb2FkIiwiY29udGVudEFjdGl2YXRlIiwiX29uQ29udGVudEFjdGl2YXRlIiwiY29udGVudERlYWN0aXZhdGUiLCJfb25Db250ZW50RGVhY3RpdmF0ZSIsImZpcnN0VXBkYXRlIiwiX29uRmlyc3RVcGRhdGUiLCJiZWZvcmVPcGVuIiwiX29uQmVmb3JlT3BlbiIsImNsb3NlIiwiX29uQ2xvc2UiLCJ1aVJlZ2lzdGVyIiwiX29uVUlSZWdpc3RlciIsInBvaW50ZXJEb3duIiwiX29uUG9pbnRlckRvd24iLCJwb2ludGVyTW92ZSIsIl9vblBvaW50ZXJNb3ZlIiwicG9pbnRlclVwIiwiX29uUG9pbnRlclVwIiwiX3BhdHRlcm5zIiwiaW1hZ2UiLCJ2aWRlbyIsInlvdXR1YmUiLCJ2aW1lbyIsInNldHVwIiwiX2luaGVyaXRzIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJpbml0IiwidXBkYXRlUmVmIiwiX2NyZWF0ZUxpZ2h0Ym94IiwiX2F0dGFjaEV2ZW50cyIsImRlc3Ryb3kiLCJfZGV0YWNoRXZlbnRzIiwibGlnaHRib3giLCJvbiIsIlBob3RvU3dpcGVMaWdodGJveCIsImNoaWxkcmVuIiwiaXRlbXNTZWxlY3RvciIsImJnT3BhY2l0eSIsImluaXRpYWxab29tTGV2ZWwiLCJzZWNvbmRhcnlab29tTGV2ZWwiLCJtYXhab29tTGV2ZWwiLCJhcnJvd1ByZXYiLCJfc2hvdWxkRGlzYWJsZURlZmF1bHRVSUVsZW1lbnQiLCJhcnJvd05leHQiLCJ6b29tIiwiY291bnRlciIsInByZWxvYWRlciIsInBzd3BNb2R1bGUiLCJQaG90b1N3aXBlIiwiYWRkRmlsdGVyIiwiZXZlbnQiLCJjdXJzb3JSZWYiLCJpbnN0YW5jZSIsInVwZGF0ZU1vdXNlIiwib3JpZ2luYWxFdmVudCIsInV0aWxpdGllcyIsInNjcm9sbExvY2siLCJkaXNwYXRjaEV2ZW50IiwiZGV0YWlsIiwiY29udGFpbmVyIiwiY29udGFpbmVyRWwiLCJ2aXNpYmxlIiwiY29sb3JUaGVtZSIsInBzd3AiLCJzZXRBdHRyaWJ1dGUiLCJjdXN0b20iLCJfcmVnaXN0ZXJVSUNsb3NlIiwiYXJyb3dzIiwiX3JlZ2lzdGVyVUlBcnJvd1ByZXYiLCJfcmVnaXN0ZXJVSUFycm93TmV4dCIsIl9yZWdpc3RlclVJQ291bnRlciIsImNhcHRpb25zIiwiX3JlZ2lzdGVyVUlDYXB0aW9uIiwiX3JlZ2lzdGVyVUlQcmVsb2FkZXIiLCJfcmVnaXN0ZXJVSVpvb20iLCJfdGhpczIiLCJ1aSIsInJlZ2lzdGVyRWxlbWVudCIsImNsYXNzTmFtZSIsImFwcGVuZFRvIiwidGFnTmFtZSIsIm9uQ2xpY2siLCJvcmRlciIsIm9uSW5pdCIsImVsIiwiaWNvbkF0dHJpYnV0ZXMiLCJfdHlwZW9mIiwiY3Vyc29yIiwiY3Vyc29yQXR0cmlidXRlcyIsImRlZXBtZXJnZSIsImRlbGVnYXRlIiwiSlNPTiIsInN0cmluZ2lmeSIsImFkZEV2ZW50TGlzdGVuZXIiLCJob3ZlckVmZmVjdCIsInByZXZlbnREZWZhdWx0IiwiaW5uZXJIVE1MIiwiY29uY2F0IiwidHJpbSIsImlzVmlzaWJsZSIsImRlbGF5VGltZW91dCIsInRvZ2dsZUluZGljYXRvckNsYXNzIiwiYWRkIiwiY2xhc3NMaXN0Iiwic2V0SW5kaWNhdG9yVmlzaWJpbGl0eSIsInVwZGF0ZVByZWxvYWRlclZpc2liaWxpdHkiLCJjdXJyU2xpZGUiLCJjb250ZW50IiwiaXNMb2FkaW5nIiwiY2xlYXJUaW1lb3V0Iiwic2V0VGltZW91dCIsInByZWxvYWRlckRlbGF5IiwiZSIsInNsaWRlIiwiX3RoaXMzIiwiaXNCdXR0b24iLCJodG1sIiwiY3VycmVudFNsaWRlRWxlbWVudCIsImRhdGEiLCJjYXB0aW9uSFRNTCIsImNhcHRpb25Gcm9tQXR0cmlidXRlIiwiZ2V0QXR0cmlidXRlIiwiY3VycmVudEltYWdlIiwicXVlcnlTZWxlY3RvciIsImFsdENvbnRlbnRzIiwibGVuZ3RoIiwiaW5uZXJUZXh0IiwiY3VyckluZGV4IiwiaW5kZXhJbmRpY2F0b3JTZXAiLCJnZXROdW1JdGVtcyIsIl90aGlzNCIsIndyYXBwZXJMaW5lc0F0dHJpYnV0ZXMiLCJsYWJlbCIsImxhYmVsSG92ZXIiLCJfdGhpczUiLCJidXR0b25BdHRyaWJ1dGVzIiwiX3RoaXM2IiwiZGVsYXkiLCJoaWRlQW5pbWF0aW9uRHVyYXRpb24iLCJyZXNldCIsImdzYXAiLCJkZWxheWVkQ2FsbCIsImluZGV4IiwiYXV0b3BsYXkiLCJ1cmwiLCJ0eXBlIiwiX2dldE1lZGlhVHlwZUZyb21VUkwiLCJPYmplY3QiLCJhc3NpZ24iLCJzcmMiLCJkb2N1bWVudCIsImNyZWF0ZUVsZW1lbnQiLCJfcmVuZGVySFRNTDVWaWRlbyIsIl9yZW5kZXJZb3VUdWJlSUZyYW1lIiwiX3JlbmRlclZpbWVvSUZyYW1lIiwiX3JlbmRlcklGcmFtZSIsIl9wbGF5VmlkZW8iLCJfcGF1c2VWaWRlbyIsImFwcGVuZENoaWxkIiwiYXJndW1lbnRzIiwidW5kZWZpbmVkIiwiaWZyYW1lIiwicGFyYW0iLCJyZXBsYWNlIiwiX2kiLCJfT2JqZWN0JGVudHJpZXMiLCJlbnRyaWVzIiwiX09iamVjdCRlbnRyaWVzJF9pIiwiX3NsaWNlZFRvQXJyYXkiLCJwYXR0ZXJuIiwibWF0Y2giLCJfdGhpczciLCJfcGxheUhUTUxWaWRlbyIsImNvbnRlbnRXaW5kb3ciLCJfcGxheUlGcmFtZVlvdVR1YmUiLCJvbmxvYWQiLCJfcGxheUlGcmFtZVZpbWVvIiwiX3RoaXM4IiwiX3BhdXNlSFRNTFZpZGVvIiwiX3BhdXNlSUZyYW1lWW91VHViZSIsIl9wYXVzZUlGcmFtZVZpbWVvIiwicGxheSIsInBhdXNlIiwicG9zdE1lc3NhZ2UiLCJCYXNlQ29tcG9uZW50IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/components/PSWP.js\n");

/***/ }),

/***/ "./src/js/components/Parallax.js":
/*!***************************************!*\
  !*** ./src/js/components/Parallax.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Parallax)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Parallax = /*#__PURE__*/function (_BaseComponent) {\n  function Parallax(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, Parallax);\n    _this = _callSuper(this, Parallax, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        animateFrom: 'center',\n        animateY: 100,\n        inner: {\n          factor: {\n            x: 0,\n            y: 0\n          },\n          translate: {\n            from: {\n              x: 0,\n              y: 0\n            },\n            to: {\n              x: 0,\n              y: 0\n            }\n          },\n          scale: {\n            from: false,\n            to: false\n          },\n          rotate: {\n            from: false,\n            to: false\n          },\n          matchMedia: false\n        },\n        outer: false\n      },\n      // Component inner elements\n      innerElements: {\n        outerElement: '.js-parallax__outer',\n        innerElement: '.js-parallax__inner'\n      }\n    }]);\n    _this.setup();\n    return _this;\n  }\n  _inherits(Parallax, _BaseComponent);\n  return _createClass(Parallax, [{\n    key: \"init\",\n    value: function init() {\n      if (!this._hasAnimationScene()) {\n        this._createParallax();\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.parallaxInner) {\n        this.parallaxInner.destroy();\n      }\n      if (this.parallaxOuter) {\n        this.parallaxOuter.destroy();\n      }\n    }\n  }, {\n    key: \"_initAnimations\",\n    value: function _initAnimations() {\n      var _this2 = this;\n      if (this._hasAnimationScene()) {\n        this.prepareAnimation().then(function () {\n          _this2._createParallax();\n          _this2._getRevealTextAnimation();\n          _this2._registerAnimations();\n          _this2._setAnimationReady();\n          _this2._createSTReveal();\n        });\n      }\n      this._createSTScrub();\n    }\n  }, {\n    key: \"_createParallax\",\n    value: function _createParallax() {\n      var _this3 = this;\n      if (!!this.options.inner && this.elements.innerElement[0]) {\n        this.parallaxInner = new ArtsParallax(this.element, {\n          target: 'innerElement',\n          outerElementSelector: this.innerSelectors.outerElement,\n          innerElementSelector: this.innerSelectors.innerElement,\n          factor: this.options.inner.factor,\n          translate: this.options.inner.translate,\n          scale: this.options.inner.scale,\n          rotate: this.options.inner.rotate,\n          velocity: this.options.inner.velocity,\n          matchMedia: this.options.inner.matchMedia,\n          containerAnimation: this.containerAnimation ? function () {\n            return _this3.containerAnimation;\n          } : undefined\n        });\n      }\n      if (!!this.options.outer) {\n        this.parallaxOuter = new ArtsParallax(this.elements.outerElement[0] || this.element, {\n          target: 'outerElement',\n          outerElementSelector: this.innerSelectors.outerElement,\n          innerElementSelector: this.innerSelectors.innerElement,\n          translate: this.options.outer.translate,\n          scale: this.options.outer.scale,\n          rotate: this.options.outer.rotate,\n          velocity: this.options.outer.velocity,\n          matchMedia: this.options.outer.matchMedia,\n          containerAnimation: this.containerAnimation ? function () {\n            return _this3.containerAnimation;\n          } : undefined\n        });\n      }\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/Parallax.js\n");

/***/ }),

/***/ "./src/js/components/Preloader.js":
/*!****************************************!*\
  !*** ./src/js/components/Preloader.js ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var gsap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! gsap */ \"./node_modules/gsap/index.js\");\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar Preloader = /*#__PURE__*/function (_BaseComponent) {\n  function Preloader(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element,\n      options = _ref.options;\n    _classCallCheck(this, Preloader);\n    _this = _callSuper(this, Preloader, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // External options from app.options.preloader\n      defaults: options,\n      // Component inner elements\n      innerElements: {\n        circle: \".js-preloader__circle\",\n        wrapper: \".js-preloader__wrapper\",\n        wrapperCounter: \".js-preloader__wrapper-counter\",\n        wrapperImagesOuter: \".js-preloader__wrapper-images-outer\",\n        wrappersImages: \".js-preloader__wrapper-image\",\n        images: \".js-preloader__image\",\n        contentLoaded: \".js-preloader__content-loaded\",\n        contentLoading: \".js-preloader__content-loading\",\n        heading: \".js-preloader__heading\",\n        counterEnd: \".js-preloader__counter-end\"\n      }\n    }]);\n    _this._handlers = {\n      start: _this._onStart.bind(_this),\n      load: _this._onLoad.bind(_this),\n      finishLoading: _this._onFinishLoading.bind(_this)\n    };\n    _this.setup();\n    return _this;\n  }\n  _inherits(Preloader, _BaseComponent);\n  return _createClass(Preloader, [{\n    key: \"setup\",\n    value: function setup() {\n      var _this2 = this;\n      this.tl = gsap__WEBPACK_IMPORTED_MODULE_0__[\"default\"].timeline();\n      this.loaded = new Promise(function (resolve) {\n        _this2._setLoaded = resolve;\n      });\n      this.finished = new Promise(function (resolve) {\n        _this2._setFinished = resolve;\n      });\n      this.speed = 1;\n      document.fonts.ready.then(function () {\n        return _this2.mount();\n      }).then(function () {\n        _this2.init();\n        _this2._initAnimations();\n\n        // Set component ready on the next tick\n        gsap__WEBPACK_IMPORTED_MODULE_0__[\"default\"].ticker.add(_this2._setReady.bind(_this2), true, false);\n      });\n    }\n  }, {\n    key: \"init\",\n    value: function init() {\n      this.splitCounterRef = this._getInnerComponentByName(\"SplitCounter\");\n      this._animateLoading();\n      this._setTimeScale();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.tl && typeof this.tl.kill === \"function\") {\n        this.tl.kill();\n      }\n    }\n  }, {\n    key: \"prepareAnimation\",\n    value: function prepareAnimation() {\n      var _this3 = this;\n      return new Promise(function (resolve) {\n        var tl = gsap__WEBPACK_IMPORTED_MODULE_0__[\"default\"].timeline({\n          onComplete: function onComplete() {\n            resolve(true);\n          }\n        });\n        if (_this3.elements.images.length) {\n          tl.hideMask(_this3.elements.images, {\n            clearProps: \"\",\n            duration: 0,\n            animateTo: \"bottom\",\n            scaleInner: \"img,video\",\n            scale: 1.1\n          });\n        }\n        if (_this3.elements.circle.length) {\n          tl.set(_this3.elements.circle, {\n            transformOrigin: \"center center\"\n          });\n        }\n        if (_this3.elements.wrappersImages.length) {\n          tl.set(_this3.elements.wrappersImages, {\n            rotation: \"-6deg\",\n            transformOrigin: \"center center\"\n          });\n        }\n        if (_this3.elements.counterEnd.length) {\n          tl.set(_this3.elements.counterEnd, {\n            y: \"100%\"\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_animateLoading\",\n    value: function _animateLoading() {\n      var _this4 = this;\n      // Animate in \"loading\" content\n      if (this.elements.contentLoading.length) {\n        this.tl.animateLines(this.elements.contentLoading);\n      }\n\n      // Prepare main container offset\n      this.tl.set(app.containerEl, {\n        // y: '10vh'\n      });\n\n      // Animate steps progress\n      if (this.elements.circle.length) {\n        if (_typeof(this.options.loadingSteps) === \"object\") {\n          this.options.loadingSteps.forEach(function (step, index) {\n            var align = index === 0 ? \"<\" : undefined;\n            if (index === _this4.options.loadingSteps.length - 1) {\n              app.loaded.then(function () {\n                _this4.tl.to(_this4.elements.circle, {\n                  duration: 1,\n                  // onStart: ,\n                  onStart: function onStart() {\n                    _this4._onProgress(step[0], step[1]);\n                    _this4._setFinished();\n                  }\n                }, align);\n              });\n            } else {\n              _this4.tl.to(_this4.elements.circle, {\n                duration: 1,\n                onStart: _this4._onProgress.bind(_this4, step[0], step[1])\n              }, align);\n            }\n          });\n        } else {\n          app.loaded.then(function () {\n            _this4.tl.to(_this4.elements.circle, {\n              duration: 1,\n              onStart: _this4._onProgress.bind(_this4, 100, 100)\n            });\n          });\n        }\n      } else {\n        app.loaded.then(function () {\n          return _this4._setFinished();\n        });\n      }\n      Promise.all([app.loaded, this.finished]).then(this._handlers.finishLoading);\n    }\n  }, {\n    key: \"_onFinishLoading\",\n    value: function _onFinishLoading() {\n      var _this5 = this;\n      var finalOffset = typeof this.options.finalOffset === \"string\" || typeof this.options.finalOffset === \"number\" ? this.options.finalOffset : undefined;\n      if (this.elements.counterEnd.length) {\n        // Animate in\n        this.tl.to(this.elements.counterEnd, {\n          y: \"0%\",\n          duration: 0.6,\n          ease: \"expo.inOut\"\n        }, \"<\");\n\n        // Animate out\n        this.tl.to(this.elements.counterEnd, {\n          y: \"-100%\",\n          duration: 0.6,\n          ease: \"expo.inOut\"\n        });\n      }\n      if (this.elements.wrapperCounter.length) {\n        this.tl.to(this.elements.wrapperCounter, {\n          borderColor: \"transparent\",\n          duration: 0.6\n          // autoAlpha: 0,\n        }, \"<\");\n      }\n\n      // Animate out circle drawing\n      if (this.elements.circle.length) {\n        var align = !this.splitCounterRef ? undefined : \"<\";\n        var rotation = 180;\n        if (typeof this.options.finalRotation === \"number\") {\n          rotation = this.options.finalRotation;\n        }\n        this.tl.to(this.elements.circle, {\n          duration: 1.2,\n          ease: \"expo.inOut\",\n          drawSVG: \"100% 100%\",\n          rotation: rotation,\n          transformOrigin: \"center center\"\n        }, align);\n      }\n\n      // Animate out \"loading\" content\n      if (this.elements.contentLoading.length) {\n        this.tl.hideLines(this.elements.contentLoading, {\n          duration: 1.2,\n          ease: \"expo.out\"\n        }, \"<\");\n      }\n      if (this.elements.wrappersImages.length) {\n        this.tl.to(this.elements.wrappersImages, {\n          transformOrigin: \"center center\",\n          rotation: \"0deg\",\n          duration: 2.4\n          // overwrite: 'auto'\n        }, \"<50%\");\n      }\n      if (this.elements.images.length) {\n        this.elements.images.forEach(function (el, index) {\n          _this5.tl.animateMask(el, {\n            animateFrom: \"bottom\",\n            duration: 1.2,\n            ease: \"expo.inOut\",\n            // stagger: 0.2,\n            scale: 1.1\n          }, index === 0 ? \"<\" : \"<0.2\");\n        });\n      }\n\n      // Animate in \"heading\"\n      if (this.elements.heading.length) {\n        this.tl.animateChars(this.elements.heading, {\n          duration: 1.2,\n          ease: \"expo.out\",\n          stagger: {\n            amount: 0.3,\n            from: \"end\"\n          }\n        }, \"<50%\");\n      }\n\n      // Animate in \"loaded\" content\n      if (this.elements.contentLoaded.length) {\n        this.tl.animateLines(this.elements.contentLoaded, {\n          duration: 1.2,\n          ease: \"expo.out\"\n        }, \"<50%\");\n      }\n\n      // Delay before \"out\" animation\n      if (typeof this.options.finalDelay === \"number\") {\n        this.tl.to({}, {\n          duration: this.options.finalDelay\n        });\n      }\n\n      // Animate out \"heading\"\n      if (this.elements.heading.length) {\n        this.tl.hideChars(this.elements.heading, {\n          duration: 1.2,\n          y: \"-102%\",\n          ease: \"expo.in\",\n          stagger: {\n            amount: 0.3,\n            from: \"start\"\n          }\n        }, \"<50%\");\n      }\n\n      // Animate out \"loaded\" content\n      if (this.elements.contentLoaded.length) {\n        this.tl.hideLines(this.elements.contentLoaded, {\n          duration: 1.2,\n          ease: \"expo.in\"\n        }, \"<\");\n      }\n      if (this.elements.wrapperImagesOuter.length) {\n        this.tl.hideMask(this.elements.wrapperImagesOuter, {\n          animateTo: \"top\",\n          duration: 1.2,\n          ease: \"expo.in\",\n          clearProps: \"\"\n        }, \"<\");\n      }\n      this.tl.hideCurtain(this.element, {\n        duration: 1.2,\n        animateTo: \"top\",\n        ease: \"expo.out\",\n        onComplete: function onComplete() {\n          gsap__WEBPACK_IMPORTED_MODULE_0__[\"default\"].set(_this5.element, {\n            display: \"none\"\n          });\n        }\n      }).to(app.containerEl, {\n        duration: 1.2,\n        ease: \"expo.out\",\n        y: \"0vh\",\n        clearProps: \"all\"\n      }, \"<\").add(this._handlers.load, finalOffset);\n    }\n  }, {\n    key: \"_setTimeScale\",\n    value: function _setTimeScale() {\n      this.speed = app.utilities.getTimeScaleByKey(\"preloader\");\n      this.tl.timeScale(this.speed);\n      if (this.splitCounterRef) {\n        this.splitCounterRef.tl.timeScale(this.speed);\n      }\n    }\n  }, {\n    key: \"_updateCounter\",\n    value: function _updateCounter(number) {\n      if (this.splitCounterRef) {\n        this.splitCounterRef.current = number;\n      }\n    }\n  }, {\n    key: \"_onStart\",\n    value: function _onStart() {}\n  }, {\n    key: \"_onLoad\",\n    value: function _onLoad() {\n      if (typeof this.options.toggleLoadClass === \"string\") {\n        this.element.classList.add(this.options.toggleLoadClass);\n      }\n      this._setLoaded();\n    }\n  }, {\n    key: \"_onProgress\",\n    value: function _onProgress(startValue, endValue) {\n      var number,\n        loadingRotation = 1,\n        duration = 0.6 / this.speed;\n      if (startValue === 100 && endValue === 100) {\n        number = 100;\n      } else {\n        number = gsap__WEBPACK_IMPORTED_MODULE_0__[\"default\"].utils.random(startValue, endValue, 1);\n      }\n      if (typeof this.options.loadingRotation === \"number\") {\n        loadingRotation = this.options.loadingRotation;\n      }\n      gsap__WEBPACK_IMPORTED_MODULE_0__[\"default\"].to(this.elements.circle, {\n        duration: duration,\n        drawSVG: \"\".concat(number, \"% 0%\"),\n        ease: \"expo.inOut\",\n        rotation: number / 100 * loadingRotation\n      });\n      this._updateCounter(number === 100 ? null : number);\n    }\n  }, {\n    key: \"_setLoaded\",\n    value: function _setLoaded() {}\n  }, {\n    key: \"_setFinished\",\n    value: function _setFinished() {}\n  }]);\n}(BaseComponent);\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Preloader);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/Preloader.js\n");

/***/ }),

/***/ "./src/js/components/RotatingButton.js":
/*!*********************************************!*\
  !*** ./src/js/components/RotatingButton.js ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ RotatingButton)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar RotatingButton = /*#__PURE__*/function (_BaseComponent) {\n  function RotatingButton(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, RotatingButton);\n    _this = _callSuper(this, RotatingButton, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        rotateAnimation: {\n          onScrollSpeed: 2\n        },\n        delimiter: '&nbsp;&nbsp;→&nbsp;&nbsp;',\n        loopRounds: 2\n      },\n      // Component inner elements\n      innerElements: {\n        link: '.js-rotating-button__link',\n        label: '.js-rotating-button__label',\n        icon: '.js-rotating-button__icon'\n      }\n    }]);\n    _this._handlers = {\n      displayInit: app.utilities.debounce(_this._onDisplayInit.bind(_this), app.utilities.getDebounceTime())\n    };\n    _this.mq = null;\n    _this.originalLabel = '';\n    _this.clamp = gsap.utils.clamp(1, 10);\n    _this.setup();\n    return _this;\n  }\n  _inherits(RotatingButton, _BaseComponent);\n  return _createClass(RotatingButton, [{\n    key: \"init\",\n    value: function init() {\n      if (this.element.offsetParent) {\n        this._doInit();\n      } else {\n        this.mq = app.utilities.attachResponsiveResize({\n          callback: this._handlers.displayInit\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      this.resizeInstance = null;\n    }\n  }, {\n    key: \"_onDisplayInit\",\n    value: function _onDisplayInit() {\n      if (this.element.offsetParent) {\n        if (this.mq && typeof this.mq.clear === 'function') {\n          this.mq.clear();\n        }\n        this._doInit();\n      }\n    }\n  }, {\n    key: \"_doInit\",\n    value: function _doInit() {\n      this._addDelimiter();\n      this._loopLabel();\n      this._createCircle();\n      this._attachEvents();\n    }\n  }, {\n    key: \"getScrubAnimation\",\n    value: function getScrubAnimation() {\n      var _this2 = this;\n      if (!this.options.rotateAnimation) {\n        return;\n      }\n      var animation = gsap.timeline({\n        paused: true,\n        defaults: {\n          ease: 'none',\n          repeat: -1\n        }\n      }).to(this.elements.label[0], {\n        rotate: 360,\n        duration: 30\n      }, 'start').to(this.elements.icon[0], {\n        rotate: -360,\n        duration: 10\n      }, 'start');\n      var config = {\n        animation: animation,\n        trigger: this.element,\n        once: false,\n        onToggle: function onToggle(self) {\n          if (self.isActive) {\n            animation.play();\n          } else {\n            animation.pause();\n          }\n        }\n      };\n      if (typeof this.options.rotateAnimation.onScrollSpeed === 'number') {\n        var proxy = {\n          velocity: 1\n        };\n        var velocityWatcher = ScrollTrigger.getById('velocityWatcher');\n        config['onUpdate'] = function () {\n          var velocity = _this2.clamp(Math.abs(velocityWatcher.getVelocity()) / 100) * _this2.options.rotateAnimation.onScrollSpeed;\n          if (velocity > proxy.velocity) {\n            proxy.velocity = velocity;\n            gsap.to(proxy, {\n              velocity: 1,\n              duration: 0.6,\n              ease: 'power3.out',\n              overwrite: true,\n              onUpdate: function onUpdate() {\n                animation.timeScale(proxy.velocity);\n              }\n            });\n          }\n        };\n      }\n      return config;\n    }\n  }, {\n    key: \"getRevealAnimation\",\n    value: function getRevealAnimation() {\n      var tl = gsap.timeline({\n        paused: true\n      }).animateScale(this.elements.icon, {\n        ease: 'power3.out',\n        animateFrom: 'center'\n      }, '<');\n      return tl;\n    }\n  }, {\n    key: \"_addDelimiter\",\n    value: function _addDelimiter() {\n      this.originalLabel = this.elements.label[0].innerHTML;\n      if (this.options.delimiter) {\n        this.elements.label[0].innerHTML += this.options.delimiter;\n      }\n      this.label = this.elements.label[0].innerHTML;\n    }\n  }, {\n    key: \"_loopLabel\",\n    value: function _loopLabel() {\n      if (this.options.loopRounds > 0) {\n        for (var index = 0; index < this.options.loopRounds; index++) {\n          this.elements.label[0].innerHTML += this.label;\n        }\n      }\n    }\n  }, {\n    key: \"_createCircle\",\n    value: function _createCircle() {\n      this.circleInstance = new CircleType(this.elements.label[0]);\n      this.elements.label[0].setAttribute('aria-label', this.label);\n    }\n  }, {\n    key: \"_setSize\",\n    value: function _setSize() {\n      var size = this.elements.label[0].offsetHeight;\n      this.elements.link[0].style.width = \"\".concat(size, \"px\");\n      this.elements.link[0].style.height = \"\".concat(size, \"px\");\n      if (this.stScrub) {\n        this.stScrub.refresh();\n      }\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      this.resizeInstance = new ResizeObserver(this._onUpdate.bind(this));\n      this.resizeInstance.observe(this.elements.label[0]);\n      this.resizeInstance.observe(app.containerEl);\n    }\n  }, {\n    key: \"_onUpdate\",\n    value: function _onUpdate() {\n      this._setSize();\n      this.circleInstance.refresh();\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      if (this.resizeInstance && typeof this.resizeInstance.disconnect === 'function') {\n        this.resizeInstance.disconnect();\n      }\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LEtBQUEsRUFFRCxTQUFBZ0UsVUFBQSxFQUFZO01BQ1YsSUFBSSxDQUFDVixRQUFRLENBQUMsQ0FBQztNQUNmLElBQUksQ0FBQ0gsY0FBYyxDQUFDVyxPQUFPLENBQUMsQ0FBQztJQUMvQjtFQUFDO0lBQUEvRCxHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBTyxjQUFBLEVBQWdCO01BQ2QsSUFBSSxJQUFJLENBQUNDLGNBQWMsSUFBSSxPQUFPLElBQUksQ0FBQ0EsY0FBYyxDQUFDMkQsVUFBVSxLQUFLLFVBQVUsRUFBRTtRQUMvRSxJQUFJLENBQUMzRCxjQUFjLENBQUMyRCxVQUFVLENBQUMsQ0FBQztNQUNsQztJQUNGO0VBQUM7QUFBQSxFQXBNeUNDLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aHJlZS1zaGFkZXItZW52MDEvLi9zcmMvanMvY29tcG9uZW50cy9Sb3RhdGluZ0J1dHRvbi5qcz8zNjQ0Il0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvdGF0aW5nQnV0dG9uIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG4gIGNvbnN0cnVjdG9yKHtcbiAgICBuYW1lLFxuICAgIGxvYWRJbm5lckNvbXBvbmVudHMsXG4gICAgcGFyZW50LFxuICAgIGVsZW1lbnQsXG4gIH0pIHtcbiAgICBzdXBlcih7XG4gICAgICBuYW1lLFxuICAgICAgbG9hZElubmVyQ29tcG9uZW50cyxcbiAgICAgIHBhcmVudCxcbiAgICAgIGVsZW1lbnQsXG4gICAgICAvLyBDb21wb25lbnQgZGVmYXVsdCBvcHRpb25zXG4gICAgICBkZWZhdWx0czoge1xuICAgICAgICByb3RhdGVBbmltYXRpb246IHtcbiAgICAgICAgICBvblNjcm9sbFNwZWVkOiAyXG4gICAgICAgIH0sXG4gICAgICAgIGRlbGltaXRlcjogJyZuYnNwOyZuYnNwO+KGkiZuYnNwOyZuYnNwOycsXG4gICAgICAgIGxvb3BSb3VuZHM6IDJcbiAgICAgIH0sXG4gICAgICAvLyBDb21wb25lbnQgaW5uZXIgZWxlbWVudHNcbiAgICAgIGlubmVyRWxlbWVudHM6IHtcbiAgICAgICAgbGluazogJy5qcy1yb3RhdGluZy1idXR0b25fX2xpbmsnLFxuICAgICAgICBsYWJlbDogJy5qcy1yb3RhdGluZy1idXR0b25fX2xhYmVsJyxcbiAgICAgICAgaWNvbjogJy5qcy1yb3RhdGluZy1idXR0b25fX2ljb24nXG4gICAgICB9XG4gICAgfSk7XG5cbiAgICB0aGlzLl9oYW5kbGVycyA9IHtcbiAgICAgIGRpc3BsYXlJbml0OiBhcHAudXRpbGl0aWVzLmRlYm91bmNlKHRoaXMuX29uRGlzcGxheUluaXQuYmluZCh0aGlzKSwgYXBwLnV0aWxpdGllcy5nZXREZWJvdW5jZVRpbWUoKSlcbiAgICB9O1xuXG4gICAgdGhpcy5tcSA9IG51bGw7XG4gICAgdGhpcy5vcmlnaW5hbExhYmVsID0gJyc7XG4gICAgdGhpcy5jbGFtcCA9IGdzYXAudXRpbHMuY2xhbXAoMSwgMTApO1xuXG4gICAgdGhpcy5zZXR1cCgpO1xuICB9XG5cbiAgaW5pdCgpIHtcbiAgICBpZiAodGhpcy5lbGVtZW50Lm9mZnNldFBhcmVudCkge1xuICAgICAgdGhpcy5fZG9Jbml0KCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIHRoaXMubXEgPSBhcHAudXRpbGl0aWVzLmF0dGFjaFJlc3BvbnNpdmVSZXNpemUoe1xuICAgICAgICBjYWxsYmFjazogdGhpcy5faGFuZGxlcnMuZGlzcGxheUluaXRcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG4gIGRlc3Ryb3koKSB7XG4gICAgdGhpcy5fZGV0YWNoRXZlbnRzKCk7XG4gICAgdGhpcy5yZXNpemVJbnN0YW5jZSA9IG51bGw7XG4gIH1cblxuICBfb25EaXNwbGF5SW5pdCgpIHtcbiAgICBpZiAodGhpcy5lbGVtZW50Lm9mZnNldFBhcmVudCkge1xuICAgICAgaWYgKHRoaXMubXEgJiYgdHlwZW9mIHRoaXMubXEuY2xlYXIgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhpcy5tcS5jbGVhcigpO1xuICAgICAgfVxuXG4gICAgICB0aGlzLl9kb0luaXQoKTtcbiAgICB9XG4gIH1cblxuICBfZG9Jbml0KCkge1xuICAgIHRoaXMuX2FkZERlbGltaXRlcigpO1xuICAgIHRoaXMuX2xvb3BMYWJlbCgpO1xuICAgIHRoaXMuX2NyZWF0ZUNpcmNsZSgpO1xuICAgIHRoaXMuX2F0dGFjaEV2ZW50cygpO1xuICB9XG5cbiAgZ2V0U2NydWJBbmltYXRpb24oKSB7XG4gICAgaWYgKCF0aGlzLm9wdGlvbnMucm90YXRlQW5pbWF0aW9uKSB7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY29uc3QgYW5pbWF0aW9uID0gZ3NhcC50aW1lbGluZSh7XG4gICAgICBwYXVzZWQ6IHRydWUsXG4gICAgICBkZWZhdWx0czoge1xuICAgICAgICBlYXNlOiAnbm9uZScsXG4gICAgICAgIHJlcGVhdDogLTFcbiAgICAgIH1cbiAgICB9KVxuICAgICAgLnRvKHRoaXMuZWxlbWVudHMubGFiZWxbMF0sIHtcbiAgICAgICAgcm90YXRlOiAzNjAsXG4gICAgICAgIGR1cmF0aW9uOiAzMFxuICAgICAgfSwgJ3N0YXJ0JylcbiAgICAgIC50byh0aGlzLmVsZW1lbnRzLmljb25bMF0sIHtcbiAgICAgICAgcm90YXRlOiAtMzYwLFxuICAgICAgICBkdXJhdGlvbjogMTBcbiAgICAgIH0sICdzdGFydCcpO1xuXG4gICAgY29uc3QgY29uZmlnID0ge1xuICAgICAgYW5pbWF0aW9uLFxuICAgICAgdHJpZ2dlcjogdGhpcy5lbGVtZW50LFxuICAgICAgb25jZTogZmFsc2UsXG4gICAgICBvblRvZ2dsZTogKHNlbGYpID0+IHtcbiAgICAgICAgaWYgKHNlbGYuaXNBY3RpdmUpIHtcbiAgICAgICAgICBhbmltYXRpb24ucGxheSgpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGFuaW1hdGlvbi5wYXVzZSgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfTtcblxuICAgIGlmICh0eXBlb2YgdGhpcy5vcHRpb25zLnJvdGF0ZUFuaW1hdGlvbi5vblNjcm9sbFNwZWVkID09PSAnbnVtYmVyJykge1xuICAgICAgY29uc3QgcHJveHkgPSB7XG4gICAgICAgIHZlbG9jaXR5OiAxXG4gICAgICB9O1xuXG4gICAgICBjb25zdCB2ZWxvY2l0eVdhdGNoZXIgPSBTY3JvbGxUcmlnZ2VyLmdldEJ5SWQoJ3ZlbG9jaXR5V2F0Y2hlcicpO1xuXG4gICAgICBjb25maWdbJ29uVXBkYXRlJ10gPSAoKSA9PiB7XG4gICAgICAgIGxldCB2ZWxvY2l0eSA9IHRoaXMuY2xhbXAoTWF0aC5hYnModmVsb2NpdHlXYXRjaGVyLmdldFZlbG9jaXR5KCkpIC8gMTAwKSAqIHRoaXMub3B0aW9ucy5yb3RhdGVBbmltYXRpb24ub25TY3JvbGxTcGVlZDtcblxuICAgICAgICBpZiAodmVsb2NpdHkgPiBwcm94eS52ZWxvY2l0eSkge1xuICAgICAgICAgIHByb3h5LnZlbG9jaXR5ID0gdmVsb2NpdHk7XG5cbiAgICAgICAgICBnc2FwLnRvKHByb3h5LCB7XG4gICAgICAgICAgICB2ZWxvY2l0eTogMSxcbiAgICAgICAgICAgIGR1cmF0aW9uOiAwLjYsXG4gICAgICAgICAgICBlYXNlOiAncG93ZXIzLm91dCcsXG4gICAgICAgICAgICBvdmVyd3JpdGU6IHRydWUsXG4gICAgICAgICAgICBvblVwZGF0ZTogKCkgPT4ge1xuICAgICAgICAgICAgICBhbmltYXRpb24udGltZVNjYWxlKHByb3h5LnZlbG9jaXR5KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG4gICAgICB9O1xuICAgIH1cblxuICAgIHJldHVybiBjb25maWc7XG4gIH1cblxuICBnZXRSZXZlYWxBbmltYXRpb24oKSB7XG4gICAgY29uc3QgdGwgPSBnc2FwLnRpbWVsaW5lKHtcbiAgICAgIHBhdXNlZDogdHJ1ZVxuICAgIH0pXG4gICAgICAuYW5pbWF0ZVNjYWxlKHRoaXMuZWxlbWVudHMuaWNvbiwge1xuICAgICAgICBlYXNlOiAncG93ZXIzLm91dCcsXG4gICAgICAgIGFuaW1hdGVGcm9tOiAnY2VudGVyJ1xuICAgICAgfSwgJzwnKTtcblxuICAgIHJldHVybiB0bDtcbiAgfVxuXG4gIF9hZGREZWxpbWl0ZXIoKSB7XG4gICAgdGhpcy5vcmlnaW5hbExhYmVsID0gdGhpcy5lbGVtZW50cy5sYWJlbFswXS5pbm5lckhUTUw7XG5cbiAgICBpZiAodGhpcy5vcHRpb25zLmRlbGltaXRlcikge1xuICAgICAgdGhpcy5lbGVtZW50cy5sYWJlbFswXS5pbm5lckhUTUwgKz0gdGhpcy5vcHRpb25zLmRlbGltaXRlcjtcbiAgICB9XG5cbiAgICB0aGlzLmxhYmVsID0gdGhpcy5lbGVtZW50cy5sYWJlbFswXS5pbm5lckhUTUw7XG4gIH1cblxuICBfbG9vcExhYmVsKCkge1xuICAgIGlmICh0aGlzLm9wdGlvbnMubG9vcFJvdW5kcyA+IDApIHtcbiAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLm9wdGlvbnMubG9vcFJvdW5kczsgaW5kZXgrKykge1xuICAgICAgICB0aGlzLmVsZW1lbnRzLmxhYmVsWzBdLmlubmVySFRNTCArPSB0aGlzLmxhYmVsO1xuICAgICAgfVxuICAgIH1cbiAgfVxuXG4gIF9jcmVhdGVDaXJjbGUoKSB7XG4gICAgdGhpcy5jaXJjbGVJbnN0YW5jZSA9IG5ldyBDaXJjbGVUeXBlKHRoaXMuZWxlbWVudHMubGFiZWxbMF0pO1xuICAgIHRoaXMuZWxlbWVudHMubGFiZWxbMF0uc2V0QXR0cmlidXRlKCdhcmlhLWxhYmVsJywgdGhpcy5sYWJlbCk7XG4gIH1cblxuICBfc2V0U2l6ZSgpIHtcbiAgICBjb25zdCBzaXplID0gdGhpcy5lbGVtZW50cy5sYWJlbFswXS5vZmZzZXRIZWlnaHQ7XG5cbiAgICB0aGlzLmVsZW1lbnRzLmxpbmtbMF0uc3R5bGUud2lkdGggPSBgJHtzaXplfXB4YDtcbiAgICB0aGlzLmVsZW1lbnRzLmxpbmtbMF0uc3R5bGUuaGVpZ2h0ID0gYCR7c2l6ZX1weGA7XG5cbiAgICBpZiAodGhpcy5zdFNjcnViKSB7XG4gICAgICB0aGlzLnN0U2NydWIucmVmcmVzaCgpO1xuICAgIH1cbiAgfVxuXG4gIF9hdHRhY2hFdmVudHMoKSB7XG4gICAgdGhpcy5yZXNpemVJbnN0YW5jZSA9IG5ldyBSZXNpemVPYnNlcnZlcih0aGlzLl9vblVwZGF0ZS5iaW5kKHRoaXMpKTtcbiAgICB0aGlzLnJlc2l6ZUluc3RhbmNlLm9ic2VydmUodGhpcy5lbGVtZW50cy5sYWJlbFswXSk7XG4gICAgdGhpcy5yZXNpemVJbnN0YW5jZS5vYnNlcnZlKGFwcC5jb250YWluZXJFbCk7XG4gIH1cblxuICBfb25VcGRhdGUoKSB7XG4gICAgdGhpcy5fc2V0U2l6ZSgpO1xuICAgIHRoaXMuY2lyY2xlSW5zdGFuY2UucmVmcmVzaCgpO1xuICB9XG5cbiAgX2RldGFjaEV2ZW50cygpIHtcbiAgICBpZiAodGhpcy5yZXNpemVJbnN0YW5jZSAmJiB0eXBlb2YgdGhpcy5yZXNpemVJbnN0YW5jZS5kaXNjb25uZWN0ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICB0aGlzLnJlc2l6ZUluc3RhbmNlLmRpc2Nvbm5lY3QoKTtcbiAgICB9XG4gIH1cbn1cbiJdLCJuYW1lcyI6WyJSb3RhdGluZ0J1dHRvbiIsIl9CYXNlQ29tcG9uZW50IiwiX3JlZiIsIl90aGlzIiwibmFtZSIsImxvYWRJbm5lckNvbXBvbmVudHMiLCJwYXJlbnQiLCJlbGVtZW50IiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NhbGxTdXBlciIsImRlZmF1bHRzIiwicm90YXRlQW5pbWF0aW9uIiwib25TY3JvbGxTcGVlZCIsImRlbGltaXRlciIsImxvb3BSb3VuZHMiLCJpbm5lckVsZW1lbnRzIiwibGluayIsImxhYmVsIiwiaWNvbiIsIl9oYW5kbGVycyIsImRpc3BsYXlJbml0IiwiYXBwIiwidXRpbGl0aWVzIiwiZGVib3VuY2UiLCJfb25EaXNwbGF5SW5pdCIsImJpbmQiLCJnZXREZWJvdW5jZVRpbWUiLCJtcSIsIm9yaWdpbmFsTGFiZWwiLCJjbGFtcCIsImdzYXAiLCJ1dGlscyIsInNldHVwIiwiX2luaGVyaXRzIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJpbml0Iiwib2Zmc2V0UGFyZW50IiwiX2RvSW5pdCIsImF0dGFjaFJlc3BvbnNpdmVSZXNpemUiLCJjYWxsYmFjayIsImRlc3Ryb3kiLCJfZGV0YWNoRXZlbnRzIiwicmVzaXplSW5zdGFuY2UiLCJjbGVhciIsIl9hZGREZWxpbWl0ZXIiLCJfbG9vcExhYmVsIiwiX2NyZWF0ZUNpcmNsZSIsIl9hdHRhY2hFdmVudHMiLCJnZXRTY3J1YkFuaW1hdGlvbiIsIl90aGlzMiIsIm9wdGlvbnMiLCJhbmltYXRpb24iLCJ0aW1lbGluZSIsInBhdXNlZCIsImVhc2UiLCJyZXBlYXQiLCJ0byIsImVsZW1lbnRzIiwicm90YXRlIiwiZHVyYXRpb24iLCJjb25maWciLCJ0cmlnZ2VyIiwib25jZSIsIm9uVG9nZ2xlIiwic2VsZiIsImlzQWN0aXZlIiwicGxheSIsInBhdXNlIiwicHJveHkiLCJ2ZWxvY2l0eSIsInZlbG9jaXR5V2F0Y2hlciIsIlNjcm9sbFRyaWdnZXIiLCJnZXRCeUlkIiwiTWF0aCIsImFicyIsImdldFZlbG9jaXR5Iiwib3ZlcndyaXRlIiwib25VcGRhdGUiLCJ0aW1lU2NhbGUiLCJnZXRSZXZlYWxBbmltYXRpb24iLCJ0bCIsImFuaW1hdGVTY2FsZSIsImFuaW1hdGVGcm9tIiwiaW5uZXJIVE1MIiwiaW5kZXgiLCJjaXJjbGVJbnN0YW5jZSIsIkNpcmNsZVR5cGUiLCJzZXRBdHRyaWJ1dGUiLCJfc2V0U2l6ZSIsInNpemUiLCJvZmZzZXRIZWlnaHQiLCJzdHlsZSIsIndpZHRoIiwiY29uY2F0IiwiaGVpZ2h0Iiwic3RTY3J1YiIsInJlZnJlc2giLCJSZXNpemVPYnNlcnZlciIsIl9vblVwZGF0ZSIsIm9ic2VydmUiLCJjb250YWluZXJFbCIsImRpc2Nvbm5lY3QiLCJCYXNlQ29tcG9uZW50IiwiZGVmYXVsdCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/js/components/RotatingButton.js\n");

/***/ }),

/***/ "./src/js/components/ScreensWall.js":
/*!******************************************!*\
  !*** ./src/js/components/ScreensWall.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ ScreensWall)\n/* harmony export */ });\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar ScreensWall = /*#__PURE__*/function (_BaseComponent) {\n  function ScreensWall(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, ScreensWall);\n    _this = _callSuper(this, ScreensWall, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        marquee: {\n          speed: 0.5,\n          onHoverSpeed: 0.5\n        }\n      },\n      // Component inner elements\n      innerElements: {\n        container: '.js-screens-wall__list-container',\n        lanes: '.js-screens-wall__list-lane',\n        items: '.js-screens-wall__list-item'\n      }\n    }]);\n    _this.setup();\n    return _this;\n  }\n  _inherits(ScreensWall, _BaseComponent);\n  return _createClass(ScreensWall, [{\n    key: \"init\",\n    value: function init() {\n      this._createInfiniteList();\n      if (!this._hasAnimationScene()) {\n        this._initMarquee();\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.infiniteList) {\n        this.infiniteList.destroy();\n      }\n    }\n  }, {\n    key: \"getRevealAnimation\",\n    value: function getRevealAnimation() {\n      var _this2 = this;\n      var tl = gsap.timeline({\n        paused: true\n      });\n      if (this.elements.items.length) {\n        tl.animateMask(this.elements.items, {\n          animateFrom: 'bottom',\n          duration: 2,\n          ease: 'expo.inOut',\n          stagger: distributeByPosition({\n            from: 'center',\n            amount: 0.5\n          })\n        });\n      }\n      tl.add(function () {\n        _this2._initMarquee();\n      }, '<50%');\n      return tl;\n    }\n  }, {\n    key: \"_createInfiniteList\",\n    value: function _createInfiniteList() {\n      this.infiniteList = new ArtsInfiniteList(this.elements.container[0], {\n        direction: 'vertical',\n        mapWheelEventYtoX: false,\n        listElementsSelector: this.innerSelectors.items,\n        multiLane: {\n          laneSelector: this.innerSelectors.lanes,\n          laneOptionsAttribute: 'data-arts-infinite-list-options'\n        },\n        autoClone: true,\n        loop: true,\n        plugins: {\n          marquee: _typeof(this.options.marquee) === 'object' ? _objectSpread({\n            autoInit: false\n          }, this.options.marquee) : false,\n          scroll: false\n        }\n      });\n    }\n  }, {\n    key: \"_initMarquee\",\n    value: function _initMarquee() {\n      var _this3 = this;\n      if (this.infiniteList) {\n        this.infiniteList.pluginsReady.then(function () {\n          if (_this3.infiniteList.plugins.marquee) {\n            _this3.infiniteList.update();\n            _this3.infiniteList.plugins.marquee.init();\n          }\n        });\n      }\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvanMvY29tcG9uZW50cy9TY3JlZW5zV2FsbC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQUFxQkEsV0FBVywwQkFBQUMsY0FBQTtFQUMvQixTQUFBRCxZQUFBRSxJQUFBLEVBS0c7SUFBQSxJQUFBQyxLQUFBO0lBQUEsSUFKRkMsSUFBSSxHQUFBRixJQUFBLENBQUpFLElBQUk7TUFDSkMsbUJBQW1CLEdBQUFILElBQUEsQ0FBbkJHLG1CQUFtQjtNQUNuQkMsTUFBTSxHQUFBSixJQUFBLENBQU5JLE1BQU07TUFDTkMsT0FBTyxHQUFBTCxJQUFBLENBQVBLLE9BQU87SUFBQUMsZUFBQSxPQUFBUixXQUFBO0lBRVBHLEtBQUEsR0FBQU0sVUFBQSxPQUFBVCxXQUFBLEdBQU07TUFDTEksSUFBSSxFQUFKQSxJQUFJO01BQ0pDLG1CQUFtQixFQUFuQkEsbUJBQW1CO01BQ25CQyxNQUFNLEVBQU5BLE1BQU07TUFDTkMsT0FBTyxFQUFQQSxPQUFPO01BQ1A7TUFDQUcsUUFBUSxFQUFFO1FBQ1RDLE9BQU8sRUFBRTtVQUNSQyxLQUFLLEVBQUUsR0FBRztVQUNWQyxZQUFZLEVBQUU7UUFDZjtNQUNELENBQUM7TUFDRDtNQUNBQyxhQUFhLEVBQUU7UUFDZEMsU0FBUyxFQUFFLGtDQUFrQztRQUM3Q0MsS0FBSyxFQUFFLDZCQUE2QjtRQUNwQ0MsS0FBSyxFQUFFO01BQ1I7SUFDRCxDQUFDO0lBRURkLEtBQUEsQ0FBS2UsS0FBSyxDQUFDLENBQUM7SUFBQyxPQUFBZixLQUFBO0VBQ2Q7RUFBQ2dCLFNBQUEsQ0FBQW5CLFdBQUEsRUFBQUMsY0FBQTtFQUFBLE9BQUFtQixZQUFBLENBQUFwQixXQUFBO0lBQUFxQixHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBQyxLQUFBLEVBQU87TUFDTixJQUFJLENBQUNDLG1CQUFtQixDQUFDLENBQUM7TUFFMUIsSUFBSSxDQUFDLElBQUksQ0FBQ0Msa0JBQWtCLENBQUMsQ0FBQyxFQUFFO1FBQy9CLElBQUksQ0FBQ0MsWUFBWSxDQUFDLENBQUM7TUFDcEI7SUFDRDtFQUFDO0lBQUFMLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFLLFFBQUEsRUFBVTtNQUNULElBQUksSUFBSSxDQUFDQyxZQUFZLEVBQUU7UUFDdEIsSUFBSSxDQUFDQSxZQUFZLENBQUNELE9BQU8sQ0FBQyxDQUFDO01BQzVCO0lBQ0Q7RUFBQztJQUFBTixHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBTyxtQkFBQSxFQUFxQjtNQUFBLElBQUFDLE1BQUE7TUFDcEIsSUFBTUMsRUFBRSxHQUFHQyxJQUFJLENBQUNDLFFBQVEsQ0FBQztRQUN4QkMsTUFBTSxFQUFFO01BQ1QsQ0FBQyxDQUFDO01BRUYsSUFBSSxJQUFJLENBQUNDLFFBQVEsQ0FBQ2xCLEtBQUssQ0FBQ21CLE1BQU0sRUFBRTtRQUMvQkwsRUFBRSxDQUFDTSxXQUFXLENBQUMsSUFBSSxDQUFDRixRQUFRLENBQUNsQixLQUFLLEVBQUU7VUFDbkNxQixXQUFXLEVBQUUsUUFBUTtVQUNyQkMsUUFBUSxFQUFFLENBQUM7VUFDWEMsSUFBSSxFQUFFLFlBQVk7VUFDbEJDLE9BQU8sRUFBRUMsb0JBQW9CLENBQUM7WUFDN0JDLElBQUksRUFBRSxRQUFRO1lBQ2RDLE1BQU0sRUFBRTtVQUNULENBQUM7UUFDRixDQUFDLENBQUM7TUFDSDtNQUVBYixFQUFFLENBQUNjLEdBQUcsQ0FBQyxZQUFNO1FBQ1pmLE1BQUksQ0FBQ0osWUFBWSxDQUFDLENBQUM7TUFDcEIsQ0FBQyxFQUFFLE1BQU0sQ0FBQztNQUVWLE9BQU9LLEVBQUU7SUFDVjtFQUFDO0lBQUFWLEdBQUE7SUFBQUMsS0FBQSxFQUVELFNBQUFFLG9CQUFBLEVBQXNCO01BQ3JCLElBQUksQ0FBQ0ksWUFBWSxHQUFHLElBQUlrQixnQkFBZ0IsQ0FBQyxJQUFJLENBQUNYLFFBQVEsQ0FBQ3BCLFNBQVMsQ0FBQyxDQUFDLENBQUMsRUFBRTtRQUNwRWdDLFNBQVMsRUFBRSxVQUFVO1FBQ3JCQyxpQkFBaUIsRUFBRSxLQUFLO1FBQ3hCQyxvQkFBb0IsRUFBRSxJQUFJLENBQUNDLGNBQWMsQ0FBQ2pDLEtBQUs7UUFDL0NrQyxTQUFTLEVBQUU7VUFDVkMsWUFBWSxFQUFFLElBQUksQ0FBQ0YsY0FBYyxDQUFDbEMsS0FBSztVQUN2Q3FDLG9CQUFvQixFQUFFO1FBQ3ZCLENBQUM7UUFDREMsU0FBUyxFQUFFLElBQUk7UUFDZkMsSUFBSSxFQUFFLElBQUk7UUFDVkMsT0FBTyxFQUFFO1VBQ1I3QyxPQUFPLEVBQUU4QyxPQUFBLENBQU8sSUFBSSxDQUFDQyxPQUFPLENBQUMvQyxPQUFPLE1BQUssUUFBUSxHQUFBZ0QsYUFBQTtZQUNoREMsUUFBUSxFQUFFO1VBQUssR0FDWixJQUFJLENBQUNGLE9BQU8sQ0FBQy9DLE9BQU8sSUFDcEIsS0FBSztVQUNUa0QsTUFBTSxFQUFFO1FBQ1Q7TUFDRCxDQUFDLENBQUM7SUFDSDtFQUFDO0lBQUF4QyxHQUFBO0lBQUFDLEtBQUEsRUFFRCxTQUFBSSxhQUFBLEVBQWU7TUFBQSxJQUFBb0MsTUFBQTtNQUNkLElBQUksSUFBSSxDQUFDbEMsWUFBWSxFQUFFO1FBQ3RCLElBQUksQ0FBQ0EsWUFBWSxDQUFDbUMsWUFBWSxDQUFDQyxJQUFJLENBQUMsWUFBTTtVQUN6QyxJQUFJRixNQUFJLENBQUNsQyxZQUFZLENBQUM0QixPQUFPLENBQUM3QyxPQUFPLEVBQUU7WUFDdENtRCxNQUFJLENBQUNsQyxZQUFZLENBQUNxQyxNQUFNLENBQUMsQ0FBQztZQUMxQkgsTUFBSSxDQUFDbEMsWUFBWSxDQUFDNEIsT0FBTyxDQUFDN0MsT0FBTyxDQUFDWSxJQUFJLENBQUMsQ0FBQztVQUN6QztRQUNELENBQUMsQ0FBQztNQUNIO0lBQ0Q7RUFBQztBQUFBLEVBbEd1QzJDLGFBQWEiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly90aHJlZS1zaGFkZXItZW52MDEvLi9zcmMvanMvY29tcG9uZW50cy9TY3JlZW5zV2FsbC5qcz83ZDhhIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjcmVlbnNXYWxsIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHtcblx0XHRuYW1lLFxuXHRcdGxvYWRJbm5lckNvbXBvbmVudHMsXG5cdFx0cGFyZW50LFxuXHRcdGVsZW1lbnRcblx0fSkge1xuXHRcdHN1cGVyKHtcblx0XHRcdG5hbWUsXG5cdFx0XHRsb2FkSW5uZXJDb21wb25lbnRzLFxuXHRcdFx0cGFyZW50LFxuXHRcdFx0ZWxlbWVudCxcblx0XHRcdC8vIENvbXBvbmVudCBkZWZhdWx0IG9wdGlvbnNcblx0XHRcdGRlZmF1bHRzOiB7XG5cdFx0XHRcdG1hcnF1ZWU6IHtcblx0XHRcdFx0XHRzcGVlZDogMC41LFxuXHRcdFx0XHRcdG9uSG92ZXJTcGVlZDogMC41XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cdFx0XHQvLyBDb21wb25lbnQgaW5uZXIgZWxlbWVudHNcblx0XHRcdGlubmVyRWxlbWVudHM6IHtcblx0XHRcdFx0Y29udGFpbmVyOiAnLmpzLXNjcmVlbnMtd2FsbF9fbGlzdC1jb250YWluZXInLFxuXHRcdFx0XHRsYW5lczogJy5qcy1zY3JlZW5zLXdhbGxfX2xpc3QtbGFuZScsXG5cdFx0XHRcdGl0ZW1zOiAnLmpzLXNjcmVlbnMtd2FsbF9fbGlzdC1pdGVtJyxcblx0XHRcdH1cblx0XHR9KTtcblxuXHRcdHRoaXMuc2V0dXAoKTtcblx0fVxuXG5cdGluaXQoKSB7XG5cdFx0dGhpcy5fY3JlYXRlSW5maW5pdGVMaXN0KCk7XG5cblx0XHRpZiAoIXRoaXMuX2hhc0FuaW1hdGlvblNjZW5lKCkpIHtcblx0XHRcdHRoaXMuX2luaXRNYXJxdWVlKCk7XG5cdFx0fVxuXHR9XG5cblx0ZGVzdHJveSgpIHtcblx0XHRpZiAodGhpcy5pbmZpbml0ZUxpc3QpIHtcblx0XHRcdHRoaXMuaW5maW5pdGVMaXN0LmRlc3Ryb3koKTtcblx0XHR9XG5cdH1cblxuXHRnZXRSZXZlYWxBbmltYXRpb24oKSB7XG5cdFx0Y29uc3QgdGwgPSBnc2FwLnRpbWVsaW5lKHtcblx0XHRcdHBhdXNlZDogdHJ1ZVxuXHRcdH0pXG5cblx0XHRpZiAodGhpcy5lbGVtZW50cy5pdGVtcy5sZW5ndGgpIHtcblx0XHRcdHRsLmFuaW1hdGVNYXNrKHRoaXMuZWxlbWVudHMuaXRlbXMsIHtcblx0XHRcdFx0YW5pbWF0ZUZyb206ICdib3R0b20nLFxuXHRcdFx0XHRkdXJhdGlvbjogMixcblx0XHRcdFx0ZWFzZTogJ2V4cG8uaW5PdXQnLFxuXHRcdFx0XHRzdGFnZ2VyOiBkaXN0cmlidXRlQnlQb3NpdGlvbih7XG5cdFx0XHRcdFx0ZnJvbTogJ2NlbnRlcicsXG5cdFx0XHRcdFx0YW1vdW50OiAwLjVcblx0XHRcdFx0fSlcblx0XHRcdH0pO1xuXHRcdH1cblxuXHRcdHRsLmFkZCgoKSA9PiB7XG5cdFx0XHR0aGlzLl9pbml0TWFycXVlZSgpO1xuXHRcdH0sICc8NTAlJyk7XG5cblx0XHRyZXR1cm4gdGw7XG5cdH1cblxuXHRfY3JlYXRlSW5maW5pdGVMaXN0KCkge1xuXHRcdHRoaXMuaW5maW5pdGVMaXN0ID0gbmV3IEFydHNJbmZpbml0ZUxpc3QodGhpcy5lbGVtZW50cy5jb250YWluZXJbMF0sIHtcblx0XHRcdGRpcmVjdGlvbjogJ3ZlcnRpY2FsJyxcblx0XHRcdG1hcFdoZWVsRXZlbnRZdG9YOiBmYWxzZSxcblx0XHRcdGxpc3RFbGVtZW50c1NlbGVjdG9yOiB0aGlzLmlubmVyU2VsZWN0b3JzLml0ZW1zLFxuXHRcdFx0bXVsdGlMYW5lOiB7XG5cdFx0XHRcdGxhbmVTZWxlY3RvcjogdGhpcy5pbm5lclNlbGVjdG9ycy5sYW5lcyxcblx0XHRcdFx0bGFuZU9wdGlvbnNBdHRyaWJ1dGU6ICdkYXRhLWFydHMtaW5maW5pdGUtbGlzdC1vcHRpb25zJ1xuXHRcdFx0fSxcblx0XHRcdGF1dG9DbG9uZTogdHJ1ZSxcblx0XHRcdGxvb3A6IHRydWUsXG5cdFx0XHRwbHVnaW5zOiB7XG5cdFx0XHRcdG1hcnF1ZWU6IHR5cGVvZiB0aGlzLm9wdGlvbnMubWFycXVlZSA9PT0gJ29iamVjdCcgPyB7XG5cdFx0XHRcdFx0YXV0b0luaXQ6IGZhbHNlLFxuXHRcdFx0XHRcdC4uLnRoaXMub3B0aW9ucy5tYXJxdWVlXG5cdFx0XHRcdH0gOiBmYWxzZSxcblx0XHRcdFx0c2Nyb2xsOiBmYWxzZSxcblx0XHRcdH1cblx0XHR9KTtcblx0fVxuXG5cdF9pbml0TWFycXVlZSgpIHtcblx0XHRpZiAodGhpcy5pbmZpbml0ZUxpc3QpIHtcblx0XHRcdHRoaXMuaW5maW5pdGVMaXN0LnBsdWdpbnNSZWFkeS50aGVuKCgpID0+IHtcblx0XHRcdFx0aWYgKHRoaXMuaW5maW5pdGVMaXN0LnBsdWdpbnMubWFycXVlZSkge1xuXHRcdFx0XHRcdHRoaXMuaW5maW5pdGVMaXN0LnVwZGF0ZSgpO1xuXHRcdFx0XHRcdHRoaXMuaW5maW5pdGVMaXN0LnBsdWdpbnMubWFycXVlZS5pbml0KCk7XG5cdFx0XHRcdH1cblx0XHRcdH0pO1xuXHRcdH1cblx0fVxufVxuIl0sIm5hbWVzIjpbIlNjcmVlbnNXYWxsIiwiX0Jhc2VDb21wb25lbnQiLCJfcmVmIiwiX3RoaXMiLCJuYW1lIiwibG9hZElubmVyQ29tcG9uZW50cyIsInBhcmVudCIsImVsZW1lbnQiLCJfY2xhc3NDYWxsQ2hlY2siLCJfY2FsbFN1cGVyIiwiZGVmYXVsdHMiLCJtYXJxdWVlIiwic3BlZWQiLCJvbkhvdmVyU3BlZWQiLCJpbm5lckVsZW1lbnRzIiwiY29udGFpbmVyIiwibGFuZXMiLCJpdGVtcyIsInNldHVwIiwiX2luaGVyaXRzIiwiX2NyZWF0ZUNsYXNzIiwia2V5IiwidmFsdWUiLCJpbml0IiwiX2NyZWF0ZUluZmluaXRlTGlzdCIsIl9oYXNBbmltYXRpb25TY2VuZSIsIl9pbml0TWFycXVlZSIsImRlc3Ryb3kiLCJpbmZpbml0ZUxpc3QiLCJnZXRSZXZlYWxBbmltYXRpb24iLCJfdGhpczIiLCJ0bCIsImdzYXAiLCJ0aW1lbGluZSIsInBhdXNlZCIsImVsZW1lbnRzIiwibGVuZ3RoIiwiYW5pbWF0ZU1hc2siLCJhbmltYXRlRnJvbSIsImR1cmF0aW9uIiwiZWFzZSIsInN0YWdnZXIiLCJkaXN0cmlidXRlQnlQb3NpdGlvbiIsImZyb20iLCJhbW91bnQiLCJhZGQiLCJBcnRzSW5maW5pdGVMaXN0IiwiZGlyZWN0aW9uIiwibWFwV2hlZWxFdmVudFl0b1giLCJsaXN0RWxlbWVudHNTZWxlY3RvciIsImlubmVyU2VsZWN0b3JzIiwibXVsdGlMYW5lIiwibGFuZVNlbGVjdG9yIiwibGFuZU9wdGlvbnNBdHRyaWJ1dGUiLCJhdXRvQ2xvbmUiLCJsb29wIiwicGx1Z2lucyIsIl90eXBlb2YiLCJvcHRpb25zIiwiX29iamVjdFNwcmVhZCIsImF1dG9Jbml0Iiwic2Nyb2xsIiwiX3RoaXMzIiwicGx1Z2luc1JlYWR5IiwidGhlbiIsInVwZGF0ZSIsIkJhc2VDb21wb25lbnQiLCJkZWZhdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./src/js/components/ScreensWall.js\n");

/***/ }),

/***/ "./src/js/components/Scroll.js":
/*!*************************************!*\
  !*** ./src/js/components/Scroll.js ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Scroll)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Scroll = /*#__PURE__*/function (_BaseComponent) {\n  function Scroll(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element,\n      options = _ref.options;\n    _classCallCheck(this, Scroll);\n    _this = _callSuper(this, Scroll, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // External options from app.options.smoothScroll\n      defaults: options\n    }]);\n    _this._handlers = {\n      click: _this._onClick.bind(_this),\n      animationFrame: _this._onAnimationFrame.bind(_this),\n      animationFrameGSAP: _this._onAnimationFrameGSAP.bind(_this),\n      transitionEnd: _this.reset.bind(_this)\n    };\n    _this._raf = 0;\n    _this.instance = null;\n    _this.setup();\n    _this._attachAJAXListeners();\n    return _this;\n  }\n  _inherits(Scroll, _BaseComponent);\n  return _createClass(Scroll, [{\n    key: \"init\",\n    value: function init() {\n      this._createVelocityWatcher();\n      this._initSmoothScroll();\n      this._attachEvents();\n    }\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      if (this.instance) {\n        // this.instance.scroll = 0;\n        this.instance.targetScroll = 0;\n        this.instance.start();\n      }\n      this._detachEvents();\n      this.element = app.containerEl;\n      this._attachEvents();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      if (this.instance) {\n        this.instance.destroy();\n        if (!!this.options.useGSAPRaf) {\n          gsap.ticker.remove(this._handlers.animationFrameGSAP);\n        } else {\n          cancelAnimationFrame(this._raf);\n          this._raf = 0;\n        }\n        this.instance = undefined;\n      }\n    }\n  }, {\n    key: \"_initSmoothScroll\",\n    value: function _initSmoothScroll() {\n      var hasSmoothScroll = typeof Lenis !== 'undefined' && app.utilities.isEnabledOption(app.options.smoothScroll) && !this.instance;\n      if (hasSmoothScroll) {\n        this.instance = new Lenis({\n          duration: this.options.duration,\n          easing: this.options.easing\n        });\n        if (!!this.options.useGSAPRaf) {\n          gsap.ticker.add(this._handlers.animationFrameGSAP, false, true);\n        } else {\n          this._raf = requestAnimationFrame(this._handlers.animationFrame);\n        }\n      }\n      this._setSmoothScroll(hasSmoothScroll);\n    }\n  }, {\n    key: \"_setSmoothScroll\",\n    value: function _setSmoothScroll() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (enabled) {\n        document.documentElement.classList.add('has-smooth-scroll');\n        document.documentElement.classList.remove('no-smooth-scroll');\n      } else {\n        document.documentElement.classList.remove('has-smooth-scroll');\n        document.documentElement.classList.add('no-smooth-scroll');\n      }\n    }\n  }, {\n    key: \"_onAnimationFrame\",\n    value: function _onAnimationFrame(time) {\n      this.instance && this.instance.raf(time);\n      requestAnimationFrame(this._handlers.animationFrame);\n    }\n  }, {\n    key: \"_onAnimationFrameGSAP\",\n    value: function _onAnimationFrameGSAP(time, deltaTime, frame) {\n      this.instance && this.instance.raf(time * 1000);\n    }\n  }, {\n    key: \"_attachAJAXListeners\",\n    value: function _attachAJAXListeners() {\n      document.addEventListener('arts/barba/transition/end', this._handlers.transitionEnd);\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      this.element.addEventListener('click', this._handlers.click);\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      this.element.removeEventListener('click', this._handlers.click);\n    }\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(event) {\n      var target = event.target;\n      if (target instanceof HTMLElement) {\n        var link = target.closest('a'),\n          anchorTarget = this._getPageElementAnchor(link);\n        if (anchorTarget) {\n          event.preventDefault();\n          app.utilities.scrollTo({\n            target: anchorTarget\n          });\n        } else if (link && link.getAttribute('href') === '#!scroll-down') {\n          event.preventDefault();\n          var offset;\n          var horizontalScrollContainer = link.closest('.has-horizontal-scroll');\n          if (horizontalScrollContainer) {\n            var hsFirstSection = horizontalScrollContainer.querySelector('.js-horizontal-scroll__section');\n            if (hsFirstSection) {\n              offset = horizontalScrollContainer.offsetTop + hsFirstSection.offsetWidth;\n            } else {\n              offset = horizontalScrollContainer.offsetTop + window.innerWidth;\n            }\n          } else {\n            offset = window.innerHeight;\n          }\n          app.utilities.scrollTo({\n            target: offset\n          });\n        } else if (link && link.getAttribute('href') === '#!scroll-up') {\n          event.preventDefault();\n          app.utilities.scrollTo({\n            target: 0\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_getPageElementAnchor\",\n    value: function _getPageElementAnchor(element) {\n      if (!element) {\n        return null;\n      }\n      var href = element.getAttribute('href');\n      if (this._isValidAnchor(href)) {\n        return this._getAnchorTarget(href);\n      }\n      return null;\n    }\n  }, {\n    key: \"_isValidAnchor\",\n    value: function _isValidAnchor(href) {\n      return href && href !== '#' && !href.includes('elementor-action');\n    }\n  }, {\n    key: \"_getAnchorTarget\",\n    value: function _getAnchorTarget(href) {\n      var hashIndex = href.lastIndexOf('#');\n      var anchorID;\n      if (hashIndex !== -1) {\n        anchorID = href.slice(hashIndex + 1);\n      }\n      if (anchorID) {\n        return document.getElementById(anchorID);\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: \"_createVelocityWatcher\",\n    value: function _createVelocityWatcher() {\n      var ID = 'velocityWatcher';\n      if (!ScrollTrigger.getById(ID)) {\n        ScrollTrigger.create({\n          id: 'velocityWatcher',\n          start: 0,\n          end: function end() {\n            return ScrollTrigger.maxScroll('html');\n          }\n        });\n      }\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/Scroll.js\n");

/***/ }),

/***/ "./src/js/components/SliderFullpageBackgroundsMask.js":
/*!************************************************************!*\
  !*** ./src/js/components/SliderFullpageBackgroundsMask.js ***!
  \************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SliderFullpageBackgroundsMask)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar SliderFullpageBackgroundsMask = /*#__PURE__*/function (_SliderFullpageBase) {\n  function SliderFullpageBackgroundsMask(_ref) {\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, SliderFullpageBackgroundsMask);\n    return _callSuper(this, SliderFullpageBackgroundsMask, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element\n    }]);\n  }\n  _inherits(SliderFullpageBackgroundsMask, _SliderFullpageBase);\n  return _createClass(SliderFullpageBackgroundsMask, [{\n    key: \"getRevealAnimation\",\n    value: function getRevealAnimation() {\n      var _this = this;\n      var isNoScaleRequired = this.options.scaleOuter === 1 && this.options.scaleInner === 1,\n        duration = 1.2,\n        tl = gsap.timeline({\n          paused: true,\n          onStart: function onStart() {\n            _this._lockInteraction(true);\n          },\n          defaults: {\n            duration: duration,\n            ease: 'power3.inOut'\n          }\n        });\n      tl.set(this.elementsFirstSlide.sections, {\n        autoAlpha: 1\n      }).fromTo(this.elementsFirstSlide.masksOuter, {\n        transformOrigin: 'center center',\n        scale: 1,\n        '--shape-size': 100\n      }, {\n        scale: this.options.scaleOuter,\n        duration: isNoScaleRequired ? 0.01 : duration,\n        '--shape-size': this.options.shapeSize\n      }).fromTo(this.elementsFirstSlide.masksInner, {\n        transformOrigin: 'center center',\n        scale: 1\n      }, {\n        scale: this.options.scaleInner,\n        duration: isNoScaleRequired ? 0.01 : duration\n      }, '<').add([gsap.effects.animateLines(this.elementsFirstSlide.subheadings, {\n        duration: this.options.transitionDuration,\n        stagger: {\n          from: 'start',\n          amount: this.options.transitionDuration / 10\n        }\n      }), gsap.effects.animateChars(this.elementsFirstSlide.headings, {\n        duration: this.options.transitionDuration,\n        ease: 'expo.out',\n        stagger: {\n          from: 'start',\n          amount: this.options.transitionDuration / 3\n        }\n      }), gsap.effects.animateLines(this.elementsFirstSlide.texts, {\n        duration: this.options.transitionDuration,\n        stagger: {\n          from: 'start',\n          amount: this.options.transitionDuration / 10\n        }\n      }), gsap.to(this.elementsFirstSlide.buttons, {\n        duration: 0.3,\n        y: 0,\n        autoAlpha: 1\n      }), gsap.to(this.elementsFirstSlide.overlays, {\n        autoAlpha: 1,\n        duration: 0.3\n      }), gsap.to(this.elements.dots, {\n        autoAlpha: 1,\n        y: 0,\n        x: 0,\n        duration: 0.3\n      }), gsap.to(this.elements.arrowsInner, {\n        autoAlpha: 1,\n        y: 0,\n        x: 0,\n        duration: 0.3,\n        onComplete: function onComplete() {\n          gsap.set(_this.elements.arrowsInner, {\n            clearProps: 'all'\n          });\n        }\n      }), gsap.to(this.elements.arrows, {\n        autoAlpha: 1,\n        duration: 0.3,\n        onComplete: function onComplete() {\n          gsap.set(_this.elements.arrows, {\n            clearProps: 'all'\n          });\n        }\n      }), function () {\n        if (!!_this.options.autoplay) {\n          _this.fullpageSlider.autoplay.init();\n        }\n        _this._lockInteraction(false);\n      }], '<66%');\n      return tl;\n    }\n  }, {\n    key: \"_getTimelineTransition\",\n    value: function _getTimelineTransition(_ref2) {\n      var _ref3,\n        _ref4,\n        _this2 = this;\n      var _ref2$current = _ref2.current,\n        current = _ref2$current === void 0 ? (_ref3 = {}, section = _ref3.section, maskOuter = _ref3.maskOuter, maskInner = _ref3.maskInner, subheading = _ref3.subheading, heading = _ref3.heading, text = _ref3.text, button = _ref3.button, overlay = _ref3.overlay, _ref3) : _ref2$current,\n        _ref2$target = _ref2.target,\n        target = _ref2$target === void 0 ? (_ref4 = {}, section = _ref4.section, maskOuter = _ref4.maskOuter, maskInner = _ref4.maskInner, subheading = _ref4.subheading, heading = _ref4.heading, text = _ref4.text, button = _ref4.button, overlay = _ref4.overlay, _ref4) : _ref2$target,\n        direction = _ref2.direction;\n      var tl = gsap.timeline(),\n        isNoScaleRequired = this.options.scaleOuter === 1 && this.options.scaleInner === 1,\n        allMasks = [current.maskOuter, current.maskInner, target.maskOuter, target.maskInner];\n      tl.add(function () {\n        return _this2._lockInteraction(true);\n      }).add(this._setSection(target.section, true)).add(this._animateSlideContentOut(0, direction === 'next' ? 'prev' : 'next', target)).add(this._animateSlideMaskOut(0, direction, target)).add(this._animateSlideContentOut(this.options.transitionDuration, direction, current)).add(this._animateSlideMaskOut(this.options.transitionDuration, direction, current), '<');\n      if (!isNoScaleRequired && allMasks.length) {\n        tl.to({}, {\n          ease: 'power3.inOut',\n          duration: isNoScaleRequired ? 0.01 : this.options.transitionDuration\n        }, '<');\n      }\n      tl.add(this._animateSlideMaskIn(this.options.transitionDuration, direction, target), isNoScaleRequired ? '<' : '<66%').add(this._animateSlideContentIn(this.options.transitionDuration, direction, target), '<66%').add(function () {\n        return _this2._lockInteraction(false);\n      }, '<50%').add(this._setSection(current.section, false));\n      return tl;\n    }\n  }, {\n    key: \"_getTimelineTransitionWebGL\",\n    value: function _getTimelineTransitionWebGL(_ref5) {\n      var _ref6,\n        _ref7,\n        _this3 = this;\n      var _ref5$current = _ref5.current,\n        current = _ref5$current === void 0 ? (_ref6 = {}, section = _ref6.section, maskOuter = _ref6.maskOuter, maskInner = _ref6.maskInner, subheading = _ref6.subheading, heading = _ref6.heading, text = _ref6.text, button = _ref6.button, overlay = _ref6.overlay, _ref6) : _ref5$current,\n        _ref5$target = _ref5.target,\n        target = _ref5$target === void 0 ? (_ref7 = {}, section = _ref7.section, maskOuter = _ref7.maskOuter, maskInner = _ref7.maskInner, subheading = _ref7.subheading, heading = _ref7.heading, text = _ref7.text, button = _ref7.button, overlay = _ref7.overlay, _ref7) : _ref5$target,\n        direction = _ref5.direction;\n      var tl = gsap.timeline();\n      tl.add(function () {\n        return _this3._lockInteraction(true);\n      }).add(this._setSection(target.section, true)).add(this._animateSlideOutWebGL(this.options.transitionDuration, direction, current)).add(this._animateSlideContentOut(this.options.transitionDuration, direction, current), '<');\n      tl.add(this._animateSlideInWebGL(this.options.transitionDuration, direction, target), '<').add(this._animateSlideContentIn(this.options.transitionDuration, direction, target), '<66%').add(function () {\n        return _this3._lockInteraction(false);\n      }, '<50%').add(this._setSection(current.section, false));\n      return tl;\n    }\n  }, {\n    key: \"_animateSlideMaskOut\",\n    value: function _animateSlideMaskOut() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.transitionDuration;\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'next';\n      var _ref8 = arguments.length > 2 ? arguments[2] : undefined,\n        maskOuter = _ref8.maskOuter,\n        maskInner = _ref8.maskInner;\n      var tl = gsap.timeline({\n          defaults: {\n            ease: 'power3.inOut',\n            duration: duration\n          }\n        }),\n        isNoScaleRequired = this.options.scaleOuter === 1 && this.options.scaleInner === 1,\n        isNextDirection = direction === 'next',\n        isVerticalDirection = this.options.direction === 'vertical',\n        axis = isVerticalDirection ? 'y' : 'x';\n      if (maskOuter) {\n        tl.to(maskOuter, {\n          scale: 1.0,\n          force3D: false,\n          duration: isNoScaleRequired ? 0.01 : duration\n        }, 'start');\n      }\n      if (maskInner) {\n        tl.to(maskInner, {\n          scale: 1.0,\n          force3D: false,\n          duration: isNoScaleRequired ? 0.01 : duration\n        }, 'start');\n      }\n      if (!isNoScaleRequired && maskOuter) {\n        tl.fromTo(maskOuter, {\n          '--shape-size': this.options.shapeSize\n        }, {\n          '--shape-size': this.options.shapeSizeTransition\n        }, '<');\n      }\n\n      // Animate out current section mask element #1\n      if (maskOuter) {\n        tl.to(maskOuter, _defineProperty({}, axis, isNextDirection ? '-100%' : '100%'), '<66%');\n      }\n\n      // Animate out current section mask element #2\n      if (maskInner) {\n        tl.to(maskInner, _defineProperty({}, axis, isNextDirection ? '50%' : '-50%'), '<');\n      }\n      return tl;\n    }\n  }, {\n    key: \"_animateSlideOutWebGL\",\n    value: function _animateSlideOutWebGL() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.transitionDuration;\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'next';\n      var _ref9 = arguments.length > 2 ? arguments[2] : undefined,\n        section = _ref9.section;\n      if (!this.curtains || !this.curtains.instance) {\n        return;\n      }\n      var tl = gsap.timeline({\n          defaults: {\n            ease: 'expo.inOut',\n            duration: duration\n          }\n        }),\n        ID = section.getAttribute('data-post-id');\n      this.curtains.instance.planes.filter(function (plane) {\n        return plane.userData && plane.userData.postId === ID;\n      }).forEach(function (plane) {\n        var animation = {\n          opacity: plane.uniforms.opacity.value,\n          transition: 0,\n          scaleX: plane.scale.x,\n          scaleY: plane.scale.y,\n          transformOriginX: plane.transformOrigin.x,\n          transformOriginY: plane.transformOrigin.y,\n          transformOriginZ: plane.transformOrigin.z\n        };\n        tl.to(animation, {\n          opacity: 0,\n          transition: 1,\n          scaleX: 1.5,\n          scaleY: 1.5,\n          transformOriginX: 0.5,\n          transformOriginY: 0.5,\n          transformOriginZ: 0.5,\n          duration: 2.4,\n          ease: 'expo.inOut',\n          onComplete: function onComplete() {\n            // Turn off plane visibility\n            plane.visible = false;\n            plane.setRenderOrder(0);\n          },\n          onUpdate: function onUpdate() {\n            plane.uniforms.opacity.value = animation.opacity;\n            plane.scale.x = animation.scaleX;\n            plane.scale.y = animation.scaleY;\n            plane.transformOrigin.x = animation.transformOriginX;\n            plane.transformOrigin.y = animation.transformOriginY;\n            plane.transformOrigin.z = animation.transformOriginZ;\n            if (animation.progress < 0.5) {\n              plane.uniforms.transition.value = animation.transition;\n            } else {\n              plane.uniforms.transition.value = 1 - animation.transition;\n            }\n          }\n        });\n      });\n      return tl;\n    }\n  }, {\n    key: \"_animateSlideMaskIn\",\n    value: function _animateSlideMaskIn() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.transitionDuration;\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'next';\n      var _ref10 = arguments.length > 2 ? arguments[2] : undefined,\n        maskOuter = _ref10.maskOuter,\n        maskInner = _ref10.maskInner;\n      var tl = gsap.timeline({\n          defaults: {\n            ease: 'power3.inOut',\n            duration: duration\n          }\n        }),\n        isNoScaleRequired = this.options.scaleOuter === 1 && this.options.scaleInner === 1,\n        isNextDirection = direction === 'next',\n        isVerticalDirection = this.options.direction === 'vertical',\n        axis = isVerticalDirection ? 'y' : 'x';\n\n      // Animate in next section mask element #1\n      if (maskOuter) {\n        tl.fromTo(maskOuter, _defineProperty({}, axis, isNextDirection ? '100%' : '-100%'), _defineProperty(_defineProperty({}, axis, '0%'), \"force3D\", false), '<');\n      }\n\n      // Animate in next section mask element #2\n      if (maskInner) {\n        tl.fromTo(maskInner, _defineProperty({}, axis, isNextDirection ? '-50%' : '50%'), _defineProperty(_defineProperty({}, axis, '0%'), \"force3D\", false), '<');\n      }\n      if (!isNoScaleRequired) {\n        // Animate in next section shape #1\n        if (maskOuter) {\n          tl.fromTo(maskOuter, {\n            // scale: 1,\n            '--shape-size': this.options.shapeSizeTransition\n          }, {\n            scale: this.options.scaleOuter,\n            '--shape-size': this.options.shapeSize\n          }, '<66%');\n        }\n\n        // Animate in next section shape #2\n        if (maskInner) {\n          tl.to(maskInner, {\n            scale: this.options.scaleInner\n          }, '<');\n        }\n      }\n      return tl;\n    }\n  }, {\n    key: \"_animateSlideInWebGL\",\n    value: function _animateSlideInWebGL() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.transitionDuration;\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'next';\n      var _ref11 = arguments.length > 2 ? arguments[2] : undefined,\n        section = _ref11.section;\n      if (!this.curtains || !this.curtains.instance) {\n        return;\n      }\n      var tl = gsap.timeline({\n          defaults: {\n            ease: 'expo.inOut',\n            duration: duration\n          }\n        }),\n        ID = section.getAttribute('data-post-id');\n      this.curtains.instance.planes.filter(function (plane) {\n        return plane.userData && plane.userData.postId === ID;\n      }).forEach(function (plane) {\n        var animation = {\n          opacity: 0,\n          transition: 0,\n          scaleX: 1.5,\n          scaleY: 1.5,\n          transformOriginX: plane.transformOrigin.x,\n          transformOriginY: plane.transformOrigin.y,\n          transformOriginZ: plane.transformOrigin.z\n        };\n        tl.to(animation, {\n          opacity: 1,\n          transition: 1,\n          scaleX: 1,\n          scaleY: 1,\n          transformOriginX: 0.5,\n          transformOriginY: 0.5,\n          transformOriginZ: 0.5,\n          duration: 2.4,\n          ease: 'expo.inOut',\n          onStart: function onStart() {\n            // Put the current plane in front\n            plane.setRenderOrder(1);\n            plane.uniforms.opacity.value = 0;\n\n            // Turn on plane visibility\n            plane.visible = true;\n          },\n          onUpdate: function onUpdate() {\n            plane.uniforms.opacity.value = animation.opacity;\n            plane.scale.x = animation.scaleX;\n            plane.scale.y = animation.scaleY;\n            plane.transformOrigin.x = animation.transformOriginX;\n            plane.transformOrigin.y = animation.transformOriginY;\n            plane.transformOrigin.z = animation.transformOriginZ;\n            if (animation.progress < 0.5) {\n              plane.uniforms.transition.value = animation.transition;\n            } else {\n              plane.uniforms.transition.value = 1 - animation.transition;\n            }\n          }\n        });\n      });\n      return tl;\n    }\n  }]);\n}(SliderFullpageBase);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/SliderFullpageBackgroundsMask.js\n");

/***/ }),

/***/ "./src/js/components/SliderFullpageBackgroundsSlide.js":
/*!*************************************************************!*\
  !*** ./src/js/components/SliderFullpageBackgroundsSlide.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SliderFullpageBackgroundsSlide)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar SliderFullpageBackgroundsSlide = /*#__PURE__*/function (_SliderFullpageBase) {\n  function SliderFullpageBackgroundsSlide(_ref) {\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, SliderFullpageBackgroundsSlide);\n    return _callSuper(this, SliderFullpageBackgroundsSlide, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element\n    }]);\n  }\n  _inherits(SliderFullpageBackgroundsSlide, _SliderFullpageBase);\n  return _createClass(SliderFullpageBackgroundsSlide, [{\n    key: \"_setMasks\",\n    value: function _setMasks(hasAnimationScene) {\n      this.elementsFirstSlide.masksOuter.forEach(function (el, index) {\n        if (hasAnimationScene) {\n          gsap.effects.hideMask(el, {\n            duration: 0,\n            clearProps: ''\n          });\n        }\n      });\n      this.elementsFirstSlide.masksInner.forEach(function (el, index) {\n        if (hasAnimationScene) {\n          gsap.set(el, {\n            scale: 1.2,\n            transformOrigin: 'center center'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getRevealAnimation\",\n    value: function getRevealAnimation() {\n      var _this = this;\n      var duration = 1.2;\n      var tl = gsap.timeline({\n        paused: true,\n        onStart: function onStart() {\n          _this._lockInteraction(true);\n        },\n        defaults: {\n          duration: duration,\n          ease: 'power3.inOut'\n        }\n      }).set(this.elementsFirstSlide.sections, {\n        autoAlpha: 1\n      }).add([gsap.effects.animateMask(this.elementsFirstSlide.masksOuter, {\n        duration: duration,\n        stagger: 0.1\n      }), gsap.to(this.elementsFirstSlide.masksInner, {\n        transformOrigin: 'center center',\n        scale: 1,\n        stagger: 0.1,\n        duration: duration\n      })]).add([gsap.effects.animateLines(this.elementsFirstSlide.subheadings, {\n        duration: this.options.transitionDuration,\n        stagger: {\n          from: 'start',\n          amount: this.options.transitionDuration / 10\n        }\n      }), gsap.effects.animateChars(this.elementsFirstSlide.headings, {\n        duration: this.options.transitionDuration,\n        ease: 'expo.out',\n        stagger: {\n          from: 'start',\n          amount: this.options.transitionDuration / 3\n        }\n      }), gsap.effects.animateLines(this.elementsFirstSlide.texts, {\n        duration: this.options.transitionDuration,\n        stagger: {\n          from: 'start',\n          amount: this.options.transitionDuration / 10\n        }\n      }), gsap.to(this.elementsFirstSlide.buttons, {\n        duration: 0.3,\n        y: 0,\n        autoAlpha: 1\n      }), gsap.to(this.elementsFirstSlide.overlays, {\n        autoAlpha: 1,\n        duration: 0.3\n      }), gsap.to(this.elements.dots, {\n        autoAlpha: 1,\n        // y: 0,\n        // x: 0,\n        duration: 0.3\n      }), gsap.to(this.elements.arrowsInner, {\n        autoAlpha: 1,\n        y: 0,\n        x: 0,\n        duration: 0.3,\n        onComplete: function onComplete() {\n          gsap.set(_this.elements.arrowsInner, {\n            clearProps: 'all'\n          });\n        }\n      }), gsap.to(this.elements.arrows, {\n        autoAlpha: 1,\n        duration: 0.3,\n        onComplete: function onComplete() {\n          gsap.set(_this.elements.arrows, {\n            clearProps: 'all'\n          });\n        }\n      }), function () {\n        if (!!_this.options.autoplay) {\n          _this.fullpageSlider.autoplay.init();\n        }\n        _this._lockInteraction(false);\n      }], '<66%');\n      return tl;\n    }\n  }, {\n    key: \"_getTimelineTransition\",\n    value: function _getTimelineTransition(_ref2) {\n      var _ref3,\n        _ref4,\n        _this2 = this;\n      var _ref2$current = _ref2.current,\n        current = _ref2$current === void 0 ? (_ref3 = {}, section = _ref3.section, maskOuter = _ref3.maskOuter, maskInner = _ref3.maskInner, subheading = _ref3.subheading, heading = _ref3.heading, text = _ref3.text, button = _ref3.button, overlay = _ref3.overlay, _ref3) : _ref2$current,\n        _ref2$target = _ref2.target,\n        target = _ref2$target === void 0 ? (_ref4 = {}, section = _ref4.section, maskOuter = _ref4.maskOuter, maskInner = _ref4.maskInner, subheading = _ref4.subheading, heading = _ref4.heading, text = _ref4.text, button = _ref4.button, overlay = _ref4.overlay, _ref4) : _ref2$target,\n        direction = _ref2.direction;\n      var tl = gsap.timeline();\n      tl.add(function () {\n        return _this2._lockInteraction(true);\n      }).add(this._setSection(target.section, true)).add(this._animateSlideOut(0, direction, target)).add(this._animateSlideOut(this.options.transitionDuration, direction, current)).add(this._animateSlideContentOut(this.options.transitionDuration, direction, current), '<');\n      tl.add(this._animateSlideIn(this.options.transitionDuration, direction, target), '<20%').add(this._animateSlideContentIn(this.options.transitionDuration, direction, target), '<66%').add(function () {\n        return _this2._lockInteraction(false);\n      }, '<50%').add(this._setSection(current.section, false));\n      return tl;\n    }\n  }, {\n    key: \"_getTimelineTransitionWebGL\",\n    value: function _getTimelineTransitionWebGL(_ref5) {\n      var _ref6,\n        _ref7,\n        _this3 = this;\n      var _ref5$current = _ref5.current,\n        current = _ref5$current === void 0 ? (_ref6 = {}, section = _ref6.section, maskOuter = _ref6.maskOuter, maskInner = _ref6.maskInner, subheading = _ref6.subheading, heading = _ref6.heading, text = _ref6.text, button = _ref6.button, overlay = _ref6.overlay, _ref6) : _ref5$current,\n        _ref5$target = _ref5.target,\n        target = _ref5$target === void 0 ? (_ref7 = {}, section = _ref7.section, maskOuter = _ref7.maskOuter, maskInner = _ref7.maskInner, subheading = _ref7.subheading, heading = _ref7.heading, text = _ref7.text, button = _ref7.button, overlay = _ref7.overlay, _ref7) : _ref5$target,\n        direction = _ref5.direction;\n      var tl = gsap.timeline();\n      tl.add(function () {\n        return _this3._lockInteraction(true);\n      }).add(this._setSection(target.section, true))\n      // .add(this._animateSlideOut(0, direction, target))\n      .add(this._animateSlideOutWebGL(this.options.transitionDuration, direction, current)).add(this._animateSlideContentOut(this.options.transitionDuration, direction, current), '<');\n      tl.add(this._animateSlideInWebGL(this.options.transitionDuration, direction, target), '<50%').add(this._animateSlideContentIn(this.options.transitionDuration, direction, target), '<66%').add(function () {\n        return _this3._lockInteraction(false);\n      }, '<50%').add(this._setSection(current.section, false));\n      return tl;\n    }\n  }, {\n    key: \"_animateSlideOut\",\n    value: function _animateSlideOut() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.transitionDuration;\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'next';\n      var _ref8 = arguments.length > 2 ? arguments[2] : undefined,\n        maskOuter = _ref8.maskOuter,\n        maskInner = _ref8.maskInner;\n      var tl = gsap.timeline({\n        defaults: {\n          ease: 'expo.inOut',\n          duration: duration\n        }\n      });\n      var maskDirection = this._getHideMaskDirection(direction);\n      if (maskOuter) {\n        tl.hideMask(maskOuter, {\n          animateTo: maskDirection,\n          duration: duration,\n          clearProps: '',\n          stagger: 0.1\n        }, 'start');\n      }\n      if (maskInner) {\n        tl.to(maskInner, {\n          scale: 1.1,\n          transformOrigin: 'center center',\n          stagger: 0.1\n        }, 'start');\n      }\n      return tl;\n    }\n  }, {\n    key: \"_animateSlideOutWebGL\",\n    value: function _animateSlideOutWebGL() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.transitionDuration;\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'next';\n      var _ref9 = arguments.length > 2 ? arguments[2] : undefined,\n        section = _ref9.section;\n      var tl = gsap.timeline({\n        defaults: {\n          ease: 'expo.inOut',\n          duration: duration\n        }\n      });\n      return tl;\n    }\n  }, {\n    key: \"_animateSlideIn\",\n    value: function _animateSlideIn() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.transitionDuration;\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'next';\n      var _ref10 = arguments.length > 2 ? arguments[2] : undefined,\n        maskOuter = _ref10.maskOuter,\n        maskInner = _ref10.maskInner;\n      var tl = gsap.timeline({\n        defaults: {\n          ease: 'expo.inOut',\n          duration: duration\n        }\n      });\n      var maskDirection = this._getAnimateMaskDirection(direction);\n      if (maskOuter) {\n        tl.animateMask(maskOuter, {\n          animateFrom: maskDirection,\n          duration: duration,\n          clearProps: '',\n          stagger: 0.1\n        }, 'start');\n      }\n      if (maskInner) {\n        tl.fromTo(maskInner, {\n          scale: 1.1\n        }, {\n          scale: 1,\n          transformOrigin: 'center center',\n          stagger: 0.1\n        }, 'start');\n      }\n      return tl;\n    }\n  }, {\n    key: \"_animateSlideInWebGL\",\n    value: function _animateSlideInWebGL() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.transitionDuration;\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'next';\n      var _ref11 = arguments.length > 2 ? arguments[2] : undefined,\n        section = _ref11.section;\n      var tl = gsap.timeline({\n        defaults: {\n          ease: 'expo.inOut',\n          duration: duration\n        }\n      });\n      return tl;\n    }\n  }, {\n    key: \"_getHideMaskDirection\",\n    value: function _getHideMaskDirection(direction) {\n      if (this.options.direction === 'vertical') {\n        if (direction === 'next') {\n          return 'bottom';\n        } else {\n          return 'top';\n        }\n      } else {\n        if (direction === 'next') {\n          return 'left';\n        } else {\n          return 'right';\n        }\n      }\n    }\n  }, {\n    key: \"_getAnimateMaskDirection\",\n    value: function _getAnimateMaskDirection(direction) {\n      if (this.options.direction === 'vertical') {\n        if (direction === 'next') {\n          return 'top';\n        } else {\n          return 'bottom';\n        }\n      } else {\n        if (direction === 'next') {\n          return 'right';\n        } else {\n          return 'left';\n        }\n      }\n    }\n  }]);\n}(SliderFullpageBase);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/SliderFullpageBackgroundsSlide.js\n");

/***/ }),

/***/ "./src/js/components/SliderImages.js":
/*!*******************************************!*\
  !*** ./src/js/components/SliderImages.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SliderImages)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar SliderImages = /*#__PURE__*/function (_BaseComponent) {\n  function SliderImages(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, SliderImages);\n    _this = _callSuper(this, SliderImages, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        drag: {\n          label: 'Drag',\n          arrowsDistance: 50,\n          scale: 1.5,\n          hideNative: true,\n          toggleClass: 'infinite-list_mouse-drag',\n          color: 'var(--ui-element-color-light-theme)',\n          background: 'var(--color-accent-dark-theme)'\n        },\n        preventScroll: false,\n        direction: 'horizontal',\n        scroll: app.options.virtualScroll,\n        loop: true,\n        autoCenterFirstItem: true,\n        type: 'touch,pointer',\n        toggleScrollingClass: 'infinite-list_scrolling',\n        toggleDraggingClass: 'infinite-list_dragging',\n        togglePressedClass: 'infinite-list_pressed',\n        snapOnRelease: {\n          keyboard: false,\n          toggleActiveItemClass: 'active',\n          removeActiveClassOnInteraction: false\n        },\n        marquee: {\n          speed: 0.3,\n          onHoverSpeed: 0\n        },\n        currentClass: 'current'\n      },\n      // Component inner elements\n      innerElements: {\n        items: '.js-slider-images__item'\n      }\n    }]);\n    _this._handlers = {\n      resize: app.utilities.debounce(_this._onResize.bind(_this), app.utilities.getDebounceTime())\n    };\n    _this.setup();\n    return _this;\n  }\n  _inherits(SliderImages, _BaseComponent);\n  return _createClass(SliderImages, [{\n    key: \"init\",\n    value: function init() {\n      this.updateRef('cursorRef', 'CursorFollower');\n      this._createInfiniteList();\n      this._attachEvents();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      if (this.infiniteList) {\n        this.infiniteList.destroy();\n      }\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      if (!!this.options.drag) {\n        if (typeof this.options.drag.toggleClass === 'string') {\n          this.element.classList.add(this.options.drag.toggleClass);\n        }\n        this._attachDragListeners();\n      }\n      window.addEventListener('resize', this._handlers.resize);\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      window.removeEventListener('resize', this._handlers.resize);\n    }\n  }, {\n    key: \"_attachDragListeners\",\n    value: function _attachDragListeners() {\n      var _this2 = this;\n      this.infiniteList.controller.on('dragPressed', function (pressed) {\n        _this2.updateRef('cursorRef', 'CursorFollower');\n        if (_this2.cursorRef) {\n          if (pressed) {\n            _this2.cursorRef.instance.reset();\n            _this2.cursorRef.instance.set({\n              autoReset: false,\n              arrows: _this2.options.direction,\n              arrowsDistance: _this2.options.drag.arrowsDistance,\n              scale: _this2.options.drag.scale,\n              label: _this2.options.drag.label || '',\n              className: _this2.options.drag.className || '',\n              hideNative: _this2.options.drag.hideNative,\n              color: _this2.options.drag.color,\n              background: _this2.options.drag.background\n            });\n          } else {\n            _this2.cursorRef.instance.set({\n              autoReset: true\n            });\n            _this2.cursorRef.instance.reset();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_createInfiniteList\",\n    value: function _createInfiniteList() {\n      this.infiniteList = new ArtsInfiniteList(this.element, {\n        direction: this.options.direction,\n        listElementsSelector: '.js-slider-images__item',\n        multiLane: {\n          laneSelector: '.js-slider-images__lane',\n          laneOptionsAttribute: 'data-lane-options'\n        },\n        autoCenterFirstItem: this.options.autoCenterFirstItem,\n        autoClone: this.options.loop,\n        loop: this.options.loop,\n        scroll: this.options.scroll,\n        plugins: {\n          marquee: this.options.marquee,\n          scroll: {\n            type: this.options.type,\n            toggleScrollingClass: this.options.toggleScrollingClass,\n            toggleDraggingClass: this.options.toggleDraggingClass,\n            togglePressedClass: this.options.togglePressedClass,\n            snapOnRelease: this.options.snapOnRelease,\n            preventDefault: this.options.preventScroll\n          }\n          // renderer: true,\n          // speedEffect: this.options.speedEffect,\n          // progressEffect: this.options.progressEffect,\n        }\n        // matchMedia: '(min-width: 1024px)',\n        // resizeObserver: true\n      });\n    }\n  }, {\n    key: \"_adjustSliderHeight\",\n    value: function _adjustSliderHeight() {\n      var tl = gsap.timeline({\n        onComplete: function onComplete() {\n          ScrollTrigger.refresh(true);\n        }\n      });\n      var maxHeight = 0;\n      this.elements.items.forEach(function (el) {\n        if (el.offsetHeight > maxHeight) {\n          maxHeight = el.offsetHeight;\n        }\n      });\n      tl.to(this.element, {\n        maxHeight: maxHeight,\n        duration: 1.2\n      });\n      return tl;\n    }\n  }, {\n    key: \"_onResize\",\n    value: function _onResize() {\n      this._adjustSliderHeight();\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/SliderImages.js\n");

/***/ }),

/***/ "./src/js/components/SliderTestimonials.js":
/*!*************************************************!*\
  !*** ./src/js/components/SliderTestimonials.js ***!
  \*************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SliderTestimonials)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar SliderTestimonials = /*#__PURE__*/function (_BaseComponent) {\n  function SliderTestimonials(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, SliderTestimonials);\n    _this = _callSuper(this, SliderTestimonials, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        keyboard: false,\n        controls: true,\n        direction: 'horizontal',\n        loop: true,\n        autoplay: 8,\n        transitionDuration: 1.2\n      },\n      // Component inner elements\n      innerElements: {\n        container: '.slider-testimonials__container',\n        sections: '.js-slider-testimonials__section',\n        subheadings: '.js-slider-testimonials__item-subheading',\n        headings: '.js-slider-testimonials__item-heading',\n        texts: '.js-slider-testimonials__item-text',\n        circles: '.js-slider-testimonials__dot circle',\n        dots: '.js-slider-testimonials__dots',\n        arrows: '.js-slider-testimonials__arrow',\n        arrowsInner: '.slider-arrow__inner'\n      }\n    }]);\n    _this._handlers = {\n      autoplayStart: _this._onAutoplayStart.bind(_this),\n      autoplayStop: _this._onAutoplayStop.bind(_this),\n      autoplayPause: _this._onAutoplayPause.bind(_this),\n      autoplayResume: _this._onAutoplayResume.bind(_this),\n      sectionChange: _this._onSectionChange.bind(_this),\n      animationOut: _this._onAnimationOut.bind(_this),\n      transitionStart: _this._onTransitionStart.bind(_this),\n      resize: app.utilities.debounce(_this._onResize.bind(_this), app.utilities.getDebounceTime())\n    };\n    _this.dotsTL = gsap.timeline();\n    _this.setup();\n    return _this;\n  }\n  _inherits(SliderTestimonials, _BaseComponent);\n  return _createClass(SliderTestimonials, [{\n    key: \"init\",\n    value: function init() {\n      var options = {\n        init: false,\n        interaction: false,\n        keyboard: this.options.keyboard,\n        controls: this.options.controls,\n        animation: false,\n        direction: this.options.direction,\n        loop: this.options.loop,\n        autoplay: typeof this.options.autoplay === 'number' ? {\n          autoInit: false,\n          duration: this.options.autoplay\n        } : false,\n        sectionElementsSelector: this.innerSelectors.sections,\n        controlsPrevSelector: '[data-arts-fullpage-slider-arrow=\"prev\"]',\n        controlsNextSelector: '[data-arts-fullpage-slider-arrow=\"next\"]',\n        indicatorsSelector: '[data-arts-fullpage-slider-indicator]',\n        matchMedia: false,\n        animationOut: this._handlers.animationOut\n      };\n      this.slider = new ArtsFullpageSlider(this.element, options);\n      this.slider.update();\n      this._setSlides();\n      this._setDots();\n      this._attachEvents();\n      this.slider.init();\n      if (!!this.options.autoplay && !this._hasAnimationScene()) {\n        this.slider.autoplay.init();\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      this.slider.destroy();\n    }\n  }, {\n    key: \"prepareAnimation\",\n    value: function prepareAnimation() {\n      var _this2 = this;\n      return new Promise(function (resolve) {\n        var tl = gsap.timeline({\n          defaults: {\n            duration: 0\n          },\n          onComplete: function onComplete() {\n            resolve(true);\n          }\n        });\n        if (_this2.elements.arrowsInner[0]) {\n          tl.set(_this2.elements.arrowsInner[0], {\n            autoAlpha: 0,\n            x: -30\n          });\n        }\n        if (_this2.elements.arrowsInner[1]) {\n          tl.set(_this2.elements.arrowsInner[1], {\n            autoAlpha: 0,\n            x: 30\n          });\n        }\n      });\n    }\n\n    // Remove default text animation\n  }, {\n    key: \"_getRevealTextAnimation\",\n    value: function _getRevealTextAnimation() {}\n  }, {\n    key: \"getRevealAnimation\",\n    value: function getRevealAnimation() {\n      var _this3 = this;\n      var tl = gsap.timeline({\n          paused: true,\n          onComplete: function onComplete() {\n            if (!!_this3.options.autoplay) {\n              _this3.slider.autoplay.init();\n            }\n          }\n        }),\n        firstSubheading = this.elements.sections[0].querySelectorAll(this.innerSelectors.subheadings),\n        firstHeading = this.elements.sections[0].querySelectorAll(this.innerSelectors.headings),\n        firstText = this.elements.sections[0].querySelectorAll(this.innerSelectors.texts);\n      if (firstHeading) {\n        tl.animateChars(firstHeading, {\n          duration: 1.2,\n          stagger: {\n            from: 'start',\n            amount: .3\n          }\n        }, '<');\n      }\n      if (firstText) {\n        tl.animateLines(firstText, {\n          duration: 1.2,\n          stagger: 0.08\n        }, '<');\n      }\n      if (firstSubheading) {\n        tl.animateLines(firstSubheading, {\n          duration: 1.2,\n          stagger: 0.08\n        }, '<');\n      }\n      if (this.elements.arrowsInner.length) {\n        this.elements.arrowsInner.forEach(function (el, index) {\n          tl.to(el, {\n            autoAlpha: 1,\n            x: '0%',\n            scaleX: 1,\n            scaleY: 1,\n            duration: 0.6,\n            ease: 'power3.out',\n            onComplete: function onComplete() {\n              gsap.set(el, {\n                clearProps: 'opacity,visibility,transform'\n              });\n            }\n          }, index === 0 ? '<30%' : \"<20%\");\n        });\n      }\n      return tl;\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      if (!!this.options.autoplay) {\n        this.slider.on('autoplayStart', this._handlers.autoplayStart).on('autoplayStop', this._handlers.autoplayStop).on('autoplayPause', this._handlers.autoplayPause).on('autoplayResume', this._handlers.autoplayResume);\n        document.addEventListener('arts/barba/transition/start', this._handlers.transitionStart, {\n          once: true\n        });\n      }\n      this.slider.on('sectionChange', this._handlers.sectionChange);\n      window.addEventListener('resize', this._handlers.resize);\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      if (!!this.options.autoplay) {\n        this.slider.off('autoplayStart', this._handlers.autoplayStart).off('autoplayStop', this._handlers.autoplayStop).off('autoplayPause', this._handlers.autoplayPause).off('autoplayResume', this._handlers.autoplayResume);\n      }\n      this.slider.off('sectionChange', this._handlers.sectionChange);\n      window.removeEventListener('resize', this._handlers.resize);\n    }\n  }, {\n    key: \"_onAutoplayStart\",\n    value: function _onAutoplayStart() {\n      this.dotsTL.play();\n      this._animateDot({\n        toIndex: this.slider.currentIndex\n      });\n    }\n  }, {\n    key: \"_onAutoplayStop\",\n    value: function _onAutoplayStop() {}\n  }, {\n    key: \"_onAutoplayPause\",\n    value: function _onAutoplayPause() {\n      this.dotsTL.pause();\n    }\n  }, {\n    key: \"_onAutoplayResume\",\n    value: function _onAutoplayResume() {\n      this.dotsTL.play();\n    }\n  }, {\n    key: \"_onSectionChange\",\n    value: function _onSectionChange() {\n      this._animateDot({\n        fromIndex: this.slider.prevIndex,\n        toIndex: typeof this.options.autoplay === 'number' ? undefined : this.slider.currentIndex\n      });\n    }\n  }, {\n    key: \"_setDots\",\n    value: function _setDots() {\n      gsap.set(this.elements.circles, {\n        rotate: 0,\n        transformOrigin: 'center center',\n        drawSVG: '0% 0%'\n      });\n\n      // Initial set for 1st slide dot\n      if (!this.options.autoplay) {\n        gsap.set(this.elements.circles[0], {\n          transformOrigin: 'center center',\n          drawSVG: '0% 100%'\n        });\n      }\n    }\n  }, {\n    key: \"_animateDot\",\n    value: function _animateDot(_ref2) {\n      var fromIndex = _ref2.fromIndex,\n        toIndex = _ref2.toIndex;\n      this.dotsTL.clear();\n      var duration = this.options.transitionDuration * 2;\n      var hasAutoplay = typeof this.options.autoplay === 'number';\n      if (hasAutoplay) {\n        duration = this.options.autoplay;\n      } else {\n        this.dotsTL.play();\n      }\n      if (typeof fromIndex === 'number') {\n        this.dotsTL.to(this.elements.circles, {\n          duration: this.options.transitionDuration / 2,\n          rotate: 180,\n          transformOrigin: 'center center',\n          drawSVG: '100% 100%',\n          ease: 'power3.inOut'\n        }, 'start');\n      }\n      if (typeof toIndex === 'number') {\n        this.dotsTL.fromTo(this.elements.circles[toIndex], {\n          rotate: 0,\n          transformOrigin: 'center center',\n          drawSVG: '0% 0%'\n        }, {\n          rotate: 180,\n          transformOrigin: 'center center',\n          duration: duration,\n          drawSVG: '0% 100%',\n          ease: hasAutoplay ? 'none' : 'power3.inOut'\n        }, 'start');\n      }\n    }\n  }, {\n    key: \"_setSection\",\n    value: function _setSection(target) {\n      var visible = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var tl = gsap.timeline();\n      if (target) {\n        tl.set(target, {\n          autoAlpha: visible ? 1 : 0\n        });\n      }\n      return tl;\n    }\n  }, {\n    key: \"_lockInteraction\",\n    value: function _lockInteraction() {\n      var lock = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this.element.classList.toggle('locked', lock);\n    }\n  }, {\n    key: \"_toggleInteractivity\",\n    value: function _toggleInteractivity() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (this.slider) {\n        if (enabled) {\n          this.slider.interaction.enable();\n        } else {\n          this.slider.interaction.disable();\n        }\n      }\n    }\n  }, {\n    key: \"_setSlides\",\n    value: function _setSlides() {\n      var hasAnimationScene = this._hasAnimationScene();\n      this._setPosition();\n      this._setContent(hasAnimationScene);\n    }\n  }, {\n    key: \"_setPosition\",\n    value: function _setPosition() {\n      gsap.set(this.elements.container, {\n        height: this.elements.sections[0].offsetHeight\n      });\n      gsap.set(this.elements.sections, {\n        position: 'absolute',\n        top: 0,\n        left: 0,\n        right: 0\n      });\n      ScrollTrigger.refresh(true);\n    }\n  }, {\n    key: \"_setContent\",\n    value: function _setContent(hasAnimationScene) {\n      var _this4 = this;\n      this.elements.sections.forEach(function (section, index) {\n        var isFirstSection = index === 0,\n          currentSubheading = section.querySelectorAll(_this4.innerSelectors.subheadings),\n          currentHeading = section.querySelectorAll(_this4.innerSelectors.headings),\n          currentText = section.querySelectorAll(_this4.innerSelectors.texts);\n        if (isFirstSection && !hasAnimationScene) {\n          gsap.effects.animateLines(currentSubheading, {\n            duration: 0,\n            stagger: false\n          });\n          gsap.effects.animateChars(currentHeading, {\n            duration: 0,\n            stagger: false\n          });\n          gsap.effects.animateLines(currentText, {\n            duration: 0,\n            stagger: false\n          });\n        } else {\n          gsap.effects.hideLines(currentSubheading, {\n            duration: 0,\n            y: '100%',\n            stagger: false\n          });\n          gsap.effects.hideChars(currentHeading, {\n            duration: 0,\n            y: '100%',\n            stagger: false\n          });\n          gsap.effects.hideLines(currentText, {\n            duration: 0,\n            y: '100%',\n            stagger: 0\n          });\n        }\n      });\n    }\n  }, {\n    key: \"_onAnimationOut\",\n    value: function _onAnimationOut(currentSection, targetSection, direction) {\n      var currentSubheading = currentSection.querySelectorAll(this.innerSelectors.subheadings),\n        currentHeading = currentSection.querySelectorAll(this.innerSelectors.headings),\n        currentText = currentSection.querySelectorAll(this.innerSelectors.texts),\n        nextSubheading = targetSection.querySelectorAll(this.innerSelectors.subheadings),\n        nextHeading = targetSection.querySelectorAll(this.innerSelectors.headings),\n        nextText = targetSection.querySelectorAll(this.innerSelectors.texts);\n      var args = {\n        current: {\n          section: currentSection,\n          subheading: currentSubheading,\n          heading: currentHeading,\n          text: currentText\n        },\n        target: {\n          section: targetSection,\n          subheading: nextSubheading,\n          heading: nextHeading,\n          text: nextText\n        },\n        direction: direction\n      };\n      return this._getTimelineTransition(args);\n    }\n  }, {\n    key: \"_getTimelineTransition\",\n    value: function _getTimelineTransition(_ref3) {\n      var _ref4,\n        _ref5,\n        _this5 = this;\n      var _ref3$current = _ref3.current,\n        current = _ref3$current === void 0 ? (_ref4 = {}, section = _ref4.section, subheading = _ref4.subheading, heading = _ref4.heading, text = _ref4.text, _ref4) : _ref3$current,\n        _ref3$target = _ref3.target,\n        target = _ref3$target === void 0 ? (_ref5 = {}, section = _ref5.section, subheading = _ref5.subheading, heading = _ref5.heading, text = _ref5.text, _ref5) : _ref3$target,\n        direction = _ref3.direction;\n      var tl = gsap.timeline();\n      tl.add(function () {\n        return _this5._lockInteraction(true);\n      }).add(this._setSection(target.section, true)).add(this._animateSlideContentOut(0, direction === 'next' ? 'prev' : 'next', target)).add(this._animateSlideContentOut(this.options.transitionDuration, direction, current));\n      tl.add(this._adjustSlideHeight(target.section), '<').add(this._animateSlideContentIn(this.options.transitionDuration, direction, target), '<66%').add(function () {\n        return _this5._lockInteraction(false);\n      }).add(this._setSection(current.section, false));\n      return tl;\n    }\n  }, {\n    key: \"_adjustSlideHeight\",\n    value: function _adjustSlideHeight(target) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.options.transitionDuration / 2;\n      var tl = gsap.timeline({\n        onComplete: function onComplete() {\n          ScrollTrigger.refresh(true);\n        }\n      });\n      if (duration > 0) {\n        tl.to(this.elements.container, {\n          height: target.offsetHeight,\n          duration: duration\n        });\n      } else {\n        tl.set(this.elements.container, {\n          height: target.offsetHeight\n        });\n      }\n      return tl;\n    }\n  }, {\n    key: \"_animateSlideContentOut\",\n    value: function _animateSlideContentOut() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.transitionDuration;\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'next';\n      var _ref6 = arguments.length > 2 ? arguments[2] : undefined,\n        subheading = _ref6.subheading,\n        heading = _ref6.heading,\n        text = _ref6.text;\n      var ease = 'expo.out',\n        tl = gsap.timeline(),\n        isNextDirection = direction === 'next';\n\n      // Animate out section subheading\n      if (subheading) {\n        tl.hideLines(subheading, {\n          y: isNextDirection ? '-100%' : '100%',\n          duration: duration,\n          ease: ease,\n          stagger: {\n            from: isNextDirection ? 'start' : 'end',\n            amount: duration / 10\n          }\n        }, 'start');\n      }\n\n      // Animate out section heading\n      if (heading) {\n        tl.hideChars(heading, {\n          y: isNextDirection ? '-100%' : '100%',\n          duration: duration,\n          ease: ease,\n          stagger: {\n            from: isNextDirection ? 'start' : 'end',\n            amount: duration / 3\n          }\n        }, 'start');\n      }\n\n      // Animate out section text\n      if (text) {\n        tl.hideLines(text, {\n          y: isNextDirection ? '-100%' : '100%',\n          duration: duration,\n          ease: ease,\n          stagger: {\n            from: isNextDirection ? 'start' : 'end',\n            amount: duration / 10\n          }\n        }, 'start');\n      }\n      return tl;\n    }\n  }, {\n    key: \"_animateSlideContentIn\",\n    value: function _animateSlideContentIn() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.options.transitionDuration;\n      var direction = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'next';\n      var _ref7 = arguments.length > 2 ? arguments[2] : undefined,\n        subheading = _ref7.subheading,\n        heading = _ref7.heading,\n        text = _ref7.text;\n      var ease = 'expo.out',\n        tl = gsap.timeline(),\n        isNextDirection = direction === 'next';\n\n      // Animate in section subheading\n      if (subheading) {\n        tl.animateLines(subheading, {\n          duration: duration,\n          ease: ease,\n          stagger: {\n            from: isNextDirection ? 'start' : 'end',\n            amount: duration / 10\n          }\n        }, 'start');\n      }\n\n      // Animate in section heading\n      if (heading) {\n        tl.animateChars(heading, {\n          duration: duration,\n          ease: ease,\n          stagger: {\n            from: isNextDirection ? 'start' : 'end',\n            amount: duration / 3\n          }\n        }, 'start');\n      }\n\n      // Animate in section text\n      if (text) {\n        tl.animateLines(text, {\n          duration: duration,\n          ease: ease,\n          stagger: {\n            from: isNextDirection ? 'start' : 'end',\n            amount: duration / 10\n          }\n        }, 'start');\n      }\n      return tl;\n    }\n  }, {\n    key: \"_onResize\",\n    value: function _onResize() {\n      var currentIndex = this.slider.currentIndex;\n      this._adjustSlideHeight(this.elements.sections[currentIndex], 0);\n    }\n  }, {\n    key: \"_onTransitionStart\",\n    value: function _onTransitionStart() {\n      if (!!this.options.autoplay) {\n        this._handlers.autoplayPause();\n        this.slider.autoplay.disable();\n      }\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/SliderTestimonials.js\n");

/***/ }),

/***/ "./src/js/components/SplitCounter.js":
/*!*******************************************!*\
  !*** ./src/js/components/SplitCounter.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ SplitCounter)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar SplitCounter = /*#__PURE__*/function (_BaseComponent) {\n  function SplitCounter(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, SplitCounter);\n    _this = _callSuper(this, SplitCounter, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        stagger: 0.02\n      },\n      // Component inner elements\n      innerElements: {\n        lanes: '.js-split-counter__lane'\n      }\n    }]);\n    _this._handlers = {\n      resize: _this._onResize.bind(_this)\n    };\n    _this._current = 0;\n    _this.lanes = [];\n    _this.tl = gsap.timeline({\n      defaults: {\n        ease: 'expo.inOut',\n        duration: 0.6\n      }\n    });\n    _this.setup();\n    return _this;\n  }\n  _inherits(SplitCounter, _BaseComponent);\n  return _createClass(SplitCounter, [{\n    key: \"init\",\n    value: function init() {\n      this._addNumbers();\n      this._setNumbers();\n      this._attachEvents();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      this.tl.clear().kill();\n      this._removeNumbers();\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      var _this2 = this;\n      this.resizeInstance = new ResizeObserver(app.utilities.debounce(this._onResize.bind(this), app.utilities.getDebounceTime()));\n      this.lanes.forEach(function (lane, index) {\n        lane.forEach(function (number) {\n          _this2.resizeInstance.observe(number.element);\n        });\n      });\n      this.resizeInstance.observe(this.element);\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      if (this.resizeInstance) {\n        this.resizeInstance.disconnect();\n      }\n    }\n  }, {\n    key: \"_onResize\",\n    value: function _onResize() {\n      this._setNumbers();\n    }\n  }, {\n    key: \"_addNumbers\",\n    value: function _addNumbers() {\n      var _this3 = this;\n      this.elements.lanes.forEach(function (lane, index) {\n        var maxWidth = 0,\n          maxHeight = 0;\n        _this3.lanes[index] = [];\n        for (var num = 0; num <= 9; num++) {\n          var numberEl = document.createElement('span'),\n            content = num.toString();\n          numberEl.dataset['number'] = content;\n          numberEl.innerHTML = content;\n          lane.appendChild(numberEl);\n          if (numberEl.offsetWidth > maxWidth) {\n            maxWidth = numberEl.offsetWidth;\n          }\n          if (numberEl.offsetHeight > maxHeight) {\n            maxHeight = numberEl.offsetHeight;\n          }\n          gsap.set(numberEl, {\n            position: 'absolute',\n            y: num === 0 ? '0%' : '100%'\n          });\n          _this3.lanes[index].push({\n            element: numberEl,\n            digit: num,\n            animating: false,\n            progress: num === 0 ? 1 : 0\n          });\n        }\n        gsap.set(_this3.elements.lanes[index], {\n          width: maxWidth,\n          height: maxHeight\n        });\n      });\n    }\n  }, {\n    key: \"_removeNumbers\",\n    value: function _removeNumbers() {\n      var _this4 = this;\n      this.elements.lanes.forEach(function (lane, index) {\n        lane.innerHTML = '';\n        lane.removeAttribute('style');\n        _this4.lanes[index] = [];\n      });\n    }\n  }, {\n    key: \"_setNumbers\",\n    value: function _setNumbers() {\n      var _this5 = this;\n      this.lanes.forEach(function (lane, index) {\n        var maxWidth = 0,\n          maxHeight = 0;\n        gsap.set(_this5.elements.lanes[index], {\n          clearProps: 'width,height'\n        });\n        lane.forEach(function (number) {\n          if (number.element.offsetWidth > maxWidth) {\n            maxWidth = number.element.offsetWidth;\n          }\n          if (number.element.offsetHeight > maxHeight) {\n            maxHeight = number.element.offsetHeight;\n          }\n        });\n        gsap.set(_this5.elements.lanes[index], {\n          width: maxWidth,\n          height: maxHeight\n        });\n      });\n    }\n  }, {\n    key: \"current\",\n    get: function get() {\n      return this._current;\n    },\n    set: function set(newCurrent) {\n      if (newCurrent !== this.current) {\n        this.tl.clear();\n        this._updateNumber(newCurrent);\n      }\n      this._current = newCurrent;\n    }\n  }, {\n    key: \"_updateNumber\",\n    value: function _updateNumber(number) {\n      var _this6 = this;\n      var align = typeof this.options.stagger === 'number' ? \"<\".concat(this.options.stagger) : \"<\",\n        self = this,\n        oldDigits = this._getDigitsArrayFromNumber(this.current),\n        newDigits = this._getDigitsArrayFromNumber(number);\n      if (number === null) {\n        oldDigits.forEach(function (digit, index) {\n          _this6.tl.to(_this6.lanes[index][oldDigits[index]].element, {\n            y: '-103%'\n          }, align);\n        });\n      } else {\n        oldDigits.forEach(function (digit, index) {\n          if (oldDigits[index] !== newDigits[index]) {\n            var previouslyAnimatedElements = _this6.lanes[index].filter(function (digit) {\n              return !!digit.animating;\n            });\n            if (previouslyAnimatedElements.length) {\n              previouslyAnimatedElements.forEach(function (digit) {\n                var currentProgress = digit.progress;\n                _this6.tl.to(digit.element, {\n                  y: currentProgress < 1 && currentProgress > 0.5 ? '-103%' : '103%',\n                  onStart: function onStart() {\n                    digit.animating = true;\n                  },\n                  onUpdate: function onUpdate() {\n                    digit.progress = this.progress();\n                  },\n                  onComplete: function onComplete() {\n                    digit.animating = false;\n                    digit.progress = 0;\n                    gsap.set(digit.element, {\n                      y: '103%'\n                    });\n                  }\n                }, align);\n              });\n            }\n            var currentProgress = _this6.lanes[index][oldDigits[index]].progress;\n            _this6.tl.to(_this6.lanes[index][oldDigits[index]].element, {\n              y: currentProgress < 0.5 && currentProgress !== 0 ? '103%' : '-103%',\n              onStart: function onStart() {\n                _this6.lanes[index][oldDigits[index]].animating = true;\n              },\n              onUpdate: function onUpdate() {\n                self.lanes[index][oldDigits[index]].progress = this.progress();\n              },\n              onComplete: function onComplete() {\n                _this6.lanes[index][oldDigits[index]].animating = false;\n                gsap.set(_this6.lanes[index][oldDigits[index]].element, {\n                  y: '103%'\n                });\n                _this6.lanes[index][oldDigits[index]].progress = 0;\n              }\n            }, align).to(_this6.lanes[index][newDigits[index]].element, {\n              y: '0%',\n              onStart: function onStart() {\n                _this6.lanes[index][newDigits[index]].animating = true;\n              },\n              onUpdate: function onUpdate() {\n                self.lanes[index][newDigits[index]].progress = this.progress();\n              },\n              onComplete: function onComplete() {\n                _this6.lanes[index][newDigits[index]].animating = false;\n              }\n            }, align);\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_getDigitsArrayFromNumber\",\n    value: function _getDigitsArrayFromNumber(number) {\n      if (number < 10) {\n        return [0, number];\n      } else {\n        return number.toString().split('').map(Number);\n      }\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/SplitCounter.js\n");

/***/ })

}]);