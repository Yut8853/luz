"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunkthree_shader_env01"] = self["webpackChunkthree_shader_env01"] || []).push([["main~src_js_components_H"],{

/***/ "./src/js/components/HorizontalScroll.js":
/*!***********************************************!*\
  !*** ./src/js/components/HorizontalScroll.js ***!
  \***********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ HorizontalScroll)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar HorizontalScroll = /*#__PURE__*/function (_BaseComponent) {\n  function HorizontalScroll(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, HorizontalScroll);\n    _this = _callSuper(this, HorizontalScroll, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        mode: 'modular',\n        toggleInViewClass: 'in-view',\n        matchMedia: '(min-width: 992px) and (hover: hover) and (pointer: fine)',\n        toggleHeaderVisibility: true,\n        lockHeaderSticky: false\n      },\n      // Component inner elements\n      innerElements: {\n        wrapper: '.js-horizontal-scroll__wrapper',\n        sections: '.js-horizontal-scroll__section'\n      }\n    }]);\n    _this._handlers = {\n      matchMedia: _this._onMatchMedia.bind(_this)\n    };\n    _this.mq = null;\n    if (typeof _this.options.matchMedia === 'string') {\n      _this._createMatchMedia();\n    }\n    _this.setup();\n    _this._attachEvents();\n    return _this;\n  }\n  _inherits(HorizontalScroll, _BaseComponent);\n  return _createClass(HorizontalScroll, [{\n    key: \"init\",\n    value: function init() {\n      this.updateRef('headerRef', 'Header');\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      if (this.horizontalScroll && this.horizontalScroll.enabled) {\n        this.horizontalScroll.update();\n      }\n      ScrollTrigger.refresh();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.horizontalScroll) {\n        this.horizontalScroll.destroy();\n        this.horizontalScroll = null;\n      }\n      if (this.stScrub) {\n        this.stScrub.kill();\n      }\n      if (this.mq) {\n        if (typeof this.mq.removeEventListener === 'function') {\n          this.mq.removeEventListener('change', this._handlers.matchMedia);\n        } else {\n          this.mq.removeListener(this._handlers.matchMedia);\n        }\n        this.mq = null;\n      }\n      if (this.resizeObserver) {\n        this.resizeObserver.disconnect();\n      }\n    }\n\n    // _onResizeHorizontal() {\n    // \tif (this.mounted) {\n    // \t\tthis.innerTriggers.forEach((st) => {\n    // \t\t\tst.refresh();\n    // \t\t});\n    // \t}\n\n    // \tthis.update();\n    // }\n  }, {\n    key: \"mount\",\n    value: function mount() {\n      var _this2 = this;\n      return new Promise(function (resolve) {\n        // console.log(`Mounting component: ${this.name}...`);\n\n        _this2._createHorizontalScroll();\n        if (_this2.mounted || !_this2.loadInnerComponents) {\n          _this2.mounted = true;\n          resolve(true);\n        } else {\n          app.componentsManager.instances.disposable.push(_this2);\n          Promise.all(app.componentsManager.init({\n            storage: _this2.components,\n            scope: _this2.element,\n            parent: _this2,\n            nameAttribute: 'data-arts-component-name',\n            optionsAttribute: 'data-arts-component-options'\n          })).then(function () {\n            // this.innerTriggers = ScrollTrigger.getAll().filter((st) => st.trigger !== this.element && this.element.contains(st.trigger));\n\n            // this.resizeObserver = new ResizeObserver(app.utilities.debounce(this._onResizeHorizontal.bind(this), app.utilities.getDebounceTime()));\n\n            // this.resizeObserver.observe(this.element);\n\n            _this2._initSplitText();\n            _this2._initLazyMedia();\n            _this2.mounted = true;\n            resolve(true);\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getScrubAnimation\",\n    value: function getScrubAnimation() {\n      var _this3 = this;\n      var config = {\n        trigger: this.element,\n        start: function start() {\n          return \"top top\";\n        },\n        end: function end() {\n          return \"bottom bottom\";\n        },\n        scrub: true,\n        matchMedia: this.options.matchMedia,\n        onToggle: function onToggle(self) {\n          _this3.updateRef('headerRef', 'Header');\n          if (!!_this3.options.toggleHeaderVisibility) {\n            _this3.headerRef.toggleHidden(self.isActive);\n          }\n          if (!!_this3.options.lockHeaderSticky) {\n            _this3.headerRef.lockSticky(self.isActive);\n          }\n        }\n      };\n      return config;\n    }\n  }, {\n    key: \"_createHorizontalScroll\",\n    value: function _createHorizontalScroll() {\n      this.horizontalScroll = new ArtsHorizontalScroll(this.element, {\n        mode: this.options.mode,\n        wrapperElementSelector: this.innerSelectors.wrapper,\n        sectionElementsSelector: this.innerSelectors.sections,\n        matchMedia: this.options.matchMedia,\n        toggleInViewClass: this.options.toggleInViewClass\n      });\n    }\n  }, {\n    key: \"_createMatchMedia\",\n    value: function _createMatchMedia() {\n      this.mq = window.matchMedia(this.options.matchMedia);\n      if (typeof this.mq.addEventListener === 'function') {\n        this.mq.addEventListener('change', this._handlers.matchMedia);\n      } else {\n        this.mq.addListener(this._handlers.matchMedia);\n      }\n    }\n  }, {\n    key: \"_onMatchMedia\",\n    value: function _onMatchMedia(event) {\n      if (!event.matches) {\n        if (this.headerRef) {\n          if (!!this.options.toggleHeaderVisibility) {\n            this.headerRef.toggleHidden(false);\n          }\n          if (!!this.options.lockHeaderSticky) {\n            this.headerRef.lockSticky(false);\n          }\n        }\n      } else {\n        ScrollTrigger.refresh(false);\n      }\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      var _this4 = this;\n      document.addEventListener('arts/barba/transition/end', function () {\n        _this4.update();\n      }, {\n        once: true\n      });\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/HorizontalScroll.js\n");

/***/ }),

/***/ "./src/js/components/InfiniteList.js":
/*!*******************************************!*\
  !*** ./src/js/components/InfiniteList.js ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ InfiniteList)\n/* harmony export */ });\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar InfiniteList = /*#__PURE__*/function (_BaseComponent) {\n  function InfiniteList(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, InfiniteList);\n    _this = _callSuper(this, InfiniteList, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        webGL: {\n          enabled: false,\n          watchScroll: 'auto',\n          vertices: 16,\n          elasticEffect: 2,\n          perspectiveEffect: false,\n          directionAwareEffect: false,\n          dragScalePlanes: 0.95,\n          dragScaleTextures: 1.05\n        },\n        preventScroll: false,\n        autoplay: false,\n        drag: {\n          label: false,\n          arrowsDistance: 45,\n          scale: 1.2,\n          hideNative: false,\n          toggleClass: 'infinite-list_mouse-drag'\n        },\n        direction: 'vertical',\n        loop: true,\n        autoCenterFirstItem: true,\n        marquee: false,\n        matchMedia: false,\n        onScrollRotatingButtonSpeed: 2,\n        scroll: app.options.virtualScroll,\n        scrollHeadings: {\n          easing: {\n            mouse: 0.1,\n            touch: 0.1\n          },\n          speed: {\n            mouse: 0.2,\n            touch: 3\n          },\n          maxDelta: {\n            mouse: 80,\n            touch: 180\n          }\n        },\n        type: 'wheel,touch,pointer',\n        toggleScrollingClass: 'infinite-list_scrolling',\n        toggleDraggingClass: 'infinite-list_dragging',\n        togglePressedClass: 'infinite-list_pressed',\n        snapOnRelease: {\n          keyboard: true,\n          toggleActiveItemClass: 'active',\n          removeActiveClassOnInteraction: false\n        },\n        snapReveal: true,\n        hoverReveal: false,\n        hoverSyncLanes: false,\n        wheelSpeed: -1,\n        speedEffect: {\n          skew: -0.1,\n          scale: -0.1\n        },\n        opacityEffect: {\n          from: 0,\n          to: 1\n        },\n        speedEffectHeadings: {\n          skew: -0.1,\n          scale: -0.1\n        },\n        opacityEffectHeadings: {\n          from: 0,\n          to: 1\n        },\n        progressEffect: false,\n        currentClass: 'current',\n        itemIdAttribute: 'data-post-id',\n        arrowPrevSelector: '.js-infinite-list__arrow-prev',\n        arrowNextSelector: '.js-infinite-list__arrow-next'\n      },\n      // Component inner elements\n      innerElements: {\n        canvasWrapper: '.canvas-wrapper',\n        laneImages: '.js-infinite-list__lane-images',\n        itemImages: '.js-infinite-list__image-item',\n        laneHeadings: '.js-infinite-list__lane-headings',\n        itemHeadings: '.js-infinite-list__heading-item',\n        headingsInner: '.js-infinite-list__headings-inner',\n        headingsItems: '.js-infinite-list__heading',\n        animationFade: '.js-infinite-list__animation-fade',\n        animationScale: '.js-infinite-list__animation-scale',\n        animationMask: '.js-infinite-list__animation-mask',\n        animationReveal: '.js-infinite-list__animation-reveal'\n      }\n    }]);\n    _this._handlers = {\n      hoverIn: _this._onMouseEnter.bind(_this),\n      hoverOut: _this._onMouseLeave.bind(_this),\n      click: _this._onMouseClick.bind(_this),\n      touchStart: _this._onTouchStart.bind(_this),\n      updateView: _this._onUpdateView.bind(_this),\n      updateVisible: _this._onUpdateVisible.bind(_this),\n      resize: app.utilities.debounce(_this._onResize.bind(_this), app.utilities.getDebounceTime()),\n      transitionStart: _this._onTransitionStart.bind(_this)\n    };\n    _this._tlDrag = gsap.timeline({\n      defaults: {\n        duration: 0.3\n      }\n    });\n    _this._animated = false;\n    _this.clamp = gsap.utils.clamp(1, 10);\n    _this.setup();\n    return _this;\n  }\n  _inherits(InfiniteList, _BaseComponent);\n  return _createClass(InfiniteList, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      var readyPromises = [];\n      this._setRefs();\n      if (this.preloaderRef) {\n        // readyPromises.push(this.preloaderRef.loaded);\n      }\n      this._setHeadings();\n      this._createInfiniteListHeadings();\n      this._createInfiniteListImages();\n      if (this.infiniteListImages) {\n        readyPromises.push(this.infiniteListImages.pluginsReady);\n      }\n      if (this.infiniteListHeadings) {\n        readyPromises.push(this.infiniteListHeadings.pluginsReady);\n      }\n      this._toggleInteraction(false);\n      if (this._isWebGLOptionEnabled()) {\n        this.setLoading(true);\n        app.componentsManager.load({\n          properties: app.components['CurtainsBase']\n        }).then(function (module) {\n          readyPromises.push(_this2.webGLReady);\n          _this2.infiniteListImages.init();\n          _this2.infiniteListImages.pluginsReady.then(function () {\n            if (!_this2._hasAnimationScene() && typeof _this2.options.autoplay === 'number') {\n              // this._pauseAutoplay();\n            }\n            _this2._initCurtains(module);\n            _this2._attachEvents();\n          });\n          Promise.all(readyPromises).then(function () {\n            if (!_this2._hasAnimationScene() && typeof _this2.options.autoplay === 'number') {\n              // this._resumeAutoplay();\n            }\n            _this2._onResize();\n            _this2.setLoading(false);\n          });\n        });\n      } else {\n        this._attachEvents();\n        if (!this._hasAnimationScene() && typeof this.options.autoplay === 'number' && this.preloaderRef) {\n          // this._pauseAutoplay();\n        }\n        Promise.all(readyPromises).then(function () {\n          if (!_this2._hasAnimationScene() && typeof _this2.options.autoplay === 'number' && _this2.preloaderRef) {\n            // this._resumeAutoplay();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      if (this.infiniteListImages) {\n        this.infiniteListImages.destroy();\n      }\n      if (this.infiniteListHeadings) {\n        this.infiniteListHeadings.destroy();\n      }\n      if (this.curtains) {\n        document.addEventListener('arts/barba/transition/end', this.curtains.destroy.bind(this.curtains), {\n          once: true\n        });\n      }\n    }\n  }, {\n    key: \"prepareAnimation\",\n    value: function prepareAnimation() {\n      var _this3 = this;\n      return new Promise(function (resolve) {\n        var tl = gsap.timeline({\n          onComplete: function onComplete() {\n            return resolve(true);\n          }\n        });\n        if (_this3.elements.animationReveal.length) {\n          tl.set(_this3.elements.animationReveal, {\n            y: '100%'\n          });\n        }\n        if (!_this3._isWebGLOptionEnabled() && _this3.elements.animationMask.length) {\n          _this3.elements.animationMask.forEach(function (el) {\n            tl.hideMask(el, {\n              clearProps: '',\n              duration: 0,\n              animateTo: 'bottom'\n            });\n          });\n        }\n        if (_this3.elements.animationFade.length) {\n          tl.set(_this3.elements.animationFade, {\n            autoAlpha: 0\n          });\n        }\n        if (_this3.elements.animationScale.length) {\n          tl.set(_this3.elements.animationScale, {\n            scale: 0,\n            transformOrigin: 'center center'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getRevealAnimation\",\n    value: function getRevealAnimation() {\n      var _this4 = this;\n      var tl = gsap.timeline({\n        paused: true,\n        onComplete: function onComplete() {\n          if (!_this4._isWebGLOptionEnabled()) {\n            _this4._toggleInteraction(true);\n            _this4._initAutoplay();\n            _this4._initMarquee();\n          }\n          _this4._onResize();\n        }\n      });\n      if (this.elements.animationReveal.length) {\n        tl.to(this.elements.animationReveal, {\n          y: '0%',\n          duration: 1.2,\n          ease: 'power3.out',\n          stagger: distributeByPosition({\n            from: 'start',\n            axis: 'y',\n            amount: 1.2\n          })\n        }, 'start');\n      }\n      if (!this._isWebGLOptionEnabled()) {\n        if (this.elements.animationMask.length) {\n          this.elements.animationMask.forEach(function (el, index) {\n            tl.animateMask(el, {\n              animateFrom: 'bottom',\n              duration: 1.2,\n              ease: 'power3.inOut'\n            }, index === 0 ? 'start' : '<0.02');\n          });\n        }\n        if (this.elements.animationFade.length) {\n          tl.to(this.elements.animationFade, {\n            autoAlpha: 1,\n            duration: 1.2,\n            stagger: 0.05,\n            clearProps: 'opacity,visibility',\n            ease: 'power3.out'\n          }, 'start');\n        }\n        if (this.elements.animationScale.length) {\n          tl.animateScale(this.elements.animationScale, {\n            ease: 'power3.out',\n            duration: 1.2,\n            animateFrom: 'center'\n          }, 'start');\n        }\n      }\n      return tl;\n    }\n  }, {\n    key: \"_setRefs\",\n    value: function _setRefs() {\n      this.splitCounterRef = this._getInnerComponentByName('SplitCounter');\n      this.rotatingButtons = this.components.filter(function (component, index) {\n        return component.name === 'RotatingButton';\n      });\n      this.updateRef('preloaderRef', 'Preloader');\n      this.updateRef('cursorRef', 'CursorFollower');\n    }\n  }, {\n    key: \"_isWebGLOptionEnabled\",\n    value: function _isWebGLOptionEnabled() {\n      return app.utilities.isEnabledOption(this.options.webGL);\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      var _this5 = this;\n      this.resizeInstance = new ResizeObserver(app.utilities.debounce(this._setHeadings.bind(this), app.utilities.getDebounceTime()));\n      this.resizeInstance.observe(this.element);\n      if (!!this.options.snapOnRelease && this.splitCounterRef) {\n        this.infiniteListImages.pluginsReady.then(function () {\n          _this5._updateCounter(1);\n        });\n        this.infiniteListImages.controller.on('scrollSnap', function (_ref2) {\n          var indexItem = _ref2.indexItem,\n            element = _ref2.element;\n          _this5._updateCounter(indexItem + 1);\n        });\n      }\n      if (!!this.options.snapReveal) {\n        this.infiniteListImages.pluginsReady.then(function () {\n          _this5._removeHiglightElements();\n          if (!!_this5.options.snapOnRelease) {\n            var link = _this5.element.querySelector(\"[\".concat(_this5.options.itemIdAttribute, \"]\"));\n            _this5._highlightActiveElements(link, true);\n          }\n        });\n        this.infiniteListImages.controller.on('scrollSnap', function (_ref3) {\n          var indexItem = _ref3.indexItem,\n            element = _ref3.element;\n          var link = element.querySelector(\"[\".concat(_this5.options.itemIdAttribute, \"]\"));\n          _this5._removeHiglightElements();\n          _this5._highlightActiveElements(link, true);\n        }).on('interactionStart', function () {\n          _this5._removeHiglightElements();\n        }).on('dragStart', function () {\n          _this5._removeHiglightElements();\n        });\n      }\n      if (!!this.options.hoverReveal) {\n        app.hoverEffect.attachEvents(this.element, this._handlers.hoverIn, this._handlers.hoverOut);\n      }\n      if (!!this.options.onScrollRotatingButtonSpeed && this.rotatingButtons.length) {\n        this.infiniteListImages.controller.on('scrollUpdate', function (velocity, direction) {\n          var multiplier = _this5.clamp(velocity * 100) * _this5.options.onScrollRotatingButtonSpeed;\n          _this5.rotatingButtons.forEach(function (button) {\n            if (button.stScrub) {\n              button.stScrub.animation.timeScale(multiplier);\n            }\n          });\n        });\n      }\n      if (typeof this.options.autoplay === 'number' && this.rotatingButtons.length) {\n        this._attachAutoplayEvents();\n        // if (this._isWebGLOptionEnabled()) {\n        // \tthis.webGLReady.then(() => {\n        // \t\tthis._attachAutoplayEvents();\n        // \t});\n        // } else {\n        // \tthis._attachAutoplayEvents();\n        // }\n      }\n      if (this._isWebGLOptionEnabled()) {\n        app.utilities.attachResponsiveResize({\n          callback: this._handlers.resize,\n          immediateCall: false\n        });\n      }\n      this.element.addEventListener('click', this._handlers.click);\n      if (!!this.options.drag) {\n        if (typeof this.options.drag.toggleClass === 'string') {\n          this.element.classList.add(this.options.drag.toggleClass);\n        }\n        this._attachDragListeners();\n      }\n      document.addEventListener('arts/barba/transition/start', this._handlers.transitionStart, {\n        once: true\n      });\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      if (this.resizeInstance) {\n        this.resizeInstance.unobserve(this.element);\n      }\n      if (!!this.options.hoverReveal) {\n        app.hoverEffect.detachEvents(this.element, this._handlers.hoverIn, this._handlers.hoverOut);\n      }\n      if (this.options.direction === 'vertical' && !!this.options.preventScroll) {\n        this.infiniteListImages.container.removeEventListener('touchmove', this._handlers.touchStart);\n      }\n\n      // if (!!this.options.webGL) {\n      // \twindow.removeEventListener(\n      // \t\tapp.utilities.getResponsiveResizeEvent(),\n      // \t\tthis._handlers.resize\n      // \t);\n      // }\n    }\n  }, {\n    key: \"_onTransitionStart\",\n    value: function _onTransitionStart() {\n      this._removeHiglightElements();\n      if (!!this.options.autoplay) {\n        this._pauseAutoplay();\n      }\n    }\n  }, {\n    key: \"_initMarquee\",\n    value: function _initMarquee() {\n      var _this6 = this;\n      if (this.infiniteListImages) {\n        this.infiniteListImages.pluginsReady.then(function () {\n          if (_this6.infiniteListImages.plugins.marquee) {\n            _this6.infiniteListImages.plugins.marquee.init();\n          }\n        });\n      }\n      if (this.infiniteListHeadings) {\n        this.infiniteListHeadings.pluginsReady.then(function () {\n          if (_this6.infiniteListHeadings.plugins.marquee) {\n            _this6.infiniteListHeadings.plugins.marquee.init();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_initAutoplay\",\n    value: function _initAutoplay() {\n      var _this7 = this;\n      if (this.infiniteListImages) {\n        this.infiniteListImages.pluginsReady.then(function () {\n          if (_this7.infiniteListImages.plugins.autoplay) {\n            _this7.infiniteListImages.plugins.autoplay.init();\n          }\n        });\n      }\n      if (this.infiniteListHeadings) {\n        this.infiniteListHeadings.pluginsReady.then(function () {\n          if (_this7.infiniteListHeadings.plugins.autoplay) {\n            _this7.infiniteListHeadings.plugins.autoplay.init();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_pauseAutoplay\",\n    value: function _pauseAutoplay() {\n      var _this8 = this;\n      if (this.infiniteListImages) {\n        this.infiniteListImages.pluginsReady.then(function () {\n          if (_this8.infiniteListImages.plugins.autoplay) {\n            _this8.infiniteListImages.plugins.autoplay.disable();\n          }\n        });\n      }\n      if (this.infiniteListHeadings) {\n        this.infiniteListHeadings.pluginsReady.then(function () {\n          if (_this8.infiniteListHeadings.plugins.autoplay) {\n            _this8.infiniteListHeadings.plugins.autoplay.disable();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_resumeAutoplay\",\n    value: function _resumeAutoplay() {\n      var _this9 = this;\n      if (this.infiniteListImages) {\n        this.infiniteListImages.pluginsReady.then(function () {\n          if (_this9.infiniteListImages.plugins.autoplay) {\n            _this9.infiniteListImages.plugins.autoplay.enable();\n          }\n        });\n      }\n      if (this.infiniteListHeadings) {\n        this.infiniteListHeadings.pluginsReady.then(function () {\n          if (_this9.infiniteListHeadings.plugins.autoplay) {\n            _this9.infiniteListHeadings.plugins.autoplay.enable();\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_scrollTo\",\n    value: function _scrollTo(link) {\n      var ID = parseInt(link.getAttribute(\"\".concat(this.options.itemIdAttribute)));\n      if (this.elements.laneHeadings[0] && this.elements.laneHeadings[0].contains(link)) {\n        // Images #1 & #2 lanes\n        if (this.infiniteListImages && this.infiniteListImages.enabled) {\n          var currentIDLane1 = this._getIndexOfID(this.elements.laneImages[0], ID);\n          var currentIDLane2 = this._getIndexOfID(this.elements.laneImages[1], ID);\n          if (currentIDLane1 >= 0) {\n            this.infiniteListImages.controller.scrollTo({\n              indexItem: currentIDLane1,\n              indexLane: 0,\n              position: 'center'\n            });\n          }\n          if (currentIDLane2 >= 0) {\n            this.infiniteListImages.controller.scrollTo({\n              indexItem: currentIDLane2,\n              indexLane: 1,\n              position: 'center'\n            });\n          }\n        }\n      } else if (this.elements.laneImages[0] && this.elements.laneImages[0].contains(link)) {\n        // Images #2 lane\n        if (this.infiniteListImages && this.infiniteListImages.enabled) {\n          var currentID = this._getIndexOfID(this.elements.laneImages[1], ID);\n          if (currentID >= 0) {\n            this.infiniteListImages.controller.scrollTo({\n              indexItem: currentID,\n              indexLane: 1,\n              position: 'center'\n            });\n          }\n        }\n\n        // Headings\n        if (this.infiniteListHeadings && this.infiniteListHeadings.enabled) {\n          var _currentID = this._getIndexOfID(this.elements.laneHeadings[0], ID);\n          if (_currentID >= 0) {\n            this.infiniteListHeadings.controller.scrollTo({\n              indexItem: _currentID,\n              position: 'center'\n            });\n          }\n        }\n      } else if (this.elements.laneImages[1] && this.elements.laneImages[1].contains(link)) {\n        // Images #1 lane\n        if (this.infiniteListImages && this.infiniteListImages.enabled) {\n          var _currentID2 = this._getIndexOfID(this.elements.laneImages[0], ID);\n          if (_currentID2 >= 0) {\n            this.infiniteListImages.controller.scrollTo({\n              indexItem: _currentID2,\n              indexLane: 0,\n              position: 'center'\n            });\n          }\n        }\n\n        // Headings\n        if (this.infiniteListHeadings && this.infiniteListHeadings.enabled) {\n          var _currentID3 = this._getIndexOfID(this.elements.laneHeadings[0], ID);\n          if (_currentID3 >= 0) {\n            this.infiniteListHeadings.controller.scrollTo({\n              indexItem: _currentID3,\n              position: 'center'\n            });\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_getIndexOfID\",\n    value: function _getIndexOfID(container, ID) {\n      var _this10 = this;\n      var result = -1;\n      if (container) {\n        var elements = _toConsumableArray(container.querySelectorAll(\"[\".concat(this.options.itemIdAttribute, \"]\")));\n        elements.forEach(function (el, index) {\n          var currentID = parseInt(el.getAttribute(\"\".concat(_this10.options.itemIdAttribute)));\n          if (currentID === ID) {\n            result = index;\n          }\n        });\n      }\n      return result;\n    }\n  }, {\n    key: \"_onMouseEnter\",\n    value: function _onMouseEnter(event) {\n      var target = app.utilities.getLinkTarget(event);\n      if (target) {\n        this._highlightActiveElements(target, true);\n        if (!!this.options.hoverSyncLanes) {\n          this._scrollTo(target);\n        }\n        this._toggleMarqueeAnimation(false);\n      }\n    }\n  }, {\n    key: \"_onMouseLeave\",\n    value: function _onMouseLeave(event) {\n      var target = app.utilities.getLinkTarget(event);\n      if (target) {\n        this._highlightActiveElements(target, false);\n        this._toggleMarqueeAnimation(true);\n      }\n    }\n  }, {\n    key: \"_onMouseClick\",\n    value: function _onMouseClick(event) {\n      if (app.utilities.shouldPreventLinkClick(event)) {\n        return;\n      }\n      var target = app.utilities.getLinkTarget(event);\n      if (target) {\n        this._detachEvents();\n        if (this.infiniteListImages.enabled) {\n          this.infiniteListImages.view.off('update', this._handlers.updateView);\n          this.infiniteListImages.plugins.scroll.disable();\n        }\n      }\n\n      // Prev arrow\n      if (typeof this.options.arrowPrevSelector === 'string' && event.target instanceof HTMLElement && event.target.closest(this.options.arrowPrevSelector)) {\n        if (this.infiniteListImages && this.infiniteListImages.enabled) {\n          event.preventDefault();\n          this.infiniteListImages.controller.snapPrev();\n        }\n      }\n\n      // Next arrow\n      if (typeof this.options.arrowNextSelector === 'string' && event.target instanceof HTMLElement && event.target.closest(this.options.arrowNextSelector)) {\n        if (this.infiniteListImages && this.infiniteListImages.enabled) {\n          event.preventDefault();\n          this.infiniteListImages.controller.snapNext();\n        }\n      }\n    }\n  }, {\n    key: \"_onTouchStart\",\n    value: function _onTouchStart(event) {\n      event.preventDefault();\n    }\n  }, {\n    key: \"_updateCounter\",\n    value: function _updateCounter(number) {\n      this.splitCounterRef.current = number;\n    }\n  }, {\n    key: \"_highlightActiveElements\",\n    value: function _highlightActiveElements(link) {\n      var _this11 = this;\n      var enabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (!link) {\n        return;\n      }\n      var ID = parseInt(link.getAttribute(\"\".concat(this.options.itemIdAttribute))),\n        elements = _toConsumableArray(this.element.querySelectorAll(\"[\".concat(this.options.itemIdAttribute, \"=\\\"\").concat(ID, \"\\\"]\")));\n      if (elements.length) {\n        elements.forEach(function (el) {\n          el.classList.toggle(\"\".concat(_this11.options.currentClass), enabled);\n        });\n      }\n    }\n  }, {\n    key: \"_removeHiglightElements\",\n    value: function _removeHiglightElements() {\n      var _this12 = this;\n      var elements = _toConsumableArray(this.element.querySelectorAll(\".\".concat(this.options.currentClass, \"[\").concat(this.options.itemIdAttribute, \"]\")));\n      if (elements.length) {\n        elements.forEach(function (el) {\n          el.classList.remove(\"\".concat(_this12.options.currentClass));\n        });\n      }\n    }\n  }, {\n    key: \"_createInfiniteListHeadings\",\n    value: function _createInfiniteListHeadings() {\n      if (this.elements.laneHeadings.length) {\n        this.infiniteListHeadings = new ArtsInfiniteList(this.element, {\n          direction: this.options.direction,\n          mapWheelEventYtoX: true,\n          autoCenterFirstItem: this.options.autoCenterFirstItem,\n          listElementsSelector: this.innerSelectors.itemHeadings,\n          multiLane: {\n            laneSelector: this.innerSelectors.laneHeadings,\n            laneOptionsAttribute: 'data-arts-infinite-list-options'\n          },\n          matchMedia: this.options.matchMedia,\n          loop: this.options.loop,\n          autoClone: this.options.loop,\n          scroll: this.options.scrollHeadings || this.options.scroll,\n          plugins: {\n            scroll: {\n              type: this.options.type,\n              preventDefault: this.options.preventScroll\n            },\n            speedEffect: this.options.speedEffectHeadings,\n            opacityEffect: this.options.opacityEffectHeadings\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_createInfiniteListImages\",\n    value: function _createInfiniteListImages() {\n      if (this.elements.laneImages.length) {\n        this.infiniteListImages = new ArtsInfiniteList(this.element, {\n          init: !(!!this.options.webGL && this.options.webGL.enabled),\n          direction: this.options.direction,\n          mapWheelEventYtoX: true,\n          autoCenterFirstItem: this.options.autoCenterFirstItem,\n          listElementsSelector: this.innerSelectors.itemImages,\n          multiLane: {\n            laneSelector: this.innerSelectors.laneImages,\n            laneOptionsAttribute: 'data-arts-infinite-list-options'\n          },\n          matchMedia: this.options.matchMedia,\n          loop: this.options.loop,\n          autoClone: this.options.loop,\n          scroll: this.options.scroll,\n          plugins: {\n            autoplay: typeof this.options.autoplay === 'number' ? {\n              autoInit: false,\n              duration: this.options.autoplay\n            } : false,\n            marquee: _typeof(this.options.marquee) === 'object' ? _objectSpread({\n              autoInit: false\n            }, this.options.marquee) : false,\n            scroll: {\n              type: this.options.type,\n              toggleScrollingClass: this.options.toggleScrollingClass,\n              toggleDraggingClass: this.options.toggleDraggingClass,\n              togglePressedClass: this.options.togglePressedClass,\n              snapOnRelease: this.options.snapOnRelease,\n              preventDefault: this.options.preventScroll\n            },\n            speedEffect: this.options.speedEffect,\n            opacityEffect: this.options.opacityEffect,\n            progressEffect: this.options.progressEffect\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_setHeadings\",\n    value: function _setHeadings() {\n      var maxWidth = 0,\n        maxHeight = 0,\n        textAlign = gsap.getProperty(this.elements.headingsInner[0], 'text-align');\n      this.elements.headingsItems.forEach(function (el) {\n        if (el.offsetWidth > maxWidth) {\n          maxWidth = el.offsetWidth;\n        }\n        if (el.offsetHeight > maxHeight) {\n          maxHeight = el.offsetHeight;\n        }\n      });\n      gsap.set(this.elements.headingsInner[0], {\n        // width: maxWidth * 1.2,\n        height: maxHeight\n      });\n      gsap.set(this.elements.headingsItems, {\n        position: 'absolute',\n        top: '50%',\n        left: textAlign === 'left' ? 0 : textAlign === 'center' ? 0 : '',\n        right: textAlign === 'right' || textAlign === 'center' ? 0 : ''\n      });\n    }\n  }, {\n    key: \"_toggleMarqueeAnimation\",\n    value: function _toggleMarqueeAnimation() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (!this.infiniteListImages.enabled) {\n        return;\n      }\n      if (!!this.options.marquee && this.infiniteListImages.plugins.marquee) {\n        if (enabled) {\n          this.infiniteListImages.plugins.marquee.enable();\n        } else {\n          this.infiniteListImages.plugins.marquee.disable();\n        }\n      }\n    }\n  }, {\n    key: \"_toggleInteraction\",\n    value: function _toggleInteraction() {\n      var _this13 = this;\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      this.element.classList.toggle('pointer-events-inner-none', !enabled);\n      if (this.infiniteListImages) {\n        this.infiniteListImages.pluginsReady.then(function () {\n          if (_this13.infiniteListImages && 'scroll' in _this13.infiniteListImages.plugins) {\n            _this13.infiniteListImages.plugins.scroll.ignore = !enabled;\n          }\n        });\n      }\n      if (this.infiniteListHeadings) {\n        this.infiniteListHeadings.pluginsReady.then(function () {\n          if (_this13.infiniteListHeadings && 'scroll' in _this13.infiniteListHeadings.plugins) {\n            _this13.infiniteListHeadings.plugins.scroll.ignore = !enabled;\n          }\n        });\n      }\n    }\n\n    // WebGL methods\n  }, {\n    key: \"_initCurtains\",\n    value: function _initCurtains(module) {\n      var _this14 = this;\n      var AJAXRef = app.componentsManager.getComponentByName('AJAX');\n      var options = {\n        planes: {\n          visible: true,\n          widthSegments: 16,\n          heightSegments: 16,\n          vertexShader: this._vShaderPlane(),\n          fragmentShader: this._fShaderPlane(),\n          uniforms: {\n            opacity: {\n              name: 'uOpacity',\n              type: '1f',\n              value: 0\n            }\n          }\n        },\n        itemIdAttribute: this.options.itemIdAttribute,\n        onContextLost: this._handlers.resize\n      };\n      if (_typeof(this.options.webGL) === 'object') {\n        options = deepmerge(this.options.webGL, options);\n        if (typeof this.options.webGL.vertices === 'number') {\n          options.planes.widthSegments = this.options.webGL.vertices;\n          options.planes.heightSegments = this.options.webGL.vertices;\n        }\n      }\n      this.curtains = new module[\"default\"]({\n        element: this.element,\n        container: this.elements.canvasWrapper[0],\n        lanes: this.elements.laneImages,\n        options: options\n      });\n      if (this.infiniteListImages.enabled) {\n        if (this._shouldApplyPerspectiveShaderPass()) {\n          this._initPerspectiveShaderPass();\n          this._initFXAAPass();\n        }\n      } else {\n        // Turn on planes visibility if they are not pulled off the DOM\n        // e.g. hidden by \"display: none\"\n        this.curtains.instance.planes.forEach(function (plane) {\n          return plane.visible = !!plane.htmlElement.offsetParent;\n        });\n        this.infiniteListImages.once('afterInit', function () {\n          _this14._attachPlanesUpdateListeners();\n          if (_this14._shouldApplyPerspectiveShaderPass()) {\n            _this14._initPerspectiveShaderPass();\n            _this14._initFXAAPass();\n          }\n          window.matchMedia(\"\".concat(_this14.options.matchMedia)).onchange = function (event) {\n            _this14.curtains.instance.disableDrawing();\n            if (event.matches) {\n              _this14.curtains.resetPlanesVelocity();\n              _this14.curtains.resetPlanesTranslation();\n              _this14.curtains.resetPlanesScale();\n\n              // Force hide all planes by default\n              _this14.curtains.resetPlanesVisibility(false);\n              _this14._attachPlanesUpdateListeners();\n            } else {\n              _this14._detachPlanesUpdateListeners();\n              _this14.curtains.resetPlanesVelocity();\n              _this14.curtains.resetPlanesTranslation();\n              _this14.curtains.resetPlanesScale();\n              _this14.curtains.resetPlanesVisibility();\n            }\n            _this14.curtains.instance.enableDrawing();\n          };\n        });\n      }\n      if (this.curtains.instance && this.curtains.instance.planes[0]) {\n        this.tlPlanes = gsap.timeline({\n          paused: true,\n          defaults: {\n            duration: 2.4,\n            ease: 'expo.out'\n          }\n        });\n        if (this.elements.animationFade.length) {\n          this.tlPlanes.to(this.elements.animationFade, {\n            autoAlpha: 1,\n            duration: 1.2,\n            stagger: 0.05,\n            clearProps: 'opacity,visibility',\n            ease: 'power3.out'\n          }, 'start');\n        }\n        if (this.elements.animationScale.length) {\n          this.tlPlanes.animateScale(this.elements.animationScale, {\n            ease: 'power3.out',\n            duration: 1.2,\n            animateFrom: 'center'\n          }, 'start');\n        }\n        this.updateRef('preloaderRef', 'Preloader');\n        var _loop = function _loop() {\n          var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            index = _Object$entries$_i[0],\n            lane = _Object$entries$_i[1];\n          var indexLane = parseInt(index.toString());\n          lane.forEach(function (plane, indexPlane) {\n            if (indexLane === 0 && indexPlane === 0) {\n              plane.onReady(function () {\n                var opacity;\n                if ('opacity' in _this14.infiniteListImages.view.current[indexLane].items[indexPlane]) {\n                  opacity = _this14.infiniteListImages.view.current[indexLane].items[indexPlane].opacity;\n                }\n                if (AJAXRef && AJAXRef.running) {\n                  document.addEventListener('arts/barba/transition/end/before', function () {\n                    _this14._attachPlanesUpdateListeners();\n                    _this14._attachDragWebGLListeners();\n                    _this14._setWebGLReady();\n                    _this14._animatePlane(plane, opacity, function () {\n                      _this14._toggleInteraction(true);\n                      _this14._initAutoplay();\n                      _this14._initMarquee();\n                      _this14._animated = true;\n                    });\n                    _this14.tlPlanes.play();\n                  }, {\n                    once: true\n                  });\n                } else {\n                  if (_this14.preloaderRef) {\n                    _this14.preloaderRef.loaded.then(function () {\n                      _this14._attachPlanesUpdateListeners();\n                      _this14._attachDragWebGLListeners();\n                      _this14._setWebGLReady();\n                      _this14._animatePlane(plane, opacity, function () {\n                        _this14._toggleInteraction(true);\n                        _this14._initAutoplay();\n                        _this14._initMarquee();\n                        _this14._animated = true;\n                      });\n                      _this14.tlPlanes.play();\n                    });\n                  } else {\n                    _this14._attachPlanesUpdateListeners();\n                    _this14._attachDragWebGLListeners();\n                    _this14._setWebGLReady();\n                    _this14._animatePlane(plane, opacity, function () {\n                      _this14._toggleInteraction(true);\n                      _this14._initAutoplay();\n                      _this14._initMarquee();\n                      _this14._animated = true;\n                    });\n                    _this14.tlPlanes.play();\n                  }\n                }\n              });\n            } else {\n              plane.onReady(function () {\n                var opacity;\n                if ('opacity' in _this14.infiniteListImages.view.current[indexLane].items[indexPlane]) {\n                  opacity = _this14.infiniteListImages.view.current[indexLane].items[indexPlane].opacity;\n                }\n                if (AJAXRef && AJAXRef.running) {\n                  document.addEventListener('arts/barba/transition/end/before', function () {\n                    _this14._animatePlane(plane, opacity);\n                  }, {\n                    once: true\n                  });\n                } else {\n                  if (_this14.preloaderRef) {\n                    _this14.preloaderRef.loaded.then(function () {\n                      _this14._animatePlane(plane, opacity);\n                    });\n                  } else {\n                    _this14._animatePlane(plane, opacity);\n                  }\n                }\n              });\n            }\n          });\n        };\n        for (var _i = 0, _Object$entries = Object.entries(this.curtains.planes); _i < _Object$entries.length; _i++) {\n          _loop();\n        }\n        ;\n      } else {\n        this._setWebGLReady();\n        this._attachDragWebGLListeners();\n        this._toggleInteraction(true);\n      }\n    }\n  }, {\n    key: \"_animatePlane\",\n    value: function _animatePlane(plane, opacity, cb) {\n      var _this15 = this;\n      var wrapperEl = plane.htmlElement.closest(this.innerSelectors.itemImages);\n      var isInViewport = this._isInViewport(wrapperEl);\n      var isVisible = gsap.getProperty(wrapperEl, 'visibility') === 'visible';\n      if (!isVisible || !isInViewport) {\n        plane.visible = false;\n        plane.uniforms.opacity.value = 1;\n        if (typeof cb === 'function') {\n          gsap.delayedCall(1.8, cb);\n        }\n        return;\n      }\n      var animation = {\n          scaleX: 0.75,\n          scaleY: 0.75,\n          opacity: 0,\n          transition: 0.5,\n          transformOriginX: 0.5,\n          transformOriginY: 0.5,\n          transformOriginZ: 0.5\n        },\n        vars = {\n          transition: 1,\n          scaleX: 1,\n          scaleY: 1,\n          opacity: 1,\n          transformOriginX: 0.5,\n          transformOriginY: 0.5,\n          transformOriginZ: 0.5,\n          onStart: function onStart() {\n            if (typeof cb === 'function') {\n              gsap.delayedCall(1.8, cb);\n            }\n          },\n          onUpdate: function onUpdate() {\n            if (!_this15._animated && 'opacity' in animation && typeof animation.opacity === 'number') {\n              plane.uniforms.opacity.value = animation.opacity;\n              // if (animation.opacity < 0.5) {\n              // \tplane.uniforms.transition.value = animation.transition;\n              // } else {\n              // \tplane.uniforms.transition.value = 1 - animation.transition;\n              // }\n            }\n            plane.uniforms.transition.value = animation.transition;\n            plane.scale.x = animation.scaleX;\n            plane.scale.y = animation.scaleY;\n            plane.transformOrigin.x = animation.transformOriginX;\n            plane.transformOrigin.y = animation.transformOriginY;\n            plane.transformOrigin.z = animation.transformOriginZ;\n          }\n        };\n      if (typeof opacity === 'number') {\n        vars.opacity = opacity;\n      }\n      this.tlPlanes.to(animation, vars, '<0.04');\n    }\n  }, {\n    key: \"_isInViewport\",\n    value: function _isInViewport(element) {\n      var rect = element.getBoundingClientRect();\n      var height = window.innerHeight || document.documentElement.clientHeight;\n      var width = window.innerWidth || document.documentElement.clientWidth;\n      var offset = {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      };\n      return rect.right >= -offset.left && rect.bottom >= -offset.top && rect.left <= width + offset.right && rect.top <= height + offset.bottom;\n    }\n  }, {\n    key: \"_attachDragWebGLListeners\",\n    value: function _attachDragWebGLListeners() {\n      var _this16 = this;\n      this.infiniteListImages.controller.on('dragPressed', function (pressed) {\n        _this16._tlDrag.clear();\n        _this16._toggleMarqueeAnimation(!pressed);\n        if (pressed) {\n          _this16.curtains.instance.planes.forEach(function (plane) {\n            var animation = {\n              scaleX: plane.scale.x,\n              scaleY: plane.scale.y,\n              transformOriginX: plane.transformOrigin.x,\n              transformOriginY: plane.transformOrigin.y,\n              transformOriginZ: plane.transformOrigin.z\n            };\n            _this16._tlDrag.to(animation, {\n              scaleX: _this16.options.webGL.dragScalePlanes,\n              scaleY: _this16.options.webGL.dragScalePlanes,\n              transformOriginX: 0.5,\n              transformOriginY: 0.5,\n              transformOriginZ: 0.5,\n              onUpdate: function onUpdate() {\n                plane.scale.x = animation.scaleX;\n                plane.scale.y = animation.scaleY;\n              }\n            }, 'start');\n            plane.textures.forEach(function (texture) {\n              var animation = {\n                scaleX: texture.scale.x,\n                scaleY: texture.scale.y\n              };\n              _this16._tlDrag.to(animation, {\n                scaleX: _this16.options.webGL.dragScaleTextures,\n                scaleY: _this16.options.webGL.dragScaleTextures,\n                onUpdate: function onUpdate() {\n                  texture.scale.x = animation.scaleX;\n                  texture.scale.y = animation.scaleY;\n                }\n              }, 'start');\n            });\n          });\n        } else {\n          _this16.curtains.instance.planes.forEach(function (plane) {\n            var animation = {\n              scaleX: plane.scale.x,\n              scaleY: plane.scale.y\n            };\n            _this16._tlDrag.to(animation, {\n              scaleX: 1,\n              scaleY: 1,\n              onUpdate: function onUpdate() {\n                plane.scale.x = animation.scaleX;\n                plane.scale.y = animation.scaleY;\n              }\n            }, 'start');\n            plane.textures.forEach(function (texture) {\n              var animation = {\n                scaleX: texture.scale.x,\n                scaleY: texture.scale.y\n              };\n              _this16._tlDrag.to(animation, {\n                scaleX: 1,\n                scaleY: 1,\n                onUpdate: function onUpdate() {\n                  texture.scale.x = animation.scaleX;\n                  texture.scale.y = animation.scaleY;\n                }\n              }, 'start');\n            });\n          });\n        }\n      }).on('dragStart', function () {\n        _this16._tlDrag.clear();\n        _this16._toggleMarqueeAnimation(false);\n        _this16.curtains.instance.planes.forEach(function (plane) {\n          var animation = {\n            scaleX: plane.scale.x,\n            scaleY: plane.scale.y,\n            transformOriginX: plane.transformOrigin.x,\n            transformOriginY: plane.transformOrigin.y,\n            transformOriginZ: plane.transformOrigin.z\n          };\n          _this16._tlDrag.to(animation, {\n            scaleX: _this16.options.webGL.dragScalePlanes,\n            scaleY: _this16.options.webGL.dragScalePlanes,\n            transformOriginX: 0.5,\n            transformOriginY: 0.5,\n            transformOriginZ: 0.5,\n            onUpdate: function onUpdate() {\n              plane.scale.x = animation.scaleX;\n              plane.scale.y = animation.scaleY;\n              plane.transformOrigin.x = animation.transformOriginX;\n              plane.transformOrigin.y = animation.transformOriginY;\n              plane.transformOrigin.z = animation.transformOriginZ;\n            }\n          }, 'start');\n          plane.textures.forEach(function (texture) {\n            var animation = {\n              scaleX: texture.scale.x,\n              scaleY: texture.scale.y\n            };\n            _this16._tlDrag.to(animation, {\n              scaleX: _this16.options.webGL.dragScaleTextures,\n              scaleY: _this16.options.webGL.dragScaleTextures,\n              onUpdate: function onUpdate() {\n                texture.scale.x = animation.scaleX;\n                texture.scale.y = animation.scaleY;\n              }\n            }, 'start');\n          });\n        });\n      }).on('dragComplete', function () {\n        _this16._tlDrag.clear();\n        _this16._toggleMarqueeAnimation(true);\n        _this16.curtains.instance.planes.forEach(function (plane) {\n          var animation = {\n            scaleX: plane.scale.x,\n            scaleY: plane.scale.y\n          };\n          _this16._tlDrag.to(animation, {\n            scaleX: 1,\n            scaleY: 1,\n            onUpdate: function onUpdate() {\n              plane.scale.x = animation.scaleX;\n              plane.scale.y = animation.scaleY;\n            }\n          }, 'start');\n          plane.textures.forEach(function (texture) {\n            var animation = {\n              scaleX: texture.scale.x,\n              scaleY: texture.scale.y\n            };\n            _this16._tlDrag.to(animation, {\n              scaleX: 1,\n              scaleY: 1,\n              onUpdate: function onUpdate() {\n                texture.scale.x = animation.scaleX;\n                texture.scale.y = animation.scaleY;\n              }\n            }, 'start');\n          });\n        });\n      }).on('clonesAdded', function (_ref4) {\n        var indexLane = _ref4.indexLane,\n          clones = _ref4.clones;\n        clones.forEach(function (el) {\n          el.setAttribute('style', null);\n          _this16.curtains.loadPlane(indexLane, el);\n        });\n      });\n    }\n  }, {\n    key: \"_attachDragListeners\",\n    value: function _attachDragListeners() {\n      var _this17 = this;\n      this.infiniteListImages.controller.on('dragPressed', function (pressed) {\n        _this17.updateRef('cursorRef', 'CursorFollower');\n        if (_this17.cursorRef) {\n          if (pressed) {\n            _this17.cursorRef.instance.reset();\n            _this17.cursorRef.instance.set({\n              autoReset: false,\n              arrows: _this17.options.direction,\n              arrowsDistance: _this17.options.drag.arrowsDistance,\n              scale: _this17.options.drag.scale,\n              label: _this17.options.drag.label || '',\n              hideNative: _this17.options.drag.hideNative\n            });\n          } else {\n            _this17.cursorRef.instance.set({\n              autoReset: true\n            });\n            _this17.cursorRef.instance.reset();\n          }\n        }\n      });\n\n      // Prevent \"pull-to-refresh\" on touch devices\n      if (this.options.direction === 'vertical' && !!this.options.preventScroll) {\n        this.infiniteListImages.container.addEventListener('touchmove', this._handlers.touchStart);\n      }\n    }\n  }, {\n    key: \"_attachAutoplayEvents\",\n    value: function _attachAutoplayEvents() {\n      var _this18 = this;\n      var circles = [],\n        finishingDuration = 0.6;\n      this.tlAutoplay = gsap.timeline({\n        paused: true\n      });\n      this.rotatingButtons.forEach(function (_ref5) {\n        var element = _ref5.element;\n        var circle = element.querySelector('circle');\n        if (circle) {\n          circles.push(circle);\n        }\n      });\n      this.tlAutoplay.fromTo(circles, {\n        rotate: 0,\n        transformOrigin: 'center center',\n        drawSVG: '0% 0%'\n      }, {\n        rotate: 180,\n        transformOrigin: 'center center',\n        duration: this.options.autoplay - finishingDuration / 2,\n        drawSVG: '0% 100%',\n        ease: 'none'\n      }).to(circles, {\n        rotate: 360,\n        transformOrigin: 'center center',\n        drawSVG: '100% 100%',\n        ease: 'power3.inOut',\n        duration: finishingDuration\n      });\n      this.infiniteListImages.controller.on('autoplayStart', this.tlAutoplay.restart.bind(this.tlAutoplay)).on('autoplayStop', function () {\n        _this18.tlAutoplay.kill();\n        gsap.to(circles, {\n          rotate: 180,\n          transformOrigin: 'center center',\n          drawSVG: '100% 100%',\n          ease: 'power3.inOut',\n          duration: finishingDuration\n        });\n      }).on('autoplayPause', function () {\n        _this18.tlAutoplay.pause();\n        gsap.to(circles, {\n          rotate: 180,\n          transformOrigin: 'center center',\n          drawSVG: '100% 100%',\n          ease: 'power3.inOut',\n          duration: finishingDuration\n        });\n      }).on('autoplayResume', this.tlAutoplay.play.bind(this.tlAutoplay));\n    }\n  }, {\n    key: \"_initPerspectiveShaderPass\",\n    value: function _initPerspectiveShaderPass() {\n      var _this19 = this;\n      var params = {\n        fragmentShader: this._fShaderPassPerspective(),\n        uniforms: {\n          viewportSizes: {\n            name: 'uViewportSizes',\n            type: '2f',\n            value: this.curtains._getViewportSize()\n          },\n          velocity: {\n            name: 'uVelocity',\n            type: '1f',\n            value: 0\n          },\n          strength: {\n            name: 'uStrength',\n            type: '1f',\n            value: this.options.webGL.perspectiveEffect\n          }\n        }\n      };\n      this.perspectivePass = new ShaderPass(this.curtains.instance, params);\n      if (this.perspectivePass && _typeof(this.perspectivePass.uniforms) === 'object') {\n        var directionAwareEffect = this.options.webGL.directionAwareEffect;\n        this.infiniteListImages.controller.on('scrollUpdate', function (velocity, direction) {\n          var adjustedVelocity = velocity;\n          if (directionAwareEffect) {\n            var multiplier = typeof directionAwareEffect === 'number' ? directionAwareEffect : 1;\n            adjustedVelocity = (direction === 'forward' ? velocity : -velocity) * multiplier;\n          }\n          _this19.perspectivePass.uniforms.velocity.value = adjustedVelocity;\n        });\n      }\n    }\n  }, {\n    key: \"_destroyPerspectiveShaderPass\",\n    value: function _destroyPerspectiveShaderPass() {\n      if (this.perspectivePass && typeof this.perspectivePass.dispose === 'function') {\n        this.perspectivePass.dispose();\n        this.perspectivePass = null;\n      }\n    }\n  }, {\n    key: \"_initFXAAPass\",\n    value: function _initFXAAPass() {\n      // this.FXAAPass = new FXAAPass(this.curtains.instance);\n    }\n  }, {\n    key: \"_destroyFXAAPass\",\n    value: function _destroyFXAAPass() {\n      if (this.FXAAPass && typeof this.FXAAPass.dispose === 'function') {\n        this.FXAAPass.dispose();\n        this.FXAAPass = null;\n      }\n    }\n  }, {\n    key: \"_shouldApplyPerspectiveShaderPass\",\n    value: function _shouldApplyPerspectiveShaderPass() {\n      return _typeof(this.options.webGL) === 'object' && typeof this.options.webGL.perspectiveEffect === 'number' && this.options.webGL.perspectiveEffect !== 0;\n    }\n  }, {\n    key: \"_attachPlanesUpdateListeners\",\n    value: function _attachPlanesUpdateListeners() {\n      this.infiniteListImages.controller.on('visibleUpdate', this._handlers.updateVisible);\n      this.infiniteListImages.view.on('update', this._handlers.updateView);\n    }\n  }, {\n    key: \"_detachPlanesUpdateListeners\",\n    value: function _detachPlanesUpdateListeners() {\n      this.infiniteListImages.controller.off('visibleUpdate', this._handlers.updateVisible);\n      this.infiniteListImages.view.off('update', this._handlers.updateView);\n    }\n  }, {\n    key: \"_onResize\",\n    value: function _onResize() {\n      var _this20 = this;\n      var _ref6 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref6$updateCurtains = _ref6.updateCurtains,\n        updateCurtains = _ref6$updateCurtains === void 0 ? true : _ref6$updateCurtains,\n        _ref6$disableInfinite = _ref6.disableInfiniteList,\n        disableInfiniteList = _ref6$disableInfinite === void 0 ? true : _ref6$disableInfinite;\n      var enabled = this.infiniteListImages.enabled;\n      if (!!this.curtains) {\n        if (disableInfiniteList && enabled) {\n          this.infiniteListImages.disable();\n        }\n        this.curtains.instance.planes.forEach(function (plane, index) {\n          var listItem = plane.htmlElement.closest(_this20.innerSelectors.itemImages);\n          // let savedStyle;\n\n          if (listItem) {\n            // savedStyle = listItem.getAttribute('style');\n            listItem.setAttribute('style', null);\n          }\n          plane.scale.x = 1;\n          plane.scale.y = 1;\n          if (plane.textures.length) {\n            plane.textures.forEach(function (texture) {\n              texture.scale.x = 1;\n              texture.scale.y = 1;\n            });\n          }\n          plane.updatePosition();\n\n          // if (listItem) {\n          // \tlistItem.setAttribute('style', savedStyle);\n          // }\n        });\n        if (updateCurtains) {\n          this.curtains.instance.resize();\n        }\n        if (disableInfiniteList && enabled) {\n          this.infiniteListImages.enable();\n        }\n      }\n    }\n  }, {\n    key: \"_onUpdateView\",\n    value: function _onUpdateView(_ref7) {\n      var updatedItemState = _ref7.updatedItemState,\n        indexLane = _ref7.indexLane,\n        indexItem = _ref7.indexItem;\n      if (!this.curtains.planes[indexLane] || !this.curtains.planes[indexLane][indexItem]) {\n        return;\n      }\n      var plane = this.curtains.planes[indexLane][indexItem];\n      if (_typeof(plane.uniforms) !== 'object') {\n        return;\n      }\n      if (this.options.direction === 'horizontal') {\n        plane.uniforms.velocityX.value = this.infiniteListImages.controller.lanes[indexLane].scroller.velocity;\n        plane.uniforms.velocityY.value = 0;\n      } else {\n        plane.uniforms.velocityX.value = 0;\n        plane.uniforms.velocityY.value = this.infiniteListImages.controller.lanes[indexLane].scroller.velocity;\n      }\n      if ('visible' in updatedItemState) {\n        if (!!this._animated) {\n          plane.visible = updatedItemState.visible;\n        }\n      }\n      if ('opacity' in updatedItemState && typeof updatedItemState.opacity === 'number') {\n        if (!!this._animated) {\n          plane.uniforms.opacity.value = updatedItemState.opacity;\n        }\n      }\n      if ('transform' in updatedItemState) {\n        var transform = updatedItemState.transform;\n        if ('scale' in transform) {\n          if (!!this._animated) {\n            plane.scale.x = transform.scale;\n            plane.scale.y = transform.scale;\n          }\n        }\n        if ('origin' in transform) {\n          if (transform.origin === 'left center') {\n            plane.transformOrigin.x = 0;\n            plane.transformOrigin.y = 0.5;\n            plane.transformOrigin.z = 0;\n          } else if (transform.origin === 'right center') {\n            plane.transformOrigin.x = 1;\n            plane.transformOrigin.y = 0.5;\n            plane.transformOrigin.z = 0;\n          } else {\n            plane.transformOrigin.x = 0.5;\n            plane.transformOrigin.y = 0.5;\n            plane.transformOrigin.z = 0;\n          }\n        }\n        if ('translate' in transform) {\n          if (_typeof(transform.translate) === 'object') {\n            plane.relativeTranslation.x = transform.translate.x;\n            plane.relativeTranslation.y = transform.translate.y;\n            plane.relativeTranslation.z = transform.translate.z;\n          }\n          if (typeof transform.translate === 'number') {\n            plane.relativeTranslation.x = transform.translate;\n          }\n        }\n        if ('rotate' in transform) {\n          if (_typeof(transform.rotate) === 'object') {\n            plane.rotation.x = -app.utilities.degrees2Radians(transform.rotate.x);\n            plane.rotation.y = -app.utilities.degrees2Radians(transform.rotate.y);\n            plane.rotation.z = -app.utilities.degrees2Radians(transform.rotate.z);\n          }\n          if (typeof transform.rotate === 'number') {\n            plane.rotation.z = -app.utilities.degrees2Radians(transform.rotate);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_onUpdateVisible\",\n    value: function _onUpdateVisible(visible) {\n      if (this.curtains && this.curtains.instance) {\n        if (visible) {\n          this.curtains.instance.enableDrawing();\n        } else {\n          this.curtains.instance.disableDrawing();\n        }\n      }\n    }\n  }, {\n    key: \"_vShaderPlane\",\n    value: function _vShaderPlane() {\n      return \"\\n\\t\\t\\t#define PI 3.1415926535897932384626433832795\\n\\n\\t\\t\\tprecision mediump float;\\n\\n\\t\\t\\t// Default mandatory variables\\n\\t\\t\\tattribute vec3 aVertexPosition;\\n\\t\\t\\tattribute vec2 aTextureCoord;\\n\\n\\t\\t\\tuniform mat4 uMVMatrix;\\n\\t\\t\\tuniform mat4 uPMatrix;\\n\\n\\t\\t\\tuniform mat4 uTextureMatrix0;\\n\\t\\t\\tuniform vec2 uPlaneSizes;\\n\\n\\t\\t\\t// Custom variables\\n\\t\\t\\tvarying vec3 vVertexPosition;\\n\\t\\t\\tvarying vec2 vTextureCoord;\\n\\n\\t\\t\\t// Custom uniforms\\n\\t\\t\\tuniform vec2 uMousePosition;\\n\\t\\t\\tuniform vec2 uViewportSizes;\\n\\t\\t\\tuniform float uVelocityX;\\n\\t\\t\\tuniform float uVelocityY;\\n\\t\\t\\tuniform float uOpacity;\\n\\t\\t\\tuniform float uTime;\\n\\t\\t\\tuniform float uHoverAmplitude;\\n\\t\\t\\tuniform float uHoverSpeed;\\n\\t\\t\\tuniform float uHoverSegments;\\n\\t\\t\\tuniform float uHovered;\\n\\t\\t\\tuniform float uTransition;\\n\\t\\t\\tuniform float uElasticEffect;\\n\\n\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t// vec4 vertexPosition = uMVMatrix * vec4(aVertexPosition, 1.0);\\n\\t\\t\\t\\tvec3 vertexPosition = aVertexPosition;\\n\\n\\t\\t\\t\\t// 1. Speed Effect\\n\\t\\t\\t\\tvertexPosition.y -= sin(vertexPosition.x * 2. / (uViewportSizes.y) * PI + PI / 2.0) * uVelocityY * (uPlaneSizes.y / 2.) * uElasticEffect;\\n\\t\\t\\t\\tvertexPosition.x += sin(vertexPosition.y * 2. / (uViewportSizes.x) * PI + PI / 2.0) * uVelocityX * (uPlaneSizes.x / 2.) * uElasticEffect;\\n\\n\\t\\t\\t\\t// 2. Hover Effect\\n\\t\\t\\t\\tvertexPosition.z += sin(vertexPosition.x * (uHoverSegments) + (uTime * 0.03) + uHoverSpeed) * uHoverAmplitude * 0.005;\\n\\t\\t\\t\\tvertexPosition.x += sin(vertexPosition.y * (uHoverSegments) + (uTime * 0.03) + uHoverSpeed) * uHoverAmplitude * 0.005;\\n\\n\\t\\t\\t\\t// 3. Transition\\n\\t\\t\\t\\t// convert uTransition from [0,1] to [0,1,0]\\n\\t\\t\\t\\tfloat transition = 1.0 - abs((uTransition * 2.0) - 1.0);\\n\\n\\t\\t\\t\\t// Get the distance between our vertex and the mouse position\\n\\t\\t\\t\\tfloat distanceFromMouse = distance(uMousePosition, vec2(vertexPosition.x, vertexPosition.y));\\n\\n\\t\\t\\t\\t// Calculate our wave effect\\n\\t\\t\\t\\tfloat waveSinusoid = cos(6. * (distanceFromMouse - (uTime * 0.02)));\\n\\n\\t\\t\\t\\t// Attenuate the effect based on mouse distance\\n\\t\\t\\t\\tfloat distanceStrength = (0.4 / (distanceFromMouse + 0.4));\\n\\n\\t\\t\\t\\t// Calculate our distortion effect\\n\\t\\t\\t\\tfloat distortionEffect = distanceStrength * waveSinusoid * 0.33;\\n\\n\\t\\t\\t\\t// Apply it to our vertex position\\n\\t\\t\\t\\tvertexPosition.z +=  distortionEffect * -transition;\\n\\t\\t\\t\\tvertexPosition.x +=  distortionEffect * transition * (uMousePosition.x - vertexPosition.x);\\n\\t\\t\\t\\tvertexPosition.y +=  distortionEffect * transition * (uMousePosition.y - vertexPosition.y);\\n\\n\\t\\t\\t\\tgl_Position = uPMatrix * uMVMatrix * vec4(vertexPosition, 1.0);\\n\\n\\t\\t\\t\\t// Varyings\\n\\t\\t\\t\\tvVertexPosition = vertexPosition;\\n\\t\\t\\t\\tvTextureCoord = (uTextureMatrix0 * vec4(aTextureCoord, 0.0, 1.0)).xy;\\n\\t\\t\\t}\\n\\t\\t\";\n    }\n  }, {\n    key: \"_fShaderPlane\",\n    value: function _fShaderPlane() {\n      return \"\\n\\t\\t\\tprecision mediump float;\\n\\n\\t\\t\\t// Variables from vertex shader\\n\\t\\t\\tvarying vec3 vVertexPosition;\\n\\t\\t\\tvarying vec2 vTextureCoord;\\n\\n\\t\\t\\t// Custom uniforms\\n\\t\\t\\tuniform float uOpacity;\\n\\t\\t\\tuniform float uTransition;\\n\\t\\t\\tuniform sampler2D uSampler0;\\n\\n\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t// Apply texture\\n\\t\\t\\t\\tvec4 finalColor = texture2D(uSampler0, vTextureCoord);\\n\\n\\t\\t\\t\\t// Apply opacity\\n\\t\\t\\t\\tfinalColor.a = uOpacity;\\n\\n\\t\\t\\t\\t// Fake shadows based on vertex position along Z axis\\n\\t\\t\\t\\tfinalColor.rgb += clamp(vVertexPosition.z, -1.0, 0.0) * 0.75 * uTransition;\\n\\n\\t\\t\\t\\t// Fake lights based on vertex position along Z axis\\n\\t\\t\\t\\tfinalColor.rgb += clamp(vVertexPosition.z, 0.0, 1.0) * 0.75 * uTransition;\\n\\n\\t\\t\\t\\t// Display texture\\n\\t\\t\\t\\tgl_FragColor = finalColor;\\n\\t\\t\\t}\\n\\t\\t\";\n    }\n  }, {\n    key: \"_fShaderPassPerspective\",\n    value: function _fShaderPassPerspective() {\n      return \"\\n\\t\\t\\t#define PI 3.1415926535897932384626433832795\\n\\n\\t\\t\\tprecision mediump float;\\n\\n\\t\\t\\t// Get our varyings\\n\\t\\t\\tvarying vec3 vVertexPosition;\\n\\t\\t\\tvarying vec2 vTextureCoord;\\n\\n\\t\\t\\t// Our render texture\\n\\t\\t\\tuniform sampler2D uRenderTexture;\\n\\n\\t\\t\\t// Custom uniforms\\n\\t\\t\\tuniform float uVelocity;\\n\\t\\t\\tuniform float uStrength;\\n\\t\\t\\tuniform vec2 uViewportSizes;\\n\\n\\t\\t\\tvoid main() {\\n\\t\\t\\t\\tvec2 textureCoords = vTextureCoord;\\n\\t\\t\\t\\tvec2 point = vec2(0.5, 0.5);\\n\\n\\t\\t\\t\\t// distort around scene center\\n\\t\\t\\t\\ttextureCoords += vec2(point - textureCoords).xy * uStrength * -0.1 * sin(distance(point, textureCoords) * PI + PI / 2.0 ) * -uVelocity;\\n\\n\\t\\t\\t\\t// display our render texture, which contains our shader pass frame buffer object content\\n\\t\\t\\t\\tgl_FragColor = texture2D(uRenderTexture, textureCoords);\\n\\t\\t\\t}\\n\\t\\t\";\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/InfiniteList.js\n");

/***/ }),

/***/ "./src/js/components/MarqueeHeader.js":
/*!********************************************!*\
  !*** ./src/js/components/MarqueeHeader.js ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MarqueeHeader)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar MarqueeHeader = /*#__PURE__*/function (_BaseComponent) {\n  function MarqueeHeader(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, MarqueeHeader);\n    _this = _callSuper(this, MarqueeHeader, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        loop: true,\n        speed: 0.5,\n        onHoverSpeed: 0.1,\n        onScrollSpeed: false,\n        onScrollInverseDirection: false,\n        delimiter: '&nbsp;&nbsp;/&nbsp;&nbsp;'\n      },\n      // Component inner elements\n      innerElements: {\n        lanes: '.js-marquee-header__list-lane',\n        items: '.js-marquee-header__list-item',\n        labels: '.js-marquee-header__label'\n      }\n    }]);\n    _this._handlers = {\n      afterResize: _this._onAfterResize.bind(_this)\n    };\n    _this.clamp = gsap.utils.clamp(-10, 10);\n    _this.setup();\n    return _this;\n  }\n  _inherits(MarqueeHeader, _BaseComponent);\n  return _createClass(MarqueeHeader, [{\n    key: \"init\",\n    value: function init() {\n      this._addDelimiter();\n      this._createInfiniteList();\n      this._attachEvents();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      if (this.infiniteList) {\n        this.infiniteList.destroy();\n      }\n    }\n  }, {\n    key: \"getScrubAnimation\",\n    value: function getScrubAnimation() {\n      var _this2 = this;\n      if (typeof this.options.onScrollSpeed === 'number') {\n        var proxy = {\n          velocity: this.options.speed\n        };\n        var velocityWatcher = ScrollTrigger.getById('velocityWatcher');\n        var config = {\n          trigger: this.element,\n          once: false,\n          invalidateOnRefresh: true,\n          onUpdate: function onUpdate(self) {\n            var velocity = _this2.clamp(Math.abs(velocityWatcher.getVelocity()) / 300) * _this2.options.onScrollSpeed;\n            if (velocity > proxy.velocity) {\n              proxy.velocity = velocity * (_this2.options.onScrollInverseDirection ? self.direction : 1);\n              gsap.to(proxy, {\n                velocity: _this2.options.speed,\n                duration: 0.6,\n                ease: 'none',\n                overwrite: true,\n                onUpdate: function onUpdate() {\n                  if (_this2.infiniteList && 'marquee' in _this2.infiniteList.plugins) {\n                    _this2.infiniteList.plugins.marquee.setNormalSpeed(proxy.velocity);\n                  }\n                }\n              });\n            }\n          }\n        };\n        return config;\n      }\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      this.infiniteList.controller.on('afterResize', this._handlers.afterResize);\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      this.infiniteList.controller.off('afterResize', this._handlers.afterResize);\n    }\n  }, {\n    key: \"_addDelimiter\",\n    value: function _addDelimiter() {\n      var _this3 = this;\n      if (typeof this.options.delimiter === 'string') {\n        this.elements.labels.forEach(function (heading) {\n          heading.innerHTML = \"<span class=\\\"marquee-heading\\\">\".concat(heading.innerHTML, \"</span>\");\n          if (_this3.options.delimiter.length) {\n            heading.innerHTML += \"<span class=\\\"marquee-delimiter\\\">\".concat(_this3.options.delimiter, \"</span>\");\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_createInfiniteList\",\n    value: function _createInfiniteList() {\n      this.infiniteList = new ArtsInfiniteList(this.element, {\n        direction: 'horizontal',\n        listElementsSelector: this.innerSelectors.items,\n        mapWheelEventYtoX: false,\n        multiLane: {\n          laneSelector: this.innerSelectors.lanes,\n          laneOptionsAttribute: 'data-arts-infinite-list-options'\n        },\n        autoClone: this.options.loop,\n        loop: this.options.loop,\n        plugins: {\n          marquee: {\n            speed: this.options.speed,\n            onHoverSpeed: this.options.onHoverSpeed\n          },\n          scroll: false\n        }\n      });\n    }\n  }, {\n    key: \"_onAfterResize\",\n    value: function _onAfterResize() {\n      if (app.lazy && typeof app.lazy.update === 'function') {\n        app.lazy.update();\n      }\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/MarqueeHeader.js\n");

/***/ }),

/***/ "./src/js/components/MarqueeHeadingsHover.js":
/*!***************************************************!*\
  !*** ./src/js/components/MarqueeHeadingsHover.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MarqueeHeadingsHover)\n/* harmony export */ });\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter); }\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar MarqueeHeadingsHover = /*#__PURE__*/function (_BaseComponent) {\n  function MarqueeHeadingsHover(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, MarqueeHeadingsHover);\n    _this = _callSuper(this, MarqueeHeadingsHover, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        webGL: {\n          enabled: false,\n          vertices: 16\n        },\n        preventScroll: false,\n        drag: {\n          label: false,\n          arrowsDistance: 45,\n          scale: 1.2,\n          hideNative: false,\n          toggleClass: 'marquee-headings-hover_mouse-drag'\n        },\n        delimiter: '&nbsp;&nbsp;/&nbsp;&nbsp;',\n        direction: 'horizontal',\n        matchMedia: false,\n        onScrollRotatingButtonSpeed: 2,\n        loop: true,\n        autoCenterFirstItem: true,\n        marquee: {\n          speed: 0.6\n        },\n        scroll: app.options.virtualScroll,\n        type: 'wheel,touch,pointer',\n        toggleScrollingClass: 'marquee-headings-hover_scrolling',\n        toggleDraggingClass: 'marquee-headings-hover_dragging',\n        togglePressedClass: 'marquee-headings-hover_pressed',\n        snapOnRelease: {\n          keyboard: true,\n          toggleActiveItemClass: 'active',\n          removeActiveClassOnInteraction: false\n        },\n        wheelSpeed: -1,\n        speedEffect: false,\n        opacityEffect: false,\n        currentClass: 'current',\n        itemIdAttribute: 'data-post-id'\n      },\n      // Component inner elements\n      innerElements: {\n        canvasWrapper: '.canvas-wrapper',\n        fixedCanvasWrapper: '.canvas-wrapper_sticky',\n        lanes: '.js-marquee-headings-hover__lane',\n        items: '.js-marquee-headings-hover__item',\n        labels: '.js-marquee-headings-hover__label',\n        wrappers: '.js-marquee-headings-hover__wrapper',\n        fixedWrapper: '.js-marquee-headings-hover__fixed-wrapper',\n        links: '.js-marquee-headings-hover__link',\n        images: '.marquee-headings-hover__wrapper-img',\n        animationFade: '.js-marquee-headings-hover__animation-fade',\n        animationReveal: '.js-marquee-headings-hover__animation-reveal'\n      }\n    }]);\n    _this._handlers = {\n      hoverIn: _this._onMouseEnter.bind(_this),\n      hoverOut: _this._onMouseLeave.bind(_this),\n      updateView: _this._onUpdateView.bind(_this),\n      updateVisible: _this._onUpdateVisible.bind(_this),\n      resize: app.utilities.debounce(_this._onResize.bind(_this), app.utilities.getDebounceTime())\n    };\n    _this.tl = gsap.timeline();\n    _this.clamp = gsap.utils.clamp(1, 10);\n    _this.setup();\n    return _this;\n  }\n  _inherits(MarqueeHeadingsHover, _BaseComponent);\n  return _createClass(MarqueeHeadingsHover, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      this.rotatingButtons = this.components.filter(function (component, index) {\n        return component.name === 'RotatingButton';\n      });\n      this.updateRef('cursorRef', 'CursorFollower');\n      this._addDelimiter();\n      this._setImages();\n      this._createInfiniteListHeadings();\n      if (!!this.options.webGL && !!this.options.webGL.enabled) {\n        this.setLoading(true);\n        app.componentsManager.load({\n          properties: app.components['CurtainsBase']\n        }).then(function (module) {\n          if (_this2.infiniteListHeadings.enabled) {\n            _this2.infiniteListHeadings.pluginsReady.then(function () {\n              _this2._initCurtains(module);\n              _this2._attachEvents();\n              _this2.setLoading(false);\n            });\n          } else {\n            _this2._initCurtains(module);\n            _this2._attachEvents();\n            _this2.setLoading(false);\n          }\n        });\n      } else {\n        this._attachEvents();\n      }\n      this._pinElements();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      if (this.infiniteListHeadings) {\n        this.infiniteListHeadings.destroy();\n      }\n      if (this.curtains) {\n        document.addEventListener('arts/barba/transition/end', this.curtains.destroy.bind(this.curtains), {\n          once: true\n        });\n      }\n    }\n  }, {\n    key: \"prepareAnimation\",\n    value: function prepareAnimation() {\n      var _this3 = this;\n      return new Promise(function (resolve) {\n        var tl = gsap.timeline({\n          onComplete: function onComplete() {\n            resolve(true);\n          }\n        });\n        if (_this3.elements.animationReveal.length) {\n          tl.set(_this3.elements.animationReveal, {\n            y: '100%'\n          });\n        }\n        if (_this3.elements.animationFade.length) {\n          tl.set(_this3.elements.animationFade, {\n            autoAlpha: 0\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getRevealAnimation\",\n    value: function getRevealAnimation() {\n      var tl = gsap.timeline({\n        paused: true\n      });\n      if (this.elements.animationReveal.length) {\n        tl.to(this.elements.animationReveal, {\n          y: '0%',\n          duration: 1.2,\n          ease: 'power3.out',\n          stagger: distributeByPosition({\n            from: 'start',\n            axis: 'y',\n            amount: 0.6\n          })\n        }, 'start');\n      }\n      if (this.elements.animationFade.length) {\n        tl.to(this.elements.animationFade, {\n          autoAlpha: 1,\n          duration: 1.2,\n          stagger: 0.05,\n          clearProps: 'opacity,visibility',\n          ease: 'power3.out'\n        }, 'start');\n      }\n      return tl;\n    }\n  }, {\n    key: \"_setImages\",\n    value: function _setImages() {\n      this.elements.images.forEach(function (el) {\n        var element = el.querySelectorAll('img, video');\n        gsap.set(element, {\n          scale: 1.05\n        });\n      });\n    }\n  }, {\n    key: \"_addDelimiter\",\n    value: function _addDelimiter() {\n      var _this4 = this;\n      if (typeof this.options.delimiter === 'string') {\n        this.elements.labels.forEach(function (heading) {\n          heading.innerHTML = \"<span class=\\\"marquee-heading\\\">\".concat(heading.innerHTML, \"</span>\");\n          if (_this4.options.delimiter.length) {\n            heading.innerHTML += \"<span class=\\\"marquee-delimiter\\\">\".concat(_this4.options.delimiter, \"</span>\");\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_createInfiniteListHeadings\",\n    value: function _createInfiniteListHeadings() {\n      this.infiniteListHeadings = new ArtsInfiniteList(this.element, {\n        direction: this.options.direction,\n        mapWheelEventYtoX: true,\n        listElementsSelector: this.innerSelectors.items,\n        autoCenterFirstItem: this.options.autoCenterFirstItem,\n        multiLane: {\n          laneSelector: this.innerSelectors.lanes,\n          laneOptionsAttribute: 'data-arts-infinite-list-options'\n        },\n        matchMedia: this.options.matchMedia,\n        loop: this.options.loop,\n        autoClone: this.options.loop,\n        scroll: this.options.scroll,\n        plugins: {\n          marquee: _typeof(this.options.marquee) === 'object' ? _objectSpread({\n            autoInit: true\n          }, this.options.marquee) : false,\n          scroll: this.options.scroll ? {\n            type: this.options.type,\n            toggleScrollingClass: this.options.toggleScrollingClass,\n            toggleDraggingClass: this.options.toggleDraggingClass,\n            togglePressedClass: this.options.togglePressedClass,\n            snapOnRelease: this.options.snapOnRelease,\n            preventDefault: this.options.preventScroll\n          } : false,\n          speedEffect: this.options.speedEffect,\n          opacityEffect: this.options.opacityEffect\n        }\n      });\n    }\n  }, {\n    key: \"_onMouseEnter\",\n    value: function _onMouseEnter(event) {\n      var target = app.utilities.getLinkTarget(event);\n      if (target) {\n        this._toggleMarqueeAnimation(false);\n        this._highlightActiveElements(target, true);\n        this._animateImage(target);\n      }\n    }\n  }, {\n    key: \"_onMouseLeave\",\n    value: function _onMouseLeave(event) {\n      var target = app.utilities.getLinkTarget(event);\n      if (target) {\n        this._toggleMarqueeAnimation(true);\n        this._highlightActiveElements(target, false);\n        this._hideImages();\n      }\n    }\n  }, {\n    key: \"_onResize\",\n    value: function _onResize() {\n      if (!!this.curtains) {\n        this.curtains.instance.planes.forEach(function (plane, index) {\n          plane.scale.x = 1;\n          plane.scale.y = 1;\n          if (plane.textures.length) {\n            plane.textures.forEach(function (texture) {\n              texture.scale.x = 1;\n              texture.scale.y = 1;\n            });\n          }\n        });\n        this.curtains.instance.resize();\n      }\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      var _this5 = this;\n      app.hoverEffect.attachEvents(this.element, this._handlers.hoverIn, this._handlers.hoverOut);\n      if (!!this.options.onScrollRotatingButtonSpeed && this.rotatingButtons.length) {\n        this.infiniteListHeadings.controller.on('scrollUpdate', function (velocity, direction) {\n          var multiplier = _this5.clamp(velocity * 100) * _this5.options.onScrollRotatingButtonSpeed;\n          _this5.rotatingButtons.forEach(function (button) {\n            if (button.stScrub) {\n              button.stScrub.animation.timeScale(multiplier);\n            }\n          });\n        });\n      }\n      if (!!this.options.webGL) {\n        app.utilities.attachResponsiveResize({\n          callback: this._handlers.resize\n        });\n      }\n      if (!!this.options.drag) {\n        if (typeof this.options.drag.toggleClass === 'string') {\n          this.element.classList.add(this.options.drag.toggleClass);\n        }\n        this._attachDragListeners();\n      }\n      document.addEventListener('arts/barba/transition/start', this._detachEvents.bind(this), {\n        once: true\n      });\n      document.addEventListener('arts/barba/transition/start', this._unpinElements.bind(this), {\n        once: true\n      });\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      app.hoverEffect.detachEvents(this.element, this._handlers.hoverIn, this._handlers.hoverOut);\n    }\n  }, {\n    key: \"_attachDragListeners\",\n    value: function _attachDragListeners() {\n      var _this6 = this;\n      this.infiniteListHeadings.controller.on('dragPressed', function (pressed) {\n        _this6.updateRef('cursorRef', 'CursorFollower');\n        if (_this6.cursorRef) {\n          if (pressed) {\n            _this6.cursorRef.instance.set({\n              autoReset: false,\n              arrows: _this6.options.direction,\n              arrowsDistance: _this6.options.drag.arrowsDistance,\n              scale: _this6.options.drag.scale,\n              label: _this6.options.drag.label || '',\n              hideNative: _this6.options.drag.hideNative\n            });\n          } else {\n            _this6.cursorRef.instance.set({\n              autoReset: true\n            });\n            _this6.cursorRef.instance.reset();\n          }\n        }\n      });\n    }\n  }, {\n    key: \"_toggleMarqueeAnimation\",\n    value: function _toggleMarqueeAnimation() {\n      var enabled = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      if (!this.infiniteListHeadings.enabled) {\n        return;\n      }\n      if (!!this.options.marquee && 'marquee' in this.infiniteListHeadings.plugins) {\n        if (enabled) {\n          this.infiniteListHeadings.plugins.marquee.enable();\n        } else {\n          this.infiniteListHeadings.plugins.marquee.disable();\n        }\n      }\n    }\n  }, {\n    key: \"_highlightActiveElements\",\n    value: function _highlightActiveElements(link) {\n      var _this7 = this;\n      var enabled = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var ID = parseInt(link.getAttribute(\"\".concat(this.options.itemIdAttribute))),\n        elements = _toConsumableArray(this.element.querySelectorAll(\"[\".concat(this.options.itemIdAttribute, \"=\\\"\").concat(ID, \"\\\"]\")));\n      if (elements.length) {\n        elements.forEach(function (el) {\n          el.classList.toggle(\"\".concat(_this7.options.currentClass), enabled);\n        });\n      }\n    }\n  }, {\n    key: \"_animateImage\",\n    value: function _animateImage(link) {\n      var _this8 = this;\n      var ID = link.getAttribute(\"\".concat(this.options.itemIdAttribute));\n      this.tl.clear();\n      if (this.curtains && this.curtains.instance) {\n        this.curtains.instance.planes.forEach(function (plane) {\n          if (plane.userData && plane.userData.postId === ID) {\n            var animation = {\n              opacity: plane.uniforms.opacity.value\n            };\n\n            // Put the current plane in front\n            plane.setRenderOrder(1);\n            _this8.tl.to(animation, {\n              opacity: 1,\n              duration: 0.6,\n              ease: 'power3.inOut',\n              onStart: function onStart() {\n                plane.visible = true;\n              },\n              onUpdate: function onUpdate() {\n                plane.uniforms.opacity.value = animation.opacity;\n              }\n            }, 'start');\n          } else {\n            var _animation = {\n              opacity: plane.uniforms.opacity.value\n            };\n            plane.setRenderOrder(0);\n            _this8.tl.to(_animation, {\n              opacity: 0,\n              duration: 0.6,\n              ease: 'power3.inOut',\n              onComplete: function onComplete() {\n                plane.visible = false;\n              },\n              onUpdate: function onUpdate() {\n                plane.uniforms.opacity.value = _animation.opacity;\n              }\n            }, 'start');\n          }\n        });\n      } else {\n        this.elements.images.forEach(function (el) {\n          var img = el.querySelectorAll('img, video');\n          if (el.getAttribute(\"\".concat(_this8.options.itemIdAttribute)) === ID) {\n            _this8.tl.set(el, {\n              zIndex: 50\n            }, 'start').to(img, {\n              scale: 1,\n              transformOrigin: 'center bottom',\n              duration: 0.6,\n              ease: 'power3.inOut'\n            }, 'start').to(el, {\n              '--shape-size': 100,\n              duration: 0.6,\n              ease: 'power3.inOut'\n            }, 'start');\n          } else {\n            _this8.tl.set(el, {\n              clearProps: 'zIndex'\n            }, 'start').to(img, {\n              scale: 1.05,\n              transformOrigin: 'center bottom',\n              duration: 0.6,\n              ease: 'power3.inOut'\n            }, 'start').to(el, {\n              '--shape-size': 0,\n              duration: 0.6,\n              ease: 'power3.inOut',\n              clearProps: 'zIndex'\n            }, 'start');\n          }\n        });\n      }\n    }\n  }, {\n    key: \"_hideImages\",\n    value: function _hideImages() {\n      var _this9 = this;\n      this.tl.clear();\n      if (this.curtains && this.curtains.instance) {\n        this.curtains.instance.planes.forEach(function (plane) {\n          var animation = {\n            opacity: plane.uniforms.opacity.value\n          };\n          _this9.tl.to(animation, {\n            opacity: 0,\n            duration: 0.6,\n            ease: 'power3.inOut',\n            onComplete: function onComplete() {\n              plane.visible = false;\n            },\n            onUpdate: function onUpdate() {\n              plane.uniforms.opacity.value = animation.opacity;\n            }\n          }, 'start');\n        });\n      } else {\n        this.elements.images.forEach(function (el) {\n          var img = el.querySelectorAll('img, video');\n          _this9.tl.set(el, {\n            clearProps: 'zIndex'\n          }).to(img, {\n            scale: 1.05,\n            transformOrigin: 'center bottom',\n            duration: 0.6,\n            ease: 'power3.inOut'\n          }, 'start').to(el, {\n            '--shape-size': 0,\n            duration: 0.6,\n            ease: 'power3.inOut'\n          }, 'start');\n        });\n      }\n    }\n  }, {\n    key: \"_pinElements\",\n    value: function _pinElements() {\n      if (this.elements.fixedCanvasWrapper) {\n        this.triggerStickyCanvas = ScrollTrigger.create({\n          trigger: this.element,\n          pin: this.elements.fixedCanvasWrapper,\n          pinSpacing: false,\n          start: \"top top\",\n          end: \"bottom bottom\"\n          // onToggle: () => {\n          // \t// this.curtains.instance.updateScrollValues(0, window.scrollY);\n          // \tthis.curtains.instance.resize();\n          // }\n        });\n      }\n      if (this.elements.fixedWrapper) {\n        this.triggerStickyWrapper = ScrollTrigger.create({\n          trigger: this.element,\n          pin: this.elements.fixedWrapper,\n          start: \"top top\",\n          end: \"bottom bottom\"\n        });\n      }\n    }\n  }, {\n    key: \"_unpinElements\",\n    value: function _unpinElements() {\n      if (this.triggerStickyCanvas) {\n        this.triggerStickyCanvas.kill(false);\n        this.triggerStickyCanvas = null;\n      }\n      if (this.triggerStickyWrapper) {\n        this.triggerStickyWrapper.kill(false);\n        this.triggerStickyWrapper = null;\n      }\n    }\n\n    // WebGL methods\n  }, {\n    key: \"_initCurtains\",\n    value: function _initCurtains(module) {\n      var _this10 = this;\n      var AJAXRef = app.componentsManager.getComponentByName('AJAX');\n      var options = {\n        planes: {\n          widthSegments: 16,\n          heightSegments: 16,\n          uniforms: {\n            opacity: {\n              name: 'uOpacity',\n              type: '1f',\n              value: 0\n            }\n          },\n          vertexShader: this._vShaderPlane(),\n          fragmentShader: this._fShaderPlane()\n        },\n        itemIdAttribute: this.options.itemIdAttribute,\n        onContextLost: this._handlers.resize\n      };\n      if (_typeof(this.options.webGL) === 'object') {\n        options = deepmerge(this.options.webGL, options);\n        if (typeof this.options.webGL.vertices === 'number') {\n          options.planes.widthSegments = this.options.webGL.vertices;\n          options.planes.heightSegments = this.options.webGL.vertices;\n        }\n      }\n      this.curtains = new module[\"default\"]({\n        element: this.element,\n        container: this.elements.canvasWrapper[0],\n        lanes: [this.element],\n        options: options\n      });\n      this._setWebGLReady();\n      if (AJAXRef && AJAXRef.running) {\n        document.addEventListener('arts/barba/transition/end/before', function () {\n          if (_this10.curtains && _this10.curtains.instance) {\n            _this10.curtains.instance.resize();\n          }\n        }, {\n          once: true\n        });\n      }\n    }\n  }, {\n    key: \"_attachPlanesUpdateListeners\",\n    value: function _attachPlanesUpdateListeners() {\n      this.infiniteListHeadings.controller.on('visibleUpdate', this._handlers.updateVisible);\n      this.infiniteListHeadings.view.on('update', this._handlers.updateView);\n    }\n  }, {\n    key: \"_detachPlanesUpdateListeners\",\n    value: function _detachPlanesUpdateListeners() {\n      this.infiniteListHeadings.controller.off('visibleUpdate', this._handlers.updateVisible);\n      this.infiniteListHeadings.view.off('update', this._handlers.updateView);\n    }\n  }, {\n    key: \"_onUpdateView\",\n    value: function _onUpdateView(_ref2) {\n      var updatedItemState = _ref2.updatedItemState,\n        indexLane = _ref2.indexLane,\n        indexItem = _ref2.indexItem;\n      if (!this.curtains.planes[indexLane] || !this.curtains.planes[indexLane][indexItem]) {\n        return;\n      }\n      var plane = this.curtains.planes[indexLane][indexItem];\n      if (_typeof(plane.uniforms) !== 'object') {\n        return;\n      }\n      if (this.options.direction === 'horizontal') {\n        plane.uniforms.velocityX.value = this.infiniteListHeadings.controller.lanes[indexLane].scroller.velocity;\n        plane.uniforms.velocityY.value = 0;\n      } else {\n        plane.uniforms.velocityX.value = 0;\n        plane.uniforms.velocityY.value = this.infiniteListHeadings.controller.lanes[indexLane].scroller.velocity;\n      }\n      if ('visible' in updatedItemState) {\n        plane.visible = updatedItemState.visible;\n      }\n      if ('opacity' in updatedItemState && typeof updatedItemState.opacity === 'number') {\n        plane.uniforms.opacity.value = updatedItemState.opacity;\n      }\n      if ('transform' in updatedItemState) {\n        var transform = updatedItemState.transform;\n        if ('scale' in transform) {\n          plane.scale.x = transform.scale;\n          plane.scale.y = transform.scale;\n        }\n        if ('origin' in transform) {\n          if (transform.origin === 'left center') {\n            plane.transformOrigin.x = 0;\n            plane.transformOrigin.y = 0.5;\n            plane.transformOrigin.z = 0;\n          } else if (transform.origin === 'right center') {\n            plane.transformOrigin.x = 1;\n            plane.transformOrigin.y = 0.5;\n            plane.transformOrigin.z = 0;\n          } else {\n            plane.transformOrigin.x = 0.5;\n            plane.transformOrigin.y = 0.5;\n            plane.transformOrigin.z = 0;\n          }\n        }\n        if ('translate' in transform) {\n          if (_typeof(transform.translate) === 'object') {\n            plane.relativeTranslation.x = transform.translate.x;\n            plane.relativeTranslation.y = transform.translate.y;\n            plane.relativeTranslation.z = transform.translate.z;\n          }\n          if (typeof transform.translate === 'number') {\n            plane.relativeTranslation.x = transform.translate;\n          }\n        }\n        if ('rotate' in transform) {\n          if (_typeof(transform.rotate) === 'object') {\n            plane.rotation.x = -app.utilities.degrees2Radians(transform.rotate.x);\n            plane.rotation.y = -app.utilities.degrees2Radians(transform.rotate.y);\n            plane.rotation.z = -app.utilities.degrees2Radians(transform.rotate.z);\n          }\n          if (typeof transform.rotate === 'number') {\n            plane.rotation.z = -app.utilities.degrees2Radians(transform.rotate);\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_onUpdateVisible\",\n    value: function _onUpdateVisible(visible) {\n      if (this.curtains && this.curtains.instance) {\n        if (visible) {\n          this.curtains.instance.enableDrawing();\n        } else {\n          this.curtains.instance.disableDrawing();\n        }\n      }\n    }\n  }, {\n    key: \"_vShaderPlane\",\n    value: function _vShaderPlane() {\n      return \"\\n\\t\\t\\t#define PI 3.1415926535897932384626433832795\\n\\n\\t\\t\\tprecision mediump float;\\n\\n\\t\\t\\t// Default mandatory variables\\n\\t\\t\\tattribute vec3 aVertexPosition;\\n\\t\\t\\tattribute vec2 aTextureCoord;\\n\\n\\t\\t\\tuniform mat4 uMVMatrix;\\n\\t\\t\\tuniform mat4 uPMatrix;\\n\\n\\t\\t\\tuniform mat4 uTextureMatrix0;\\n\\t\\t\\tuniform vec2 uPlaneSizes;\\n\\n\\t\\t\\t// Custom variables\\n\\t\\t\\tvarying vec3 vVertexPosition;\\n\\t\\t\\tvarying vec2 vTextureCoord;\\n\\n\\t\\t\\t// Custom uniforms\\n\\t\\t\\tuniform vec2 uMousePosition;\\n\\t\\t\\tuniform vec2 uViewportSizes;\\n\\t\\t\\tuniform float uVelocityX;\\n\\t\\t\\tuniform float uVelocityY;\\n\\t\\t\\tuniform float uOpacity;\\n\\t\\t\\tuniform float uTime;\\n\\t\\t\\tuniform float uHoverAmplitude;\\n\\t\\t\\tuniform float uHoverSpeed;\\n\\t\\t\\tuniform float uHoverSegments;\\n\\t\\t\\tuniform float uHovered;\\n\\t\\t\\tuniform float uTransition;\\n\\t\\t\\tuniform float uElasticEffect;\\n\\n\\t\\t\\tvoid main() {\\n\\t\\t\\t\\tvec3 vertexPosition = aVertexPosition;\\n\\n\\t\\t\\t\\t// 1. Speed Effect\\n\\t\\t\\t\\t// vertexPosition.y -= sin(vertexPosition.x * 2. / (uViewportSizes.y) * PI + PI / 2.0) * uVelocityY * (uPlaneSizes.y / 2.) * uElasticEffect;\\n\\t\\t\\t\\t// vertexPosition.x += sin(vertexPosition.y * 2. / (uViewportSizes.x) * PI + PI / 2.0) * uVelocityX * (uPlaneSizes.x / 2.) * uElasticEffect;\\n\\n\\t\\t\\t\\t// 2. Hover Effect\\n\\t\\t\\t\\tvertexPosition.z += sin(vertexPosition.x * (uHoverSegments) + (uTime * 0.03) + uHoverSpeed) * uHoverAmplitude * 0.005;\\n\\t\\t\\t\\tvertexPosition.x += sin(vertexPosition.y * (uHoverSegments) + (uTime * 0.03) + uHoverSpeed) * uHoverAmplitude * 0.005;\\n\\n\\t\\t\\t\\t// 3. Transition\\n\\t\\t\\t\\t// convert uTransition from [0,1] to [0,1,0]\\n\\t\\t\\t\\tfloat transition = 1.0 - abs((uTransition * 2.0) - 1.0);\\n\\n\\t\\t\\t\\t// Get the distance between our vertex and the mouse position\\n\\t\\t\\t\\tfloat distanceFromMouse = distance(uMousePosition, vec2(vertexPosition.x, vertexPosition.y));\\n\\n\\t\\t\\t\\t// Calculate our wave effect\\n\\t\\t\\t\\tfloat waveSinusoid = cos(6. * (distanceFromMouse - (uTime * 0.02)));\\n\\n\\t\\t\\t\\t// Attenuate the effect based on mouse distance\\n\\t\\t\\t\\tfloat distanceStrength = (0.4 / (distanceFromMouse + 0.4));\\n\\n\\t\\t\\t\\t// Calculate our distortion effect\\n\\t\\t\\t\\tfloat distortionEffect = distanceStrength * waveSinusoid * 0.33;\\n\\n\\t\\t\\t\\t// Apply it to our vertex position\\n\\t\\t\\t\\tvertexPosition.z +=  distortionEffect * -transition;\\n\\t\\t\\t\\tvertexPosition.x +=  distortionEffect * transition * (uMousePosition.x - vertexPosition.x);\\n\\t\\t\\t\\tvertexPosition.y +=  distortionEffect * transition * (uMousePosition.y - vertexPosition.y);\\n\\n\\t\\t\\t\\tgl_Position = uPMatrix * uMVMatrix * vec4(vertexPosition, 1.0);\\n\\n\\t\\t\\t\\t// Varyings\\n\\t\\t\\t\\tvVertexPosition = vertexPosition;\\n\\t\\t\\t\\tvTextureCoord = (uTextureMatrix0 * vec4(aTextureCoord, 0.0, 1.0)).xy;\\n\\t\\t\\t}\\n\\t\\t\";\n    }\n  }, {\n    key: \"_fShaderPlane\",\n    value: function _fShaderPlane() {\n      return \"\\n\\t\\t\\tprecision mediump float;\\n\\n\\t\\t\\tvarying vec3 vVertexPosition;\\n\\t\\t\\tvarying vec2 vTextureCoord;\\n\\n\\t\\t\\tuniform float uOpacity;\\n\\t\\t\\tuniform float uTransition;\\n\\t\\t\\tuniform sampler2D uSampler0;\\n\\n\\t\\t\\tvoid main() {\\n\\t\\t\\t\\t// Apply texture\\n\\t\\t\\t\\tvec4 finalColor = texture2D(uSampler0, vTextureCoord);\\n\\n\\t\\t\\t\\t// Apply opacity\\n\\t\\t\\t\\tfinalColor.a = uOpacity;\\n\\n\\t\\t\\t\\t// Fake shadows based on vertex position along Z axis\\n\\t\\t\\t\\tfinalColor.rgb += clamp(vVertexPosition.z, -1.0, 0.0) * 0.75 * uTransition;\\n\\n\\t\\t\\t\\t// Fake lights based on vertex position along Z axis\\n\\t\\t\\t\\tfinalColor.rgb += clamp(vVertexPosition.z, 0.0, 1.0) * 0.75 * uTransition;\\n\\n\\t\\t\\t\\t// Display texture\\n\\t\\t\\t\\tgl_FragColor = finalColor;\\n\\t\\t\\t}\\n\\t\\t\";\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/MarqueeHeadingsHover.js\n");

/***/ }),

/***/ "./src/js/components/Mask.js":
/*!***********************************!*\
  !*** ./src/js/components/Mask.js ***!
  \***********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Mask)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Mask = /*#__PURE__*/function (_BaseComponent) {\n  function Mask(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, Mask);\n    _this = _callSuper(this, Mask, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        scaleX: 1,\n        scaleY: 1,\n        autoParentRelative: true,\n        clone: true,\n        color: 'var(--color-accent-dark-theme)'\n      },\n      // Component inner elements\n      innerElements: {\n        target: '.js-mask__target',\n        source: '.js-mask__source'\n      }\n    }]);\n    _this.rect = {\n      source: {\n        width: 0,\n        height: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      },\n      target: {\n        width: 0,\n        height: 0,\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    };\n    _this.props = {\n      offsetLeft: 0,\n      offsetTop: 0,\n      borderRadius: 0,\n      zIndex: 0\n    };\n    _this._handlers = {\n      updateMask: app.utilities.debounce(_this._updateMaskClipPath.bind(_this), app.utilities.getDebounceTime()),\n      repaintMask: _this._repaintMask.bind(_this)\n    };\n    _this.maskedEl;\n    _this.scaleX = _this.options.scaleX || 1;\n    _this.scaleY = _this.options.scaleY || 1;\n    _this.setup();\n    return _this;\n  }\n  _inherits(Mask, _BaseComponent);\n  return _createClass(Mask, [{\n    key: \"init\",\n    value: function init() {\n      if (this.elements.source[0] && this.elements.target[0]) {\n        this.updateRef('preloaderRef', 'Preloader');\n        if (!!this.options.clone) {\n          this._cloneTarget();\n        } else {\n          this.maskedEl = this.elements.target[0];\n        }\n        this._updateMaskClipPath();\n        this._attachEvents();\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this._detachEvents();\n      this._clean();\n    }\n  }, {\n    key: \"update\",\n    value: function update() {\n      this._updateMaskClipPath();\n    }\n  }, {\n    key: \"_attachEvents\",\n    value: function _attachEvents() {\n      this.resizeInstance = new ResizeObserver(this._handlers.updateMask);\n      this.resizeInstance.observe(this.element);\n      this.resizeInstance.observe(this.elements.source[0]);\n      if (this.parent && this.parent.element) {\n        this.parent.element.addEventListener('animation/update', this._handlers.repaintMask);\n        this.parent.element.addEventListener('animation/start', this._handlers.updateMask);\n      }\n      if (this.preloaderRef) {\n        this.preloaderRef.loaded.then(this._handlers.updateMask);\n      }\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      if (this.resizeInstance) {\n        this.resizeInstance.disconnect();\n        this.resizeInstance = null;\n      }\n      if (this.parent && this.parent.element) {\n        this.parent.element.removeEventListener('animation/update', this._handlers.repaintMask);\n        this.parent.element.removeEventListener('animation/start', this._handlers.updateMask);\n      }\n    }\n  }, {\n    key: \"_cloneTarget\",\n    value: function _cloneTarget() {\n      var parentEl = this.elements.target[0].parentElement,\n        commentNodeBefore = document.createComment(\" ### Mask Clone ### \"),\n        commentNodeAFter = document.createComment(\" ### - Mask Clone ### \");\n      this.destroySplitText();\n      this.maskedEl = this.elements.target[0].cloneNode(true);\n      this.maskedEl.classList.add('js-mask__clone');\n      this.maskedEl.classList.remove(this.innerSelectors.target.replace('.', ''));\n      this.maskedEl.style.position = 'absolute';\n      if (typeof this.options.color === 'string') {\n        this.maskedEl.style.color = this.options.color;\n        this.maskedEl.classList.add('js-mask__clone_has-color');\n      }\n      if (!!this.options.autoParentRelative) {\n        if (parentEl && window.getComputedStyle(parentEl).position !== 'relative') {\n          parentEl.style.position = 'relative';\n        }\n      }\n      this.elements.target[0].after(this.maskedEl);\n      this._initSplitText();\n      this.maskedEl.before(commentNodeBefore);\n      this.maskedEl.after(commentNodeAFter);\n    }\n  }, {\n    key: \"_updateMaskClipPath\",\n    value: function _updateMaskClipPath() {\n      this._clean();\n      this._updateRect();\n      this._updateProps();\n      this.setMask();\n    }\n  }, {\n    key: \"_updateProps\",\n    value: function _updateProps() {\n      Object.assign(this.props, {\n        offsetLeft: this.elements.target[0].offsetLeft,\n        offsetTop: this.elements.target[0].offsetTop,\n        borderRadiusPercent: gsap.getProperty(this.elements.source[0], 'borderRadius'),\n        borderRadiusPixels: gsap.getProperty(this.elements.source[0], 'borderRadius', 'px'),\n        zIndex: gsap.getProperty(this.elements.target[0], 'zIndex') + 1\n      });\n    }\n  }, {\n    key: \"_clean\",\n    value: function _clean() {\n      gsap.set(this.maskedEl, {\n        clearProps: 'top,left,width,height,margin,zIndex,pointerEvents,clipPath,transform'\n      });\n    }\n  }, {\n    key: \"_updateRect\",\n    value: function _updateRect() {\n      Object.assign(this.rect, {\n        target: this.elements.target[0].getBoundingClientRect(),\n        source: this.elements.source[0].getBoundingClientRect()\n      });\n    }\n  }, {\n    key: \"_repaintMask\",\n    value: function _repaintMask() {\n      if (this.maskedEl) {\n        var savedClipPath = this.maskedEl.style.clipPath;\n        this.maskedEl.style.clipPath = 'none';\n        this.maskedEl.offsetWidth;\n        this.maskedEl.style.clipPath = savedClipPath;\n      }\n    }\n  }, {\n    key: \"setMask\",\n    value: function setMask() {\n      var vars = {\n        position: 'absolute',\n        top: this.props.offsetTop,\n        left: this.props.offsetLeft,\n        width: this.rect.target.width,\n        height: this.rect.target.height,\n        margin: 0,\n        pointerEvents: 'none',\n        zIndex: this.props.zIndex\n      };\n      var radiusX = this.rect.source.width / 2,\n        radiusY = this.rect.source.height / 2;\n\n      // Oval shape\n      if (this.props.borderRadiusPercent === 100) {\n        var positionX = this.rect.source.left - this.rect.target.left + radiusX,\n          positionY = this.rect.source.top - this.rect.target.top + radiusY;\n        vars['clipPath'] = \"ellipse(\".concat(radiusX, \"px \").concat(radiusY, \"px at \").concat(positionX, \"px \").concat(positionY, \"px)\");\n      } else {\n        // Rectangle shape\n        var offsetX = radiusX - radiusX * this.scaleX,\n          offsetY = radiusY - radiusY * this.scaleY,\n          top = this.rect.source.top - this.rect.target.top + offsetY,\n          right = this.rect.target.right - this.rect.source.right + offsetX,\n          bottom = this.rect.target.bottom - this.rect.source.bottom + offsetY,\n          left = this.rect.source.left - this.rect.target.left + offsetX;\n        vars['clipPath'] = \"inset(\".concat(top, \"px \").concat(right, \"px \").concat(bottom, \"px \").concat(left, \"px round \").concat(this.props.borderRadiusPixels, \")\");\n      }\n      gsap.set(this.maskedEl, vars);\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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Q0gsSUFBSSxDQUFDRCxNQUFNLENBQUNJLEdBQUcsR0FBRyxJQUFJLENBQUNILElBQUksQ0FBQ0YsTUFBTSxDQUFDSyxHQUFHLEdBQUd3RixPQUFPO1VBQzNEdkYsS0FBSyxHQUFHLElBQUksQ0FBQ0osSUFBSSxDQUFDRixNQUFNLENBQUNNLEtBQUssR0FBRyxJQUFJLENBQUNKLElBQUksQ0FBQ0QsTUFBTSxDQUFDSyxLQUFLLEdBQUdzRixPQUFPO1VBQ2pFckYsTUFBTSxHQUFHLElBQUksQ0FBQ0wsSUFBSSxDQUFDRixNQUFNLENBQUNPLE1BQU0sR0FBRyxJQUFJLENBQUNMLElBQUksQ0FBQ0QsTUFBTSxDQUFDTSxNQUFNLEdBQUdzRixPQUFPO1VBQ3BFckYsSUFBSSxHQUFHLElBQUksQ0FBQ04sSUFBSSxDQUFDRCxNQUFNLENBQUNPLElBQUksR0FBRyxJQUFJLENBQUNOLElBQUksQ0FBQ0YsTUFBTSxDQUFDUSxJQUFJLEdBQUdvRixPQUFPO1FBRS9EUixJQUFJLENBQUMsVUFBVSxDQUFDLFlBQUFPLE1BQUEsQ0FBWXRGLEdBQUcsU0FBQXNGLE1BQUEsQ0FBTXJGLEtBQUssU0FBQXFGLE1BQUEsQ0FBTXBGLE1BQU0sU0FBQW9GLE1BQUEsQ0FBTW5GLElBQUksZUFBQW1GLE1BQUEsQ0FBWSxJQUFJLENBQUNsRixLQUFLLENBQUNvRSxrQkFBa0IsTUFBRztNQUM3RztNQUVBRixJQUFJLENBQUNHLEdBQUcsQ0FBQyxJQUFJLENBQUN0RCxRQUFRLEVBQUU0RCxJQUFJLENBQUM7SUFDOUI7RUFBQztBQUFBLEVBM05nQ1UsYUFBYSIsInNvdXJjZXMiOlsid2VicGFjazovL3RocmVlLXNoYWRlci1lbnYwMS8uL3NyYy9qcy9jb21wb25lbnRzL01hc2suanM/OGJiNyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgZGVmYXVsdCBjbGFzcyBNYXNrIGV4dGVuZHMgQmFzZUNvbXBvbmVudCB7XG5cdGNvbnN0cnVjdG9yKHtcblx0XHRuYW1lLFxuXHRcdGxvYWRJbm5lckNvbXBvbmVudHMsXG5cdFx0cGFyZW50LFxuXHRcdGVsZW1lbnQsXG5cdH0pIHtcblx0XHRzdXBlcih7XG5cdFx0XHRuYW1lLFxuXHRcdFx0bG9hZElubmVyQ29tcG9uZW50cyxcblx0XHRcdHBhcmVudCxcblx0XHRcdGVsZW1lbnQsXG5cdFx0XHQvLyBDb21wb25lbnQgZGVmYXVsdCBvcHRpb25zXG5cdFx0XHRkZWZhdWx0czoge1xuXHRcdFx0XHRzY2FsZVg6IDEsXG5cdFx0XHRcdHNjYWxlWTogMSxcblx0XHRcdFx0YXV0b1BhcmVudFJlbGF0aXZlOiB0cnVlLFxuXHRcdFx0XHRjbG9uZTogdHJ1ZSxcblx0XHRcdFx0Y29sb3I6ICd2YXIoLS1jb2xvci1hY2NlbnQtZGFyay10aGVtZSknXG5cdFx0XHR9LFxuXHRcdFx0Ly8gQ29tcG9uZW50IGlubmVyIGVsZW1lbnRzXG5cdFx0XHRpbm5lckVsZW1lbnRzOiB7XG5cdFx0XHRcdHRhcmdldDogJy5qcy1tYXNrX190YXJnZXQnLFxuXHRcdFx0XHRzb3VyY2U6ICcuanMtbWFza19fc291cmNlJ1xuXHRcdFx0fSxcblx0XHR9KTtcblxuXHRcdHRoaXMucmVjdCA9IHtcblx0XHRcdHNvdXJjZToge1xuXHRcdFx0XHR3aWR0aDogMCxcblx0XHRcdFx0aGVpZ2h0OiAwLFxuXHRcdFx0XHR0b3A6IDAsXG5cdFx0XHRcdHJpZ2h0OiAwLFxuXHRcdFx0XHRib3R0b206IDAsXG5cdFx0XHRcdGxlZnQ6IDAsXG5cdFx0XHR9LFxuXHRcdFx0dGFyZ2V0OiB7XG5cdFx0XHRcdHdpZHRoOiAwLFxuXHRcdFx0XHRoZWlnaHQ6IDAsXG5cdFx0XHRcdHRvcDogMCxcblx0XHRcdFx0cmlnaHQ6IDAsXG5cdFx0XHRcdGJvdHRvbTogMCxcblx0XHRcdFx0bGVmdDogMCxcblx0XHRcdH1cblx0XHR9O1xuXHRcdHRoaXMucHJvcHMgPSB7XG5cdFx0XHRvZmZzZXRMZWZ0OiAwLFxuXHRcdFx0b2Zmc2V0VG9wOiAwLFxuXHRcdFx0Ym9yZGVyUmFkaXVzOiAwLFxuXHRcdFx0ekluZGV4OiAwXG5cdFx0fTtcblx0XHR0aGlzLl9oYW5kbGVycyA9IHtcblx0XHRcdHVwZGF0ZU1hc2s6IGFwcC51dGlsaXRpZXMuZGVib3VuY2UodGhpcy5fdXBkYXRlTWFza0NsaXBQYXRoLmJpbmQodGhpcyksIGFwcC51dGlsaXRpZXMuZ2V0RGVib3VuY2VUaW1lKCkpLFxuXHRcdFx0cmVwYWludE1hc2s6IHRoaXMuX3JlcGFpbnRNYXNrLmJpbmQodGhpcylcblx0XHR9O1xuXG5cdFx0dGhpcy5tYXNrZWRFbDtcblx0XHR0aGlzLnNjYWxlWCA9IHRoaXMub3B0aW9ucy5zY2FsZVggfHwgMTtcblx0XHR0aGlzLnNjYWxlWSA9IHRoaXMub3B0aW9ucy5zY2FsZVkgfHwgMTtcblxuXHRcdHRoaXMuc2V0dXAoKTtcblx0fVxuXG5cdGluaXQoKSB7XG5cdFx0aWYgKHRoaXMuZWxlbWVudHMuc291cmNlWzBdICYmIHRoaXMuZWxlbWVudHMudGFyZ2V0WzBdKSB7XG5cdFx0XHR0aGlzLnVwZGF0ZVJlZigncHJlbG9hZGVyUmVmJywgJ1ByZWxvYWRlcicpO1xuXG5cdFx0XHRpZiAoISF0aGlzLm9wdGlvbnMuY2xvbmUpIHtcblx0XHRcdFx0dGhpcy5fY2xvbmVUYXJnZXQoKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHRoaXMubWFza2VkRWwgPSB0aGlzLmVsZW1lbnRzLnRhcmdldFswXTtcblx0XHRcdH1cblxuXHRcdFx0dGhpcy5fdXBkYXRlTWFza0NsaXBQYXRoKCk7XG5cdFx0XHR0aGlzLl9hdHRhY2hFdmVudHMoKTtcblx0XHR9XG5cdH1cblxuXHRkZXN0cm95KCkge1xuXHRcdHRoaXMuX2RldGFjaEV2ZW50cygpO1xuXHRcdHRoaXMuX2NsZWFuKCk7XG5cdH1cblxuXHR1cGRhdGUoKSB7XG5cdFx0dGhpcy5fdXBkYXRlTWFza0NsaXBQYXRoKCk7XG5cdH1cblxuXHRfYXR0YWNoRXZlbnRzKCkge1xuXHRcdHRoaXMucmVzaXplSW5zdGFuY2UgPSBuZXcgUmVzaXplT2JzZXJ2ZXIodGhpcy5faGFuZGxlcnMudXBkYXRlTWFzayk7XG5cdFx0dGhpcy5yZXNpemVJbnN0YW5jZS5vYnNlcnZlKHRoaXMuZWxlbWVudCk7XG5cdFx0dGhpcy5yZXNpemVJbnN0YW5jZS5vYnNlcnZlKHRoaXMuZWxlbWVudHMuc291cmNlWzBdKTtcblxuXHRcdGlmICh0aGlzLnBhcmVudCAmJiB0aGlzLnBhcmVudC5lbGVtZW50KSB7XG5cdFx0XHR0aGlzLnBhcmVudC5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbi91cGRhdGUnLCB0aGlzLl9oYW5kbGVycy5yZXBhaW50TWFzayk7XG5cdFx0XHR0aGlzLnBhcmVudC5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2FuaW1hdGlvbi9zdGFydCcsIHRoaXMuX2hhbmRsZXJzLnVwZGF0ZU1hc2spO1xuXHRcdH1cblxuXHRcdGlmICh0aGlzLnByZWxvYWRlclJlZikge1xuXHRcdFx0dGhpcy5wcmVsb2FkZXJSZWYubG9hZGVkLnRoZW4odGhpcy5faGFuZGxlcnMudXBkYXRlTWFzayk7XG5cdFx0fVxuXHR9XG5cblx0X2RldGFjaEV2ZW50cygpIHtcblx0XHRpZiAodGhpcy5yZXNpemVJbnN0YW5jZSkge1xuXHRcdFx0dGhpcy5yZXNpemVJbnN0YW5jZS5kaXNjb25uZWN0KCk7XG5cdFx0XHR0aGlzLnJlc2l6ZUluc3RhbmNlID0gbnVsbDtcblx0XHR9XG5cblx0XHRpZiAodGhpcy5wYXJlbnQgJiYgdGhpcy5wYXJlbnQuZWxlbWVudCkge1xuXHRcdFx0dGhpcy5wYXJlbnQuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdhbmltYXRpb24vdXBkYXRlJywgdGhpcy5faGFuZGxlcnMucmVwYWludE1hc2spO1xuXHRcdFx0dGhpcy5wYXJlbnQuZWxlbWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdhbmltYXRpb24vc3RhcnQnLCB0aGlzLl9oYW5kbGVycy51cGRhdGVNYXNrKTtcblx0XHR9XG5cdH1cblxuXHRfY2xvbmVUYXJnZXQoKSB7XG5cdFx0Y29uc3Rcblx0XHRcdHBhcmVudEVsID0gdGhpcy5lbGVtZW50cy50YXJnZXRbMF0ucGFyZW50RWxlbWVudCxcblx0XHRcdGNvbW1lbnROb2RlQmVmb3JlID0gZG9jdW1lbnQuY3JlYXRlQ29tbWVudChgICMjIyBNYXNrIENsb25lICMjIyBgKSxcblx0XHRcdGNvbW1lbnROb2RlQUZ0ZXIgPSBkb2N1bWVudC5jcmVhdGVDb21tZW50KGAgIyMjIC0gTWFzayBDbG9uZSAjIyMgYCk7XG5cblx0XHR0aGlzLmRlc3Ryb3lTcGxpdFRleHQoKTtcblx0XHR0aGlzLm1hc2tlZEVsID0gdGhpcy5lbGVtZW50cy50YXJnZXRbMF0uY2xvbmVOb2RlKHRydWUpO1xuXHRcdHRoaXMubWFza2VkRWwuY2xhc3NMaXN0LmFkZCgnanMtbWFza19fY2xvbmUnKTtcblx0XHR0aGlzLm1hc2tlZEVsLmNsYXNzTGlzdC5yZW1vdmUodGhpcy5pbm5lclNlbGVjdG9ycy50YXJnZXQucmVwbGFjZSgnLicsICcnKSk7XG5cdFx0dGhpcy5tYXNrZWRFbC5zdHlsZS5wb3NpdGlvbiA9ICdhYnNvbHV0ZSc7XG5cblx0XHRpZiAodHlwZW9mIHRoaXMub3B0aW9ucy5jb2xvciA9PT0gJ3N0cmluZycpIHtcblx0XHRcdHRoaXMubWFza2VkRWwuc3R5bGUuY29sb3IgPSB0aGlzLm9wdGlvbnMuY29sb3I7XG5cdFx0XHR0aGlzLm1hc2tlZEVsLmNsYXNzTGlzdC5hZGQoJ2pzLW1hc2tfX2Nsb25lX2hhcy1jb2xvcicpO1xuXHRcdH1cblxuXHRcdGlmICghIXRoaXMub3B0aW9ucy5hdXRvUGFyZW50UmVsYXRpdmUpIHtcblx0XHRcdGlmIChwYXJlbnRFbCAmJiB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZShwYXJlbnRFbCkucG9zaXRpb24gIT09ICdyZWxhdGl2ZScpIHtcblx0XHRcdFx0cGFyZW50RWwuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHRoaXMuZWxlbWVudHMudGFyZ2V0WzBdLmFmdGVyKHRoaXMubWFza2VkRWwpO1xuXHRcdHRoaXMuX2luaXRTcGxpdFRleHQoKTtcblx0XHR0aGlzLm1hc2tlZEVsLmJlZm9yZShjb21tZW50Tm9kZUJlZm9yZSk7XG5cdFx0dGhpcy5tYXNrZWRFbC5hZnRlcihjb21tZW50Tm9kZUFGdGVyKTtcblx0fVxuXG5cdF91cGRhdGVNYXNrQ2xpcFBhdGgoKSB7XG5cdFx0dGhpcy5fY2xlYW4oKTtcblx0XHR0aGlzLl91cGRhdGVSZWN0KCk7XG5cdFx0dGhpcy5fdXBkYXRlUHJvcHMoKTtcblx0XHR0aGlzLnNldE1hc2soKTtcblx0fVxuXG5cdF91cGRhdGVQcm9wcygpIHtcblx0XHRPYmplY3QuYXNzaWduKHRoaXMucHJvcHMsIHtcblx0XHRcdG9mZnNldExlZnQ6IHRoaXMuZWxlbWVudHMudGFyZ2V0WzBdLm9mZnNldExlZnQsXG5cdFx0XHRvZmZzZXRUb3A6IHRoaXMuZWxlbWVudHMudGFyZ2V0WzBdLm9mZnNldFRvcCxcblx0XHRcdGJvcmRlclJhZGl1c1BlcmNlbnQ6IGdzYXAuZ2V0UHJvcGVydHkodGhpcy5lbGVtZW50cy5zb3VyY2VbMF0sICdib3JkZXJSYWRpdXMnKSxcblx0XHRcdGJvcmRlclJhZGl1c1BpeGVsczogZ3NhcC5nZXRQcm9wZXJ0eSh0aGlzLmVsZW1lbnRzLnNvdXJjZVswXSwgJ2JvcmRlclJhZGl1cycsICdweCcpLFxuXHRcdFx0ekluZGV4OiBnc2FwLmdldFByb3BlcnR5KHRoaXMuZWxlbWVudHMudGFyZ2V0WzBdLCAnekluZGV4JykgKyAxLFxuXHRcdH0pO1xuXHR9XG5cblx0X2NsZWFuKCkge1xuXHRcdGdzYXAuc2V0KHRoaXMubWFza2VkRWwsIHtcblx0XHRcdGNsZWFyUHJvcHM6ICd0b3AsbGVmdCx3aWR0aCxoZWlnaHQsbWFyZ2luLHpJbmRleCxwb2ludGVyRXZlbnRzLGNsaXBQYXRoLHRyYW5zZm9ybSdcblx0XHR9KTtcblx0fVxuXG5cdF91cGRhdGVSZWN0KCkge1xuXHRcdE9iamVjdC5hc3NpZ24odGhpcy5yZWN0LCB7XG5cdFx0XHR0YXJnZXQ6IHRoaXMuZWxlbWVudHMudGFyZ2V0WzBdLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLFxuXHRcdFx0c291cmNlOiB0aGlzLmVsZW1lbnRzLnNvdXJjZVswXS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuXHRcdH0pO1xuXHR9XG5cblx0X3JlcGFpbnRNYXNrKCkge1xuXHRcdGlmICh0aGlzLm1hc2tlZEVsKSB7XG5cdFx0XHRjb25zdCBzYXZlZENsaXBQYXRoID0gdGhpcy5tYXNrZWRFbC5zdHlsZS5jbGlwUGF0aDtcblxuXHRcdFx0dGhpcy5tYXNrZWRFbC5zdHlsZS5jbGlwUGF0aCA9ICdub25lJztcblx0XHRcdHRoaXMubWFza2VkRWwub2Zmc2V0V2lkdGg7XG5cdFx0XHR0aGlzLm1hc2tlZEVsLnN0eWxlLmNsaXBQYXRoID0gc2F2ZWRDbGlwUGF0aDtcblx0XHR9XG5cdH1cblxuXHRzZXRNYXNrKCkge1xuXHRcdGxldCB2YXJzID0ge1xuXHRcdFx0cG9zaXRpb246ICdhYnNvbHV0ZScsXG5cdFx0XHR0b3A6IHRoaXMucHJvcHMub2Zmc2V0VG9wLFxuXHRcdFx0bGVmdDogdGhpcy5wcm9wcy5vZmZzZXRMZWZ0LFxuXHRcdFx0d2lkdGg6IHRoaXMucmVjdC50YXJnZXQud2lkdGgsXG5cdFx0XHRoZWlnaHQ6IHRoaXMucmVjdC50YXJnZXQuaGVpZ2h0LFxuXHRcdFx0bWFyZ2luOiAwLFxuXHRcdFx0cG9pbnRlckV2ZW50czogJ25vbmUnLFxuXHRcdFx0ekluZGV4OiB0aGlzLnByb3BzLnpJbmRleFxuXHRcdH07XG5cblx0XHRjb25zdFxuXHRcdFx0cmFkaXVzWCA9IHRoaXMucmVjdC5zb3VyY2Uud2lkdGggLyAyLFxuXHRcdFx0cmFkaXVzWSA9IHRoaXMucmVjdC5zb3VyY2UuaGVpZ2h0IC8gMjtcblxuXHRcdC8vIE92YWwgc2hhcGVcblx0XHRpZiAodGhpcy5wcm9wcy5ib3JkZXJSYWRpdXNQZXJjZW50ID09PSAxMDApIHtcblx0XHRcdGNvbnN0XG5cdFx0XHRcdHBvc2l0aW9uWCA9IHRoaXMucmVjdC5zb3VyY2UubGVmdCAtIHRoaXMucmVjdC50YXJnZXQubGVmdCArIHJhZGl1c1gsXG5cdFx0XHRcdHBvc2l0aW9uWSA9IHRoaXMucmVjdC5zb3VyY2UudG9wIC0gdGhpcy5yZWN0LnRhcmdldC50b3AgKyByYWRpdXNZO1xuXG5cdFx0XHR2YXJzWydjbGlwUGF0aCddID0gYGVsbGlwc2UoJHtyYWRpdXNYfXB4ICR7cmFkaXVzWX1weCBhdCAke3Bvc2l0aW9uWH1weCAke3Bvc2l0aW9uWX1weClgO1xuXHRcdH0gZWxzZSB7IC8vIFJlY3RhbmdsZSBzaGFwZVxuXHRcdFx0Y29uc3Rcblx0XHRcdFx0b2Zmc2V0WCA9IHJhZGl1c1ggLSByYWRpdXNYICogdGhpcy5zY2FsZVgsXG5cdFx0XHRcdG9mZnNldFkgPSByYWRpdXNZIC0gcmFkaXVzWSAqIHRoaXMuc2NhbGVZLFxuXHRcdFx0XHR0b3AgPSB0aGlzLnJlY3Quc291cmNlLnRvcCAtIHRoaXMucmVjdC50YXJnZXQudG9wICsgb2Zmc2V0WSxcblx0XHRcdFx0cmlnaHQgPSB0aGlzLnJlY3QudGFyZ2V0LnJpZ2h0IC0gdGhpcy5yZWN0LnNvdXJjZS5yaWdodCArIG9mZnNldFgsXG5cdFx0XHRcdGJvdHRvbSA9IHRoaXMucmVjdC50YXJnZXQuYm90dG9tIC0gdGhpcy5yZWN0LnNvdXJjZS5ib3R0b20gKyBvZmZzZXRZLFxuXHRcdFx0XHRsZWZ0ID0gdGhpcy5yZWN0LnNvdXJjZS5sZWZ0IC0gdGhpcy5yZWN0LnRhcmdldC5sZWZ0ICsgb2Zmc2V0WDtcblxuXHRcdFx0dmFyc1snY2xpcFBhdGgnXSA9IGBpbnNldCgke3RvcH1weCAke3JpZ2h0fXB4ICR7Ym90dG9tfXB4ICR7bGVmdH1weCByb3VuZCAke3RoaXMucHJvcHMuYm9yZGVyUmFkaXVzUGl4ZWxzfSlgO1xuXHRcdH1cblxuXHRcdGdzYXAuc2V0KHRoaXMubWFza2VkRWwsIHZhcnMpO1xuXHR9XG59XG4iXSwibmFtZXMiOlsiTWFzayIsIl9CYXNlQ29tcG9uZW50IiwiX3JlZiIsIl90aGlzIiwibmFtZSIsImxvYWRJbm5lckNvbXBvbmVudHMiLCJwYXJlbnQiLCJlbGVtZW50IiwiX2NsYXNzQ2FsbENoZWNrIiwiX2NhbGxTdXBlciIsImRlZmF1bHRzIiwic2NhbGVYIiwic2NhbGVZIiwiYXV0b1BhcmVudFJlbGF0aXZlIiwiY2xvbmUiLCJjb2xvciIsImlubmVyRWxlbWVudHMiLCJ0YXJnZXQiLCJzb3VyY2UiLCJyZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJ0b3AiLCJyaWdodCIsImJvdHRvbSIsImxlZnQiLCJwcm9wcyIsIm9mZnNldExlZnQiLCJvZmZzZXRUb3AiLCJib3JkZXJSYWRpdXMiLCJ6SW5kZXgiLCJfaGFuZGxlcnMiLCJ1cGRhdGVNYXNrIiwiYXBwIiwidXRpbGl0aWVzIiwiZGVib3VuY2UiLCJfdXBkYXRlTWFza0NsaXBQYXRoIiwiYmluZCIsImdldERlYm91bmNlVGltZSIsInJlcGFpbnRNYXNrIiwiX3JlcGFpbnRNYXNrIiwibWFza2VkRWwiLCJvcHRpb25zIiwic2V0dXAiLCJfaW5oZXJpdHMiLCJfY3JlYXRlQ2xhc3MiLCJrZXkiLCJ2YWx1ZSIsImluaXQiLCJlbGVtZW50cyIsInVwZGF0ZVJlZiIsIl9jbG9uZVRhcmdldCIsIl9hdHRhY2hFdmVudHMiLCJkZXN0cm95IiwiX2RldGFjaEV2ZW50cyIsIl9jbGVhbiIsInVwZGF0ZSIsInJlc2l6ZUluc3RhbmNlIiwiUmVzaXplT2JzZXJ2ZXIiLCJvYnNlcnZlIiwiYWRkRXZlbnRMaXN0ZW5lciIsInByZWxvYWRlclJlZiIsImxvYWRlZCIsInRoZW4iLCJkaXNjb25uZWN0IiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInBhcmVudEVsIiwicGFyZW50RWxlbWVudCIsImNvbW1lbnROb2RlQmVmb3JlIiwiZG9jdW1lbnQiLCJjcmVhdGVDb21tZW50IiwiY29tbWVudE5vZGVBRnRlciIsImRlc3Ryb3lTcGxpdFRleHQiLCJjbG9uZU5vZGUiLCJjbGFzc0xpc3QiLCJhZGQiLCJyZW1vdmUiLCJpbm5lclNlbGVjdG9ycyIsInJlcGxhY2UiLCJzdHlsZSIsInBvc2l0aW9uIiwid2luZG93IiwiZ2V0Q29tcHV0ZWRTdHlsZSIsImFmdGVyIiwiX2luaXRTcGxpdFRleHQiLCJiZWZvcmUiLCJfdXBkYXRlUmVjdCIsIl91cGRhdGVQcm9wcyIsInNldE1hc2siLCJPYmplY3QiLCJhc3NpZ24iLCJib3JkZXJSYWRpdXNQZXJjZW50IiwiZ3NhcCIsImdldFByb3BlcnR5IiwiYm9yZGVyUmFkaXVzUGl4ZWxzIiwic2V0IiwiY2xlYXJQcm9wcyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInNhdmVkQ2xpcFBhdGgiLCJjbGlwUGF0aCIsIm9mZnNldFdpZHRoIiwidmFycyIsIm1hcmdpbiIsInBvaW50ZXJFdmVudHMiLCJyYWRpdXNYIiwicmFkaXVzWSIsInBvc2l0aW9uWCIsInBvc2l0aW9uWSIsImNvbmNhdCIsIm9mZnNldFgiLCJvZmZzZXRZIiwiQmFzZUNvbXBvbmVudCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/js/components/Mask.js\n");

/***/ }),

/***/ "./src/js/components/Masthead.js":
/*!***************************************!*\
  !*** ./src/js/components/Masthead.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ Masthead)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar Masthead = /*#__PURE__*/function (_BaseComponent) {\n  function Masthead(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, Masthead);\n    _this = _callSuper(this, Masthead, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        fixed: false\n      },\n      // Component inner elements\n      innerElements: {\n        fixedWrapper: '.js-masthead__fixed-wrapper',\n        fixedFeaturedMedia: '.js-masthead__fixed-featured-media',\n        fixedContent: '.js-masthead__fixed-content',\n        fixedScrollDown: '.js-masthead__fixed-scroll-down',\n        animationMask: '.js-masthead__animation-mask',\n        animationScale: '.js-masthead__animation-scale',\n        animationFade: '.js-masthead__animation-fade'\n      }\n    }]);\n    _this.setup();\n    return _this;\n  }\n  _inherits(Masthead, _BaseComponent);\n  return _createClass(Masthead, [{\n    key: \"init\",\n    value: function init() {\n      var _this2 = this;\n      if (!!this.options.fixed) {\n        var mq = typeof this.options.fixed.matchMedia === 'string' ? this.options.fixed.matchMedia : 'all';\n        var AJAX = app.componentsManager.getComponentByName('AJAX');\n        this.mm = gsap.matchMedia();\n        if (AJAX && AJAX.running) {\n          document.addEventListener('arts/barba/transition/end', function () {\n            _this2.mm.add(mq, function () {\n              _this2._createFixedScene();\n            });\n          }, {\n            once: true\n          });\n        } else {\n          this.mm.add(mq, function () {\n            _this2._createFixedScene();\n          });\n        }\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.fixedScene && typeof this.fixedScene.kill === 'function') {\n        this.fixedScene.kill();\n      }\n      if (this.fixedAnimation && typeof this.fixedAnimation.kill === 'function') {\n        this.fixedAnimation.kill();\n      }\n      if (this.mm && typeof this.mm.kill === 'function') {\n        this.mm.kill();\n      }\n    }\n  }, {\n    key: \"prepareAnimation\",\n    value: function prepareAnimation() {\n      var _this3 = this;\n      return new Promise(function (resolve) {\n        var tl = gsap.timeline({\n          onComplete: function onComplete() {\n            return resolve(true);\n          }\n        });\n        if (_this3.elements.animationFade.length) {\n          _this3.elements.animationFade.forEach(function (el) {\n            tl.set(el, {\n              autoAlpha: 0\n            });\n          });\n        }\n        if (_this3.elements.animationMask.length) {\n          _this3.elements.animationMask.forEach(function (el) {\n            if (_this3._shouldAnimateMask(el)) {\n              tl.hideMask(el, {\n                clearProps: '',\n                duration: 0,\n                animateTo: 'top',\n                scaleInner: false\n              });\n            }\n          });\n        }\n        if (_this3.elements.animationScale.length) {\n          tl.set(_this3.elements.animationScale, {\n            scale: 0,\n            transformOrigin: 'center center'\n          });\n        }\n      });\n    }\n  }, {\n    key: \"getRevealAnimation\",\n    value: function getRevealAnimation() {\n      var _this4 = this;\n      var tl = gsap.timeline({\n        paused: true\n      });\n      if (this.elements.animationMask.length) {\n        this.elements.animationMask.forEach(function (el, index) {\n          if (_this4._shouldAnimateMask(el)) {\n            tl.animateMask(el, {\n              animateFrom: 'top',\n              duration: 1.2,\n              ease: 'expo.inOut',\n              scaleInner: '.js-masthead__animation-mask-wrapper',\n              scale: 1.1\n            }, '<');\n          }\n        });\n      }\n      if (this.elements.animationFade.length) {\n        this.elements.animationFade.forEach(function (el, index) {\n          tl.to(el, {\n            autoAlpha: 1,\n            duration: 1.2,\n            clearProps: 'opacity,visibility',\n            ease: 'power3.out'\n          }, '<');\n        });\n      }\n      if (this.elements.animationScale.length) {\n        this.elements.animationScale.forEach(function (el, index) {\n          tl.animateScale(el, {\n            ease: 'power3.out',\n            duration: 1.2,\n            animateFrom: 'center'\n          }, '<');\n        });\n      }\n      return tl;\n    }\n  }, {\n    key: \"_shouldAnimateMask\",\n    value: function _shouldAnimateMask(el) {\n      var AJAXRef = app.componentsManager.getComponentByName('AJAX');\n      if (AJAXRef) {\n        var runningSeamlessTransition = !!AJAXRef.runningSeamlessTransition;\n        if (runningSeamlessTransition && el.closest('.js-ajax-transition-element')) {\n          return false;\n        } else {\n          return true;\n        }\n      } else {\n        return true;\n      }\n    }\n  }, {\n    key: \"_createFixedScene\",\n    value: function _createFixedScene() {\n      var _this5 = this;\n      var animation = this._getFixedAnimation(),\n        pageFooter = document.getElementById('page-footer'),\n        endTrigger = pageFooter ? pageFooter : undefined,\n        end = pageFooter ? \"top bottom\" : function () {\n          return _this5._getFixedScrollingDistance();\n        };\n      this.fixedScene = ScrollTrigger.create({\n        trigger: this.element,\n        start: \"top top\",\n        end: end,\n        endTrigger: endTrigger,\n        pin: true,\n        pinSpacing: false,\n        invalidateOnRefresh: true,\n        scrub: true\n      });\n      this.fixedAnimation = ScrollTrigger.create({\n        trigger: document.documentElement,\n        start: function start() {\n          return \"top top\";\n        },\n        end: function end() {\n          return \"\".concat(_this5.element.offsetTop + _this5.element.offsetHeight * 1.5, \" bottom\");\n        },\n        animation: animation,\n        invalidateOnRefresh: true,\n        scrub: true\n      });\n    }\n  }, {\n    key: \"_getFixedAnimation\",\n    value: function _getFixedAnimation() {\n      var tl = gsap.timeline({\n          paused: true\n        }),\n        y = typeof this.options.fixed.offset === 'string' ? \"\".concat(this.options.fixed.offset) : '0%',\n        yNegative = typeof this.options.fixed.offset === 'string' ? \"-\".concat(this.options.fixed.offset) : '0%';\n      if (this.elements.fixedScrollDown[0]) {\n        tl.fromTo(this.elements.fixedScrollDown[0], {\n          autoAlpha: 1\n        }, {\n          autoAlpha: 0\n        }, 'start');\n      }\n      if (this.elements.fixedContent[0]) {\n        tl.fromTo(this.elements.fixedContent[0], {\n          autoAlpha: 1\n        }, {\n          autoAlpha: 0\n        }, 'start');\n      }\n      if (this.elements.fixedWrapper[0]) {\n        tl.fromTo(this.elements.fixedWrapper[0], {\n          y: '0%'\n        }, {\n          y: yNegative\n        }, 'start');\n      }\n      if (this.elements.fixedFeaturedMedia[0]) {\n        var scale = typeof this.options.fixed.scale === 'number' ? this.options.fixed.scale : 1,\n          autoAlpha = typeof this.options.fixed.opacity === 'number' ? this.options.fixed.opacity : 0,\n          media = this.elements.fixedFeaturedMedia[0].querySelectorAll('img, video');\n        tl.fromTo(media || this.elements.fixedFeaturedMedia[0], {\n          y: '0%',\n          scale: 1,\n          autoAlpha: 1\n        }, {\n          y: y,\n          scale: scale,\n          autoAlpha: autoAlpha,\n          transformOrigin: 'center center'\n        }, 'start');\n      }\n      return tl;\n    }\n  }, {\n    key: \"_getFixedScrollingDistance\",\n    value: function _getFixedScrollingDistance() {\n      return Math.max(document.body.scrollHeight, document.documentElement.scrollHeight, document.body.offsetHeight, document.documentElement.offsetHeight, document.body.clientHeight, document.documentElement.clientHeight) - window.innerHeight;\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/Masthead.js\n");

/***/ }),

/***/ "./src/js/components/MenuClassic.js":
/*!******************************************!*\
  !*** ./src/js/components/MenuClassic.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MenuClassic)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar MenuClassic = /*#__PURE__*/function (_BaseComponent) {\n  function MenuClassic(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, MenuClassic);\n    _this = _callSuper(this, MenuClassic, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      defaults: {\n        hoverDrawEffect: true\n      },\n      innerElements: {\n        topLevelElements: ':scope > li',\n        topLevelLinks: ':scope > li:not(.menu-item-has-children) > a',\n        topLevelCurrentElement: ':scope > li.current-menu-item:not(.menu-item-has-children)',\n        topLevelCurrentLink: ':scope > li.current-menu-item:not(.menu-item-has-children) > a'\n      }\n    }]);\n    _this._handlers = {\n      hoverIn: _this._onMouseEnter.bind(_this),\n      hoverOut: _this._onMouseLeave.bind(_this),\n      click: _this._onClick.bind(_this),\n      classChange: _this._onClassChange.bind(_this)\n    };\n    _this.shapes = [];\n    _this.tl = gsap.timeline({\n      defaults: {\n        ease: 'power2.inOut',\n        duration: 0.6\n      }\n    });\n    _this.setup();\n    return _this;\n  }\n  _inherits(MenuClassic, _BaseComponent);\n  return _createClass(MenuClassic, [{\n    key: \"init\",\n    value: function init() {\n      if (!!this.options.hoverDrawEffect) {\n        this._setHoverDrawEffect();\n        this._observeChanges();\n      }\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (!!this.options.hoverDrawEffect) {\n        this.tl.clear();\n        this._detachEvents();\n        this._removeShapes();\n        this._unObserveChanges();\n      }\n    }\n  }, {\n    key: \"_setHoverDrawEffect\",\n    value: function _setHoverDrawEffect() {\n      var _this2 = this;\n      this.elements.topLevelLinks.forEach(function (el) {\n        _this2.shapes.push(_this2._addSVGShape(el));\n        // draw current item\n        var shouldDraw = _this2.elements.topLevelCurrentLink[0] && el === _this2.elements.topLevelCurrentLink[0] ? true : false;\n        _this2._setEllipse(el, shouldDraw);\n        app.hoverEffect.attachEvents(el, _this2._handlers.hoverIn, _this2._handlers.hoverOut);\n        el.addEventListener('click', _this2._handlers.click, true);\n      });\n    }\n  }, {\n    key: \"_addSVGShape\",\n    value: function _addSVGShape(el) {\n      if (el && typeof app.options.circleTemplate === 'string') {\n        return el.insertAdjacentHTML('beforeend', app.options.circleTemplate);\n      }\n    }\n  }, {\n    key: \"_setEllipse\",\n    value: function _setEllipse(element) {\n      var drawn = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (element) {\n        var ellipse = element.querySelector('ellipse');\n        if (ellipse) {\n          gsap.set(ellipse, {\n            drawSVG: drawn ? '100%' : '0%'\n          });\n        }\n      }\n    }\n  }, {\n    key: \"_onMouseEnter\",\n    value: function _onMouseEnter(event) {\n      var target = event.target;\n      if (target instanceof HTMLElement) {\n        var link = target.closest('a');\n        if (link) {\n          var otherEllipses = [],\n            currentEllipse = event.target.querySelector('ellipse');\n          this.tl.clear();\n          this.elements.topLevelLinks.forEach(function (element) {\n            if (event.target !== element) {\n              var ellipse = element.querySelector('ellipse');\n              if (ellipse) {\n                otherEllipses.push(ellipse);\n              }\n            }\n          });\n          if (currentEllipse) {\n            this.tl.to(currentEllipse, {\n              drawSVG: '100% 0%'\n            }, 'start');\n          }\n          if (otherEllipses.length) {\n            this.tl.to(otherEllipses, {\n              drawSVG: '100% 100%'\n            }, 'start');\n          }\n        }\n      }\n    }\n  }, {\n    key: \"_onClick\",\n    value: function _onClick(event) {\n      if (app.utilities.shouldPreventLinkClick(event)) {\n        return;\n      }\n      event.target.closest('li').classList.add('current-menu-item');\n    }\n  }, {\n    key: \"_onMouseLeave\",\n    value: function _onMouseLeave() {\n      var _this3 = this;\n      var otherEllipses = [];\n      this.elements.topLevelLinks.filter(function (element) {\n        return element !== _this3.elements.topLevelCurrentLink[0];\n      }).forEach(function (element) {\n        var ellipse = element.querySelector('ellipse');\n        if (ellipse) {\n          otherEllipses.push(ellipse);\n        }\n      });\n      this.tl.clear();\n      if (this.elements.topLevelCurrentLink[0]) {\n        var currentEllipse = this.elements.topLevelCurrentLink[0].querySelector('ellipse');\n        this.tl.to(currentEllipse, {\n          drawSVG: '100% 0%'\n        }, 'start');\n      }\n      if (otherEllipses.length) {\n        this.tl.to(otherEllipses, {\n          drawSVG: '100% 100%'\n        }, 'start').set(otherEllipses, {\n          drawSVG: '0%'\n        });\n      }\n    }\n  }, {\n    key: \"_detachEvents\",\n    value: function _detachEvents() {\n      var _this4 = this;\n      this.elements.topLevelLinks.forEach(function (el) {\n        app.hoverEffect.detachEvents(el, _this4._handlers.hoverIn, _this4._handlers.hoverOut);\n        el.removeEventListener('click', _this4._handlers.click);\n      });\n    }\n  }, {\n    key: \"_removeShapes\",\n    value: function _removeShapes() {\n      this.shapes.forEach(function (el) {\n        if (el instanceof HTMLElement) {\n          el.remove();\n        }\n      });\n      this.shapes = [];\n    }\n  }, {\n    key: \"_observeChanges\",\n    value: function _observeChanges() {\n      var _this5 = this;\n      this.observer = new MutationObserver(this._handlers.classChange);\n      this.elements.topLevelElements.forEach(function (el) {\n        _this5.observer.observe(el, {\n          attributes: true,\n          attributeFilter: ['class'],\n          attributeOldValue: true\n        });\n      });\n    }\n  }, {\n    key: \"_unObserveChanges\",\n    value: function _unObserveChanges() {\n      if (this.observer) {\n        this.observer.disconnect();\n        this.observer = null;\n      }\n    }\n  }, {\n    key: \"_onClassChange\",\n    value: function _onClassChange(mutations) {\n      var _this6 = this;\n      mutations.forEach(function (mutationRecord) {\n        var target = mutationRecord.target;\n        if (target.classList.contains('current-menu-item')) {\n          _this6.tl.clear();\n          _this6.elements.topLevelCurrentElement[0] = target;\n          _this6.elements.topLevelCurrentLink[0] = target.querySelector(':scope > a');\n          var otherEllipses = [],\n            currentEllipse = target.querySelector('ellipse');\n          _this6.elements.topLevelElements.forEach(function (element) {\n            if (target !== element) {\n              var ellipse = element.querySelector('ellipse');\n              if (ellipse) {\n                otherEllipses.push(ellipse);\n              }\n            }\n          });\n          if (currentEllipse) {\n            _this6.tl.to(currentEllipse, {\n              drawSVG: '100% 0%'\n            }, 'start');\n          }\n          if (otherEllipses.length) {\n            _this6.tl.to(otherEllipses, {\n              drawSVG: '100% 100%'\n            }, 'start');\n          }\n        }\n        if (!target.classList.contains('current-menu-item') && mutationRecord.oldValue.includes('current-menu-item')) {\n          _this6.tl.clear();\n          _this6.elements.topLevelCurrentElement[0] = _this6.element.querySelector(':scope > li.current-menu-item:not(.menu-item-has-children)');\n          _this6.elements.topLevelCurrentLink[0] = _this6.element.querySelector(':scope > li.current-menu-item:not(.menu-item-has-children) > a');\n          var _currentEllipse = target.querySelector('ellipse');\n          _this6.tl.to(_currentEllipse, {\n            drawSVG: '100% 100%'\n          }, 'start').set(_currentEllipse, {\n            drawSVG: '0%'\n          });\n        }\n      });\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/MenuClassic.js\n");

/***/ }),

/***/ "./src/js/components/MenuOverlay.js":
/*!******************************************!*\
  !*** ./src/js/components/MenuOverlay.js ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MenuOverlay)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar MenuOverlay = /*#__PURE__*/function (_BaseComponent) {\n  function MenuOverlay(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, MenuOverlay);\n    _this = _callSuper(this, MenuOverlay, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        matchMedia: '(min-width: 992px)',\n        loop: true,\n        autoCenterCurrentItem: true,\n        scroll: app.options.virtualScroll,\n        type: 'wheel,touch',\n        wheelSpeed: -1,\n        speedEffect: {\n          skew: -0.1,\n          scale: -0.1\n        }\n      },\n      // Component inner elements\n      innerElements: {\n        topLevelItems: ':scope > li',\n        allSubMenus: '.sub-menu'\n      }\n    }]);\n    _this.submenuHolder = null;\n    _this.currentSubmenuRef = null;\n    _this.currentSubmenuParentRef = null;\n    _this.setup();\n    return _this;\n  }\n  _inherits(MenuOverlay, _BaseComponent);\n  return _createClass(MenuOverlay, [{\n    key: \"init\",\n    value: function init() {\n      if (this.elements.allSubMenus.length) {\n        this._createSubmenuHolder();\n        this._addSubmenusLabels();\n      }\n      this._createInfiniteList();\n    }\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      if (this.infiniteList) {\n        this.infiniteList.destroy();\n      }\n    }\n  }, {\n    key: \"scrollListToCurrentTopLevelItem\",\n    value: function scrollListToCurrentTopLevelItem() {\n      var _this2 = this;\n      if (this.infiniteList && this.infiniteList.enabled && !!this.options.autoCenterCurrentItem) {\n        var position = this.options.loop ? 'center' : 'start';\n        this.infiniteList.pluginsReady.then(function () {\n          _this2.infiniteList.controller.scrollTo({\n            indexItem: _this2._getCurrentTopLevelItemIndex(),\n            position: position,\n            animate: false\n          });\n        });\n      }\n    }\n  }, {\n    key: \"enableScroll\",\n    value: function enableScroll() {\n      var _this3 = this;\n      if (this.infiniteList && this.infiniteList.enabled) {\n        this.infiniteList.pluginsReady.then(function () {\n          _this3.infiniteList.plugins.scroll.enable();\n        });\n      }\n    }\n  }, {\n    key: \"disableScroll\",\n    value: function disableScroll() {\n      var _this4 = this;\n      if (this.infiniteList && this.infiniteList.enabled) {\n        this.infiniteList.pluginsReady.then(function () {\n          _this4.infiniteList.plugins.scroll.disable();\n        });\n      }\n    }\n  }, {\n    key: \"moveSubmenuToHolder\",\n    value: function moveSubmenuToHolder(submenu) {\n      if (submenu && submenu.parentElement) {\n        this.currentSubmenuRef = submenu;\n        this.currentSubmenuParentRef = submenu.parentElement;\n        if (this.submenuHolder) {\n          this.submenuHolder.appendChild(submenu);\n        }\n      }\n    }\n  }, {\n    key: \"restoreSubmenuOriginalPlacement\",\n    value: function restoreSubmenuOriginalPlacement() {\n      if (this.currentSubmenuParentRef && this.currentSubmenuRef) {\n        this.currentSubmenuParentRef.appendChild(this.currentSubmenuRef);\n        this.currentSubmenuRef = null;\n        this.currentSubmenuParentRef = null;\n      }\n    }\n  }, {\n    key: \"_createInfiniteList\",\n    value: function _createInfiniteList() {\n      this.infiniteList = new ArtsInfiniteList(this.element, {\n        direction: 'vertical',\n        listElementsSelector: ':scope > li',\n        matchMedia: this.options.matchMedia,\n        multiLane: false,\n        loop: this.options.loop,\n        autoClone: this.options.loop,\n        scroll: this.options.scroll,\n        plugins: {\n          scroll: {\n            type: this.options.type,\n            preventDefault: true\n          },\n          speedEffect: this.options.speedEffect\n        },\n        focusObserver: {\n          watchListElements: false,\n          debounceTime: 1200\n        }\n      });\n    }\n  }, {\n    key: \"_getCurrentTopLevelItemIndex\",\n    value: function _getCurrentTopLevelItemIndex() {\n      var currentMenuItemIndex = 0;\n      this.elements.topLevelItems.forEach(function (el, index) {\n        if (el.classList.contains('current-menu-ancestor') || el.classList.contains('current-menu-item')) {\n          currentMenuItemIndex = index;\n        }\n      });\n      return currentMenuItemIndex;\n    }\n  }, {\n    key: \"_addSubmenusLabels\",\n    value: function _addSubmenusLabels() {\n      this.elements.allSubMenus.forEach(function (el) {\n        var openerHeading = el.parentElement.querySelector('a .menu-overlay__heading');\n        el.setAttribute('aria-label', openerHeading.textContent);\n      });\n    }\n  }, {\n    key: \"_createSubmenuHolder\",\n    value: function _createSubmenuHolder() {\n      var holder = document.createElement('div');\n      holder.classList.add('sub-menu-holder');\n      this.element.appendChild(holder);\n      this.submenuHolder = holder;\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/MenuOverlay.js\n");

/***/ }),

/***/ "./src/js/components/MyCustomComponent.js":
/*!************************************************!*\
  !*** ./src/js/components/MyCustomComponent.js ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ MyCustomComponent)\n/* harmony export */ });\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(t) { var i = _toPrimitive(t, \"string\"); return \"symbol\" == _typeof(i) ? i : i + \"\"; }\nfunction _toPrimitive(t, r) { if (\"object\" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || \"default\"); if (\"object\" != _typeof(i)) return i; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (\"string\" === r ? String : Number)(t); }\nfunction _callSuper(t, o, e) { return o = _getPrototypeOf(o), _possibleConstructorReturn(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], _getPrototypeOf(t).constructor) : o.apply(t, e)); }\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\nfunction _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\nvar MyCustomComponent = /*#__PURE__*/function (_BaseComponent) {\n  function MyCustomComponent(_ref) {\n    var _this;\n    var name = _ref.name,\n      loadInnerComponents = _ref.loadInnerComponents,\n      parent = _ref.parent,\n      element = _ref.element;\n    _classCallCheck(this, MyCustomComponent);\n    _this = _callSuper(this, MyCustomComponent, [{\n      name: name,\n      loadInnerComponents: loadInnerComponents,\n      parent: parent,\n      element: element,\n      // Component default options\n      defaults: {\n        myOption1: true,\n        myOption2: 'stringValue',\n        myAnotherOption: 55\n      },\n      // Component inner elements\n      innerElements: {\n        myInnerElementsSet: '.js-my-custom-component__element',\n        myAnotherInnerElementsSet: '.js-my-custom-component__another-element'\n      }\n    }]);\n\n    // Setup the component and run init() function\n    _this.setup();\n    return _this;\n  }\n\n  // Component code goes here\n  _inherits(MyCustomComponent, _BaseComponent);\n  return _createClass(MyCustomComponent, [{\n    key: \"init\",\n    value: function init() {\n      // You can organize it in functions\n      this.myFunction1();\n      this.myFunction2();\n      this.myFunction3();\n    }\n\n    // This is the place to clean up your component work if needed (optional)\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      console.log('This code will be automatically executed before the next page is loaded in AJAX transition');\n    }\n\n    // Prepare your animation scene here (set initial values, positions, transforms, etc)\n  }, {\n    key: \"prepareAnimation\",\n    value: function prepareAnimation() {\n      var _this2 = this;\n      return new Promise(function (resolve) {\n        var tl = gsap.timeline({\n          onComplete: function onComplete() {\n            return resolve(true);\n          }\n        });\n        if (_this2.elements.myInnerElementsSet.length) {\n          tl.set(_this2.elements.myInnerElementsSet, {\n            y: '100%',\n            autoAlpha: 0\n          });\n        }\n      });\n    }\n\n    // Put the actual on-scroll animation scene there\n  }, {\n    key: \"getRevealAnimation\",\n    value: function getRevealAnimation() {\n      var tl = gsap.timeline({\n        paused: true\n      });\n      if (this.elements.myInnerElementsSet.length) {\n        tl.to(this.elements.myInnerElementsSet, {\n          y: '0%',\n          autoAlpha: 1,\n          stagger: 0.2\n        });\n      }\n      return tl;\n    }\n  }, {\n    key: \"myFunction1\",\n    value: function myFunction1() {\n      console.log('1. Custom code here...');\n    }\n  }, {\n    key: \"myFunction2\",\n    value: function myFunction2() {\n      console.log('2. Custom code there...');\n    }\n  }, {\n    key: \"myFunction3\",\n    value: function myFunction3() {\n      console.log('3. Third function call');\n\n      // Use \"this.options\" to get a parsed object of the component options\n      console.log(\"Here goes the value of \\\"myOption1\\\": \".concat(this.options.myOption1));\n      console.log(\"Here goes the value of \\\"myOption2\\\": \".concat(this.options.myOption2));\n      console.log(\"Here goes the value of \\\"myAnotherOption\\\": \".concat(this.options.myAnotherOption));\n\n      // Use \"this.element\" for the reference of the component HTML element\n      console.log(\"This is the component container HTML element\");\n      console.log(this.element);\n      console.log(\"=================\");\n\n      // Use \"this.elements\" for the references of the inner component elements\n      console.log(\"Component inner elements:\");\n      console.log(this.elements);\n      console.log(\"=================\");\n\n      // Use \"this.innerSelectors\" to get the original selectors of inner elements\n      console.log(\"Here are selectors of the inner elements:\");\n      console.log(this.innerSelectors);\n      console.log(\"=================\");\n    }\n  }]);\n}(BaseComponent);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/js/components/MyCustomComponent.js\n");

/***/ })

}]);